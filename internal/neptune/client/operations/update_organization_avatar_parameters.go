// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateOrganizationAvatarParams creates a new UpdateOrganizationAvatarParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateOrganizationAvatarParams() *UpdateOrganizationAvatarParams {
	return &UpdateOrganizationAvatarParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrganizationAvatarParamsWithTimeout creates a new UpdateOrganizationAvatarParams object
// with the ability to set a timeout on a request.
func NewUpdateOrganizationAvatarParamsWithTimeout(timeout time.Duration) *UpdateOrganizationAvatarParams {
	return &UpdateOrganizationAvatarParams{
		timeout: timeout,
	}
}

// NewUpdateOrganizationAvatarParamsWithContext creates a new UpdateOrganizationAvatarParams object
// with the ability to set a context for a request.
func NewUpdateOrganizationAvatarParamsWithContext(ctx context.Context) *UpdateOrganizationAvatarParams {
	return &UpdateOrganizationAvatarParams{
		Context: ctx,
	}
}

// NewUpdateOrganizationAvatarParamsWithHTTPClient creates a new UpdateOrganizationAvatarParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateOrganizationAvatarParamsWithHTTPClient(client *http.Client) *UpdateOrganizationAvatarParams {
	return &UpdateOrganizationAvatarParams{
		HTTPClient: client,
	}
}

/*
UpdateOrganizationAvatarParams contains all the parameters to send to the API endpoint

	for the update organization avatar operation.

	Typically these are written to a http.Request.
*/
type UpdateOrganizationAvatarParams struct {

	// AvatarFile.
	AvatarFile runtime.NamedReadCloser

	// OrganizationID.
	//
	// Format: uuid
	OrganizationID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update organization avatar params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOrganizationAvatarParams) WithDefaults() *UpdateOrganizationAvatarParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update organization avatar params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOrganizationAvatarParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) WithTimeout(timeout time.Duration) *UpdateOrganizationAvatarParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) WithContext(ctx context.Context) *UpdateOrganizationAvatarParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) WithHTTPClient(client *http.Client) *UpdateOrganizationAvatarParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAvatarFile adds the avatarFile to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) WithAvatarFile(avatarFile runtime.NamedReadCloser) *UpdateOrganizationAvatarParams {
	o.SetAvatarFile(avatarFile)
	return o
}

// SetAvatarFile adds the avatarFile to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) SetAvatarFile(avatarFile runtime.NamedReadCloser) {
	o.AvatarFile = avatarFile
}

// WithOrganizationID adds the organizationID to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) WithOrganizationID(organizationID strfmt.UUID) *UpdateOrganizationAvatarParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the update organization avatar params
func (o *UpdateOrganizationAvatarParams) SetOrganizationID(organizationID strfmt.UUID) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrganizationAvatarParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	// form file param avatarFile
	if err := r.SetFileParam("avatarFile", o.AvatarFile); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
