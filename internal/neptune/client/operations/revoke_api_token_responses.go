// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// RevokeAPITokenReader is a Reader for the RevokeAPIToken structure.
type RevokeAPITokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeAPITokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeAPITokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeAPITokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeAPITokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeAPITokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeAPITokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewRevokeAPITokenRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRevokeAPITokenUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/backend/v1/authorization/api-token] revokeApiToken", response, response.Code())
	}
}

// NewRevokeAPITokenOK creates a RevokeAPITokenOK with default headers values
func NewRevokeAPITokenOK() *RevokeAPITokenOK {
	return &RevokeAPITokenOK{}
}

/*
RevokeAPITokenOK describes a response with status code 200, with default header values.

No response
*/
type RevokeAPITokenOK struct {
}

// IsSuccess returns true when this revoke Api token o k response has a 2xx status code
func (o *RevokeAPITokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke Api token o k response has a 3xx status code
func (o *RevokeAPITokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token o k response has a 4xx status code
func (o *RevokeAPITokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke Api token o k response has a 5xx status code
func (o *RevokeAPITokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token o k response a status code equal to that given
func (o *RevokeAPITokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the revoke Api token o k response
func (o *RevokeAPITokenOK) Code() int {
	return 200
}

func (o *RevokeAPITokenOK) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenOK ", 200)
}

func (o *RevokeAPITokenOK) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenOK ", 200)
}

func (o *RevokeAPITokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeAPITokenBadRequest creates a RevokeAPITokenBadRequest with default headers values
func NewRevokeAPITokenBadRequest() *RevokeAPITokenBadRequest {
	return &RevokeAPITokenBadRequest{}
}

/*
RevokeAPITokenBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RevokeAPITokenBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke Api token bad request response has a 2xx status code
func (o *RevokeAPITokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke Api token bad request response has a 3xx status code
func (o *RevokeAPITokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token bad request response has a 4xx status code
func (o *RevokeAPITokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke Api token bad request response has a 5xx status code
func (o *RevokeAPITokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token bad request response a status code equal to that given
func (o *RevokeAPITokenBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke Api token bad request response
func (o *RevokeAPITokenBadRequest) Code() int {
	return 400
}

func (o *RevokeAPITokenBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeAPITokenBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeAPITokenBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeAPITokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeAPITokenUnauthorized creates a RevokeAPITokenUnauthorized with default headers values
func NewRevokeAPITokenUnauthorized() *RevokeAPITokenUnauthorized {
	return &RevokeAPITokenUnauthorized{}
}

/*
RevokeAPITokenUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeAPITokenUnauthorized struct {
}

// IsSuccess returns true when this revoke Api token unauthorized response has a 2xx status code
func (o *RevokeAPITokenUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke Api token unauthorized response has a 3xx status code
func (o *RevokeAPITokenUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token unauthorized response has a 4xx status code
func (o *RevokeAPITokenUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke Api token unauthorized response has a 5xx status code
func (o *RevokeAPITokenUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token unauthorized response a status code equal to that given
func (o *RevokeAPITokenUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke Api token unauthorized response
func (o *RevokeAPITokenUnauthorized) Code() int {
	return 401
}

func (o *RevokeAPITokenUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenUnauthorized ", 401)
}

func (o *RevokeAPITokenUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenUnauthorized ", 401)
}

func (o *RevokeAPITokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeAPITokenForbidden creates a RevokeAPITokenForbidden with default headers values
func NewRevokeAPITokenForbidden() *RevokeAPITokenForbidden {
	return &RevokeAPITokenForbidden{}
}

/*
RevokeAPITokenForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeAPITokenForbidden struct {
}

// IsSuccess returns true when this revoke Api token forbidden response has a 2xx status code
func (o *RevokeAPITokenForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke Api token forbidden response has a 3xx status code
func (o *RevokeAPITokenForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token forbidden response has a 4xx status code
func (o *RevokeAPITokenForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke Api token forbidden response has a 5xx status code
func (o *RevokeAPITokenForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token forbidden response a status code equal to that given
func (o *RevokeAPITokenForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke Api token forbidden response
func (o *RevokeAPITokenForbidden) Code() int {
	return 403
}

func (o *RevokeAPITokenForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenForbidden ", 403)
}

func (o *RevokeAPITokenForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenForbidden ", 403)
}

func (o *RevokeAPITokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeAPITokenNotFound creates a RevokeAPITokenNotFound with default headers values
func NewRevokeAPITokenNotFound() *RevokeAPITokenNotFound {
	return &RevokeAPITokenNotFound{}
}

/*
RevokeAPITokenNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RevokeAPITokenNotFound struct {
}

// IsSuccess returns true when this revoke Api token not found response has a 2xx status code
func (o *RevokeAPITokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke Api token not found response has a 3xx status code
func (o *RevokeAPITokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token not found response has a 4xx status code
func (o *RevokeAPITokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke Api token not found response has a 5xx status code
func (o *RevokeAPITokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token not found response a status code equal to that given
func (o *RevokeAPITokenNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke Api token not found response
func (o *RevokeAPITokenNotFound) Code() int {
	return 404
}

func (o *RevokeAPITokenNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenNotFound ", 404)
}

func (o *RevokeAPITokenNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenNotFound ", 404)
}

func (o *RevokeAPITokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeAPITokenRequestTimeout creates a RevokeAPITokenRequestTimeout with default headers values
func NewRevokeAPITokenRequestTimeout() *RevokeAPITokenRequestTimeout {
	return &RevokeAPITokenRequestTimeout{}
}

/*
RevokeAPITokenRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type RevokeAPITokenRequestTimeout struct {
}

// IsSuccess returns true when this revoke Api token request timeout response has a 2xx status code
func (o *RevokeAPITokenRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke Api token request timeout response has a 3xx status code
func (o *RevokeAPITokenRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token request timeout response has a 4xx status code
func (o *RevokeAPITokenRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke Api token request timeout response has a 5xx status code
func (o *RevokeAPITokenRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token request timeout response a status code equal to that given
func (o *RevokeAPITokenRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the revoke Api token request timeout response
func (o *RevokeAPITokenRequestTimeout) Code() int {
	return 408
}

func (o *RevokeAPITokenRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenRequestTimeout ", 408)
}

func (o *RevokeAPITokenRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenRequestTimeout ", 408)
}

func (o *RevokeAPITokenRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeAPITokenUnprocessableEntity creates a RevokeAPITokenUnprocessableEntity with default headers values
func NewRevokeAPITokenUnprocessableEntity() *RevokeAPITokenUnprocessableEntity {
	return &RevokeAPITokenUnprocessableEntity{}
}

/*
RevokeAPITokenUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type RevokeAPITokenUnprocessableEntity struct {
}

// IsSuccess returns true when this revoke Api token unprocessable entity response has a 2xx status code
func (o *RevokeAPITokenUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke Api token unprocessable entity response has a 3xx status code
func (o *RevokeAPITokenUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke Api token unprocessable entity response has a 4xx status code
func (o *RevokeAPITokenUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke Api token unprocessable entity response has a 5xx status code
func (o *RevokeAPITokenUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke Api token unprocessable entity response a status code equal to that given
func (o *RevokeAPITokenUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the revoke Api token unprocessable entity response
func (o *RevokeAPITokenUnprocessableEntity) Code() int {
	return 422
}

func (o *RevokeAPITokenUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenUnprocessableEntity ", 422)
}

func (o *RevokeAPITokenUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/authorization/api-token][%d] revokeApiTokenUnprocessableEntity ", 422)
}

func (o *RevokeAPITokenUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
