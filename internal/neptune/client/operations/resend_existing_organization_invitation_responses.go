// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// ResendExistingOrganizationInvitationReader is a Reader for the ResendExistingOrganizationInvitation structure.
type ResendExistingOrganizationInvitationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResendExistingOrganizationInvitationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResendExistingOrganizationInvitationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResendExistingOrganizationInvitationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewResendExistingOrganizationInvitationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResendExistingOrganizationInvitationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResendExistingOrganizationInvitationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewResendExistingOrganizationInvitationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewResendExistingOrganizationInvitationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/invitations/organization/{invitationId}/resend] resendExistingOrganizationInvitation", response, response.Code())
	}
}

// NewResendExistingOrganizationInvitationOK creates a ResendExistingOrganizationInvitationOK with default headers values
func NewResendExistingOrganizationInvitationOK() *ResendExistingOrganizationInvitationOK {
	return &ResendExistingOrganizationInvitationOK{}
}

/*
ResendExistingOrganizationInvitationOK describes a response with status code 200, with default header values.

No response
*/
type ResendExistingOrganizationInvitationOK struct {
}

// IsSuccess returns true when this resend existing organization invitation o k response has a 2xx status code
func (o *ResendExistingOrganizationInvitationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resend existing organization invitation o k response has a 3xx status code
func (o *ResendExistingOrganizationInvitationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation o k response has a 4xx status code
func (o *ResendExistingOrganizationInvitationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this resend existing organization invitation o k response has a 5xx status code
func (o *ResendExistingOrganizationInvitationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation o k response a status code equal to that given
func (o *ResendExistingOrganizationInvitationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the resend existing organization invitation o k response
func (o *ResendExistingOrganizationInvitationOK) Code() int {
	return 200
}

func (o *ResendExistingOrganizationInvitationOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationOK ", 200)
}

func (o *ResendExistingOrganizationInvitationOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationOK ", 200)
}

func (o *ResendExistingOrganizationInvitationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendExistingOrganizationInvitationBadRequest creates a ResendExistingOrganizationInvitationBadRequest with default headers values
func NewResendExistingOrganizationInvitationBadRequest() *ResendExistingOrganizationInvitationBadRequest {
	return &ResendExistingOrganizationInvitationBadRequest{}
}

/*
ResendExistingOrganizationInvitationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ResendExistingOrganizationInvitationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this resend existing organization invitation bad request response has a 2xx status code
func (o *ResendExistingOrganizationInvitationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend existing organization invitation bad request response has a 3xx status code
func (o *ResendExistingOrganizationInvitationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation bad request response has a 4xx status code
func (o *ResendExistingOrganizationInvitationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend existing organization invitation bad request response has a 5xx status code
func (o *ResendExistingOrganizationInvitationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation bad request response a status code equal to that given
func (o *ResendExistingOrganizationInvitationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the resend existing organization invitation bad request response
func (o *ResendExistingOrganizationInvitationBadRequest) Code() int {
	return 400
}

func (o *ResendExistingOrganizationInvitationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *ResendExistingOrganizationInvitationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *ResendExistingOrganizationInvitationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResendExistingOrganizationInvitationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResendExistingOrganizationInvitationUnauthorized creates a ResendExistingOrganizationInvitationUnauthorized with default headers values
func NewResendExistingOrganizationInvitationUnauthorized() *ResendExistingOrganizationInvitationUnauthorized {
	return &ResendExistingOrganizationInvitationUnauthorized{}
}

/*
ResendExistingOrganizationInvitationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ResendExistingOrganizationInvitationUnauthorized struct {
}

// IsSuccess returns true when this resend existing organization invitation unauthorized response has a 2xx status code
func (o *ResendExistingOrganizationInvitationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend existing organization invitation unauthorized response has a 3xx status code
func (o *ResendExistingOrganizationInvitationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation unauthorized response has a 4xx status code
func (o *ResendExistingOrganizationInvitationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend existing organization invitation unauthorized response has a 5xx status code
func (o *ResendExistingOrganizationInvitationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation unauthorized response a status code equal to that given
func (o *ResendExistingOrganizationInvitationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the resend existing organization invitation unauthorized response
func (o *ResendExistingOrganizationInvitationUnauthorized) Code() int {
	return 401
}

func (o *ResendExistingOrganizationInvitationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationUnauthorized ", 401)
}

func (o *ResendExistingOrganizationInvitationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationUnauthorized ", 401)
}

func (o *ResendExistingOrganizationInvitationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendExistingOrganizationInvitationForbidden creates a ResendExistingOrganizationInvitationForbidden with default headers values
func NewResendExistingOrganizationInvitationForbidden() *ResendExistingOrganizationInvitationForbidden {
	return &ResendExistingOrganizationInvitationForbidden{}
}

/*
ResendExistingOrganizationInvitationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ResendExistingOrganizationInvitationForbidden struct {
}

// IsSuccess returns true when this resend existing organization invitation forbidden response has a 2xx status code
func (o *ResendExistingOrganizationInvitationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend existing organization invitation forbidden response has a 3xx status code
func (o *ResendExistingOrganizationInvitationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation forbidden response has a 4xx status code
func (o *ResendExistingOrganizationInvitationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend existing organization invitation forbidden response has a 5xx status code
func (o *ResendExistingOrganizationInvitationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation forbidden response a status code equal to that given
func (o *ResendExistingOrganizationInvitationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the resend existing organization invitation forbidden response
func (o *ResendExistingOrganizationInvitationForbidden) Code() int {
	return 403
}

func (o *ResendExistingOrganizationInvitationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationForbidden ", 403)
}

func (o *ResendExistingOrganizationInvitationForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationForbidden ", 403)
}

func (o *ResendExistingOrganizationInvitationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendExistingOrganizationInvitationNotFound creates a ResendExistingOrganizationInvitationNotFound with default headers values
func NewResendExistingOrganizationInvitationNotFound() *ResendExistingOrganizationInvitationNotFound {
	return &ResendExistingOrganizationInvitationNotFound{}
}

/*
ResendExistingOrganizationInvitationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResendExistingOrganizationInvitationNotFound struct {
}

// IsSuccess returns true when this resend existing organization invitation not found response has a 2xx status code
func (o *ResendExistingOrganizationInvitationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend existing organization invitation not found response has a 3xx status code
func (o *ResendExistingOrganizationInvitationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation not found response has a 4xx status code
func (o *ResendExistingOrganizationInvitationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend existing organization invitation not found response has a 5xx status code
func (o *ResendExistingOrganizationInvitationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation not found response a status code equal to that given
func (o *ResendExistingOrganizationInvitationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the resend existing organization invitation not found response
func (o *ResendExistingOrganizationInvitationNotFound) Code() int {
	return 404
}

func (o *ResendExistingOrganizationInvitationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationNotFound ", 404)
}

func (o *ResendExistingOrganizationInvitationNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationNotFound ", 404)
}

func (o *ResendExistingOrganizationInvitationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendExistingOrganizationInvitationRequestTimeout creates a ResendExistingOrganizationInvitationRequestTimeout with default headers values
func NewResendExistingOrganizationInvitationRequestTimeout() *ResendExistingOrganizationInvitationRequestTimeout {
	return &ResendExistingOrganizationInvitationRequestTimeout{}
}

/*
ResendExistingOrganizationInvitationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ResendExistingOrganizationInvitationRequestTimeout struct {
}

// IsSuccess returns true when this resend existing organization invitation request timeout response has a 2xx status code
func (o *ResendExistingOrganizationInvitationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend existing organization invitation request timeout response has a 3xx status code
func (o *ResendExistingOrganizationInvitationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation request timeout response has a 4xx status code
func (o *ResendExistingOrganizationInvitationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend existing organization invitation request timeout response has a 5xx status code
func (o *ResendExistingOrganizationInvitationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation request timeout response a status code equal to that given
func (o *ResendExistingOrganizationInvitationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the resend existing organization invitation request timeout response
func (o *ResendExistingOrganizationInvitationRequestTimeout) Code() int {
	return 408
}

func (o *ResendExistingOrganizationInvitationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationRequestTimeout ", 408)
}

func (o *ResendExistingOrganizationInvitationRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationRequestTimeout ", 408)
}

func (o *ResendExistingOrganizationInvitationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendExistingOrganizationInvitationUnprocessableEntity creates a ResendExistingOrganizationInvitationUnprocessableEntity with default headers values
func NewResendExistingOrganizationInvitationUnprocessableEntity() *ResendExistingOrganizationInvitationUnprocessableEntity {
	return &ResendExistingOrganizationInvitationUnprocessableEntity{}
}

/*
ResendExistingOrganizationInvitationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ResendExistingOrganizationInvitationUnprocessableEntity struct {
}

// IsSuccess returns true when this resend existing organization invitation unprocessable entity response has a 2xx status code
func (o *ResendExistingOrganizationInvitationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend existing organization invitation unprocessable entity response has a 3xx status code
func (o *ResendExistingOrganizationInvitationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend existing organization invitation unprocessable entity response has a 4xx status code
func (o *ResendExistingOrganizationInvitationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend existing organization invitation unprocessable entity response has a 5xx status code
func (o *ResendExistingOrganizationInvitationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this resend existing organization invitation unprocessable entity response a status code equal to that given
func (o *ResendExistingOrganizationInvitationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the resend existing organization invitation unprocessable entity response
func (o *ResendExistingOrganizationInvitationUnprocessableEntity) Code() int {
	return 422
}

func (o *ResendExistingOrganizationInvitationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationUnprocessableEntity ", 422)
}

func (o *ResendExistingOrganizationInvitationUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/organization/{invitationId}/resend][%d] resendExistingOrganizationInvitationUnprocessableEntity ", 422)
}

func (o *ResendExistingOrganizationInvitationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
