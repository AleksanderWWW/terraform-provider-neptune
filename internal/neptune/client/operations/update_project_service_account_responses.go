// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateProjectServiceAccountReader is a Reader for the UpdateProjectServiceAccount structure.
type UpdateProjectServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProjectServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProjectServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProjectServiceAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateProjectServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateProjectServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProjectServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewUpdateProjectServiceAccountRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateProjectServiceAccountUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}] updateProjectServiceAccount", response, response.Code())
	}
}

// NewUpdateProjectServiceAccountOK creates a UpdateProjectServiceAccountOK with default headers values
func NewUpdateProjectServiceAccountOK() *UpdateProjectServiceAccountOK {
	return &UpdateProjectServiceAccountOK{}
}

/*
UpdateProjectServiceAccountOK describes a response with status code 200, with default header values.

OK
*/
type UpdateProjectServiceAccountOK struct {
	Payload *models.ServiceAccountWithRoleDTO
}

// IsSuccess returns true when this update project service account o k response has a 2xx status code
func (o *UpdateProjectServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update project service account o k response has a 3xx status code
func (o *UpdateProjectServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account o k response has a 4xx status code
func (o *UpdateProjectServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update project service account o k response has a 5xx status code
func (o *UpdateProjectServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account o k response a status code equal to that given
func (o *UpdateProjectServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update project service account o k response
func (o *UpdateProjectServiceAccountOK) Code() int {
	return 200
}

func (o *UpdateProjectServiceAccountOK) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountOK  %+v", 200, o.Payload)
}

func (o *UpdateProjectServiceAccountOK) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountOK  %+v", 200, o.Payload)
}

func (o *UpdateProjectServiceAccountOK) GetPayload() *models.ServiceAccountWithRoleDTO {
	return o.Payload
}

func (o *UpdateProjectServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceAccountWithRoleDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProjectServiceAccountBadRequest creates a UpdateProjectServiceAccountBadRequest with default headers values
func NewUpdateProjectServiceAccountBadRequest() *UpdateProjectServiceAccountBadRequest {
	return &UpdateProjectServiceAccountBadRequest{}
}

/*
UpdateProjectServiceAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateProjectServiceAccountBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update project service account bad request response has a 2xx status code
func (o *UpdateProjectServiceAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project service account bad request response has a 3xx status code
func (o *UpdateProjectServiceAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account bad request response has a 4xx status code
func (o *UpdateProjectServiceAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project service account bad request response has a 5xx status code
func (o *UpdateProjectServiceAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account bad request response a status code equal to that given
func (o *UpdateProjectServiceAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update project service account bad request response
func (o *UpdateProjectServiceAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateProjectServiceAccountBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateProjectServiceAccountBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateProjectServiceAccountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProjectServiceAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProjectServiceAccountUnauthorized creates a UpdateProjectServiceAccountUnauthorized with default headers values
func NewUpdateProjectServiceAccountUnauthorized() *UpdateProjectServiceAccountUnauthorized {
	return &UpdateProjectServiceAccountUnauthorized{}
}

/*
UpdateProjectServiceAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateProjectServiceAccountUnauthorized struct {
}

// IsSuccess returns true when this update project service account unauthorized response has a 2xx status code
func (o *UpdateProjectServiceAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project service account unauthorized response has a 3xx status code
func (o *UpdateProjectServiceAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account unauthorized response has a 4xx status code
func (o *UpdateProjectServiceAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project service account unauthorized response has a 5xx status code
func (o *UpdateProjectServiceAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account unauthorized response a status code equal to that given
func (o *UpdateProjectServiceAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update project service account unauthorized response
func (o *UpdateProjectServiceAccountUnauthorized) Code() int {
	return 401
}

func (o *UpdateProjectServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountUnauthorized ", 401)
}

func (o *UpdateProjectServiceAccountUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountUnauthorized ", 401)
}

func (o *UpdateProjectServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectServiceAccountForbidden creates a UpdateProjectServiceAccountForbidden with default headers values
func NewUpdateProjectServiceAccountForbidden() *UpdateProjectServiceAccountForbidden {
	return &UpdateProjectServiceAccountForbidden{}
}

/*
UpdateProjectServiceAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateProjectServiceAccountForbidden struct {
}

// IsSuccess returns true when this update project service account forbidden response has a 2xx status code
func (o *UpdateProjectServiceAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project service account forbidden response has a 3xx status code
func (o *UpdateProjectServiceAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account forbidden response has a 4xx status code
func (o *UpdateProjectServiceAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project service account forbidden response has a 5xx status code
func (o *UpdateProjectServiceAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account forbidden response a status code equal to that given
func (o *UpdateProjectServiceAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update project service account forbidden response
func (o *UpdateProjectServiceAccountForbidden) Code() int {
	return 403
}

func (o *UpdateProjectServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountForbidden ", 403)
}

func (o *UpdateProjectServiceAccountForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountForbidden ", 403)
}

func (o *UpdateProjectServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectServiceAccountNotFound creates a UpdateProjectServiceAccountNotFound with default headers values
func NewUpdateProjectServiceAccountNotFound() *UpdateProjectServiceAccountNotFound {
	return &UpdateProjectServiceAccountNotFound{}
}

/*
UpdateProjectServiceAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateProjectServiceAccountNotFound struct {
}

// IsSuccess returns true when this update project service account not found response has a 2xx status code
func (o *UpdateProjectServiceAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project service account not found response has a 3xx status code
func (o *UpdateProjectServiceAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account not found response has a 4xx status code
func (o *UpdateProjectServiceAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project service account not found response has a 5xx status code
func (o *UpdateProjectServiceAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account not found response a status code equal to that given
func (o *UpdateProjectServiceAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update project service account not found response
func (o *UpdateProjectServiceAccountNotFound) Code() int {
	return 404
}

func (o *UpdateProjectServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountNotFound ", 404)
}

func (o *UpdateProjectServiceAccountNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountNotFound ", 404)
}

func (o *UpdateProjectServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectServiceAccountRequestTimeout creates a UpdateProjectServiceAccountRequestTimeout with default headers values
func NewUpdateProjectServiceAccountRequestTimeout() *UpdateProjectServiceAccountRequestTimeout {
	return &UpdateProjectServiceAccountRequestTimeout{}
}

/*
UpdateProjectServiceAccountRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type UpdateProjectServiceAccountRequestTimeout struct {
}

// IsSuccess returns true when this update project service account request timeout response has a 2xx status code
func (o *UpdateProjectServiceAccountRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project service account request timeout response has a 3xx status code
func (o *UpdateProjectServiceAccountRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account request timeout response has a 4xx status code
func (o *UpdateProjectServiceAccountRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project service account request timeout response has a 5xx status code
func (o *UpdateProjectServiceAccountRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account request timeout response a status code equal to that given
func (o *UpdateProjectServiceAccountRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the update project service account request timeout response
func (o *UpdateProjectServiceAccountRequestTimeout) Code() int {
	return 408
}

func (o *UpdateProjectServiceAccountRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountRequestTimeout ", 408)
}

func (o *UpdateProjectServiceAccountRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountRequestTimeout ", 408)
}

func (o *UpdateProjectServiceAccountRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectServiceAccountUnprocessableEntity creates a UpdateProjectServiceAccountUnprocessableEntity with default headers values
func NewUpdateProjectServiceAccountUnprocessableEntity() *UpdateProjectServiceAccountUnprocessableEntity {
	return &UpdateProjectServiceAccountUnprocessableEntity{}
}

/*
UpdateProjectServiceAccountUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateProjectServiceAccountUnprocessableEntity struct {
}

// IsSuccess returns true when this update project service account unprocessable entity response has a 2xx status code
func (o *UpdateProjectServiceAccountUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project service account unprocessable entity response has a 3xx status code
func (o *UpdateProjectServiceAccountUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project service account unprocessable entity response has a 4xx status code
func (o *UpdateProjectServiceAccountUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project service account unprocessable entity response has a 5xx status code
func (o *UpdateProjectServiceAccountUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update project service account unprocessable entity response a status code equal to that given
func (o *UpdateProjectServiceAccountUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update project service account unprocessable entity response
func (o *UpdateProjectServiceAccountUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateProjectServiceAccountUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountUnprocessableEntity ", 422)
}

func (o *UpdateProjectServiceAccountUnprocessableEntity) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] updateProjectServiceAccountUnprocessableEntity ", 422)
}

func (o *UpdateProjectServiceAccountUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
