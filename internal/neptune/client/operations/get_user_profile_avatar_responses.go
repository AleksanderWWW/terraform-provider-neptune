// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetUserProfileAvatarReader is a Reader for the GetUserProfileAvatar structure.
type GetUserProfileAvatarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProfileAvatarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserProfileAvatarOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserProfileAvatarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserProfileAvatarUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserProfileAvatarForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserProfileAvatarNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserProfileAvatarRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUserProfileAvatarUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/userProfile/avatar] getUserProfileAvatar", response, response.Code())
	}
}

// NewGetUserProfileAvatarOK creates a GetUserProfileAvatarOK with default headers values
func NewGetUserProfileAvatarOK() *GetUserProfileAvatarOK {
	return &GetUserProfileAvatarOK{}
}

/*
GetUserProfileAvatarOK describes a response with status code 200, with default header values.

No response
*/
type GetUserProfileAvatarOK struct {
}

// IsSuccess returns true when this get user profile avatar o k response has a 2xx status code
func (o *GetUserProfileAvatarOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user profile avatar o k response has a 3xx status code
func (o *GetUserProfileAvatarOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar o k response has a 4xx status code
func (o *GetUserProfileAvatarOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user profile avatar o k response has a 5xx status code
func (o *GetUserProfileAvatarOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar o k response a status code equal to that given
func (o *GetUserProfileAvatarOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user profile avatar o k response
func (o *GetUserProfileAvatarOK) Code() int {
	return 200
}

func (o *GetUserProfileAvatarOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarOK ", 200)
}

func (o *GetUserProfileAvatarOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarOK ", 200)
}

func (o *GetUserProfileAvatarOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileAvatarBadRequest creates a GetUserProfileAvatarBadRequest with default headers values
func NewGetUserProfileAvatarBadRequest() *GetUserProfileAvatarBadRequest {
	return &GetUserProfileAvatarBadRequest{}
}

/*
GetUserProfileAvatarBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUserProfileAvatarBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user profile avatar bad request response has a 2xx status code
func (o *GetUserProfileAvatarBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile avatar bad request response has a 3xx status code
func (o *GetUserProfileAvatarBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar bad request response has a 4xx status code
func (o *GetUserProfileAvatarBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile avatar bad request response has a 5xx status code
func (o *GetUserProfileAvatarBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar bad request response a status code equal to that given
func (o *GetUserProfileAvatarBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user profile avatar bad request response
func (o *GetUserProfileAvatarBadRequest) Code() int {
	return 400
}

func (o *GetUserProfileAvatarBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserProfileAvatarBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserProfileAvatarBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProfileAvatarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileAvatarUnauthorized creates a GetUserProfileAvatarUnauthorized with default headers values
func NewGetUserProfileAvatarUnauthorized() *GetUserProfileAvatarUnauthorized {
	return &GetUserProfileAvatarUnauthorized{}
}

/*
GetUserProfileAvatarUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetUserProfileAvatarUnauthorized struct {
}

// IsSuccess returns true when this get user profile avatar unauthorized response has a 2xx status code
func (o *GetUserProfileAvatarUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile avatar unauthorized response has a 3xx status code
func (o *GetUserProfileAvatarUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar unauthorized response has a 4xx status code
func (o *GetUserProfileAvatarUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile avatar unauthorized response has a 5xx status code
func (o *GetUserProfileAvatarUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar unauthorized response a status code equal to that given
func (o *GetUserProfileAvatarUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get user profile avatar unauthorized response
func (o *GetUserProfileAvatarUnauthorized) Code() int {
	return 401
}

func (o *GetUserProfileAvatarUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarUnauthorized ", 401)
}

func (o *GetUserProfileAvatarUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarUnauthorized ", 401)
}

func (o *GetUserProfileAvatarUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileAvatarForbidden creates a GetUserProfileAvatarForbidden with default headers values
func NewGetUserProfileAvatarForbidden() *GetUserProfileAvatarForbidden {
	return &GetUserProfileAvatarForbidden{}
}

/*
GetUserProfileAvatarForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserProfileAvatarForbidden struct {
}

// IsSuccess returns true when this get user profile avatar forbidden response has a 2xx status code
func (o *GetUserProfileAvatarForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile avatar forbidden response has a 3xx status code
func (o *GetUserProfileAvatarForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar forbidden response has a 4xx status code
func (o *GetUserProfileAvatarForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile avatar forbidden response has a 5xx status code
func (o *GetUserProfileAvatarForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar forbidden response a status code equal to that given
func (o *GetUserProfileAvatarForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get user profile avatar forbidden response
func (o *GetUserProfileAvatarForbidden) Code() int {
	return 403
}

func (o *GetUserProfileAvatarForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarForbidden ", 403)
}

func (o *GetUserProfileAvatarForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarForbidden ", 403)
}

func (o *GetUserProfileAvatarForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileAvatarNotFound creates a GetUserProfileAvatarNotFound with default headers values
func NewGetUserProfileAvatarNotFound() *GetUserProfileAvatarNotFound {
	return &GetUserProfileAvatarNotFound{}
}

/*
GetUserProfileAvatarNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserProfileAvatarNotFound struct {
}

// IsSuccess returns true when this get user profile avatar not found response has a 2xx status code
func (o *GetUserProfileAvatarNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile avatar not found response has a 3xx status code
func (o *GetUserProfileAvatarNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar not found response has a 4xx status code
func (o *GetUserProfileAvatarNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile avatar not found response has a 5xx status code
func (o *GetUserProfileAvatarNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar not found response a status code equal to that given
func (o *GetUserProfileAvatarNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user profile avatar not found response
func (o *GetUserProfileAvatarNotFound) Code() int {
	return 404
}

func (o *GetUserProfileAvatarNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarNotFound ", 404)
}

func (o *GetUserProfileAvatarNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarNotFound ", 404)
}

func (o *GetUserProfileAvatarNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileAvatarRequestTimeout creates a GetUserProfileAvatarRequestTimeout with default headers values
func NewGetUserProfileAvatarRequestTimeout() *GetUserProfileAvatarRequestTimeout {
	return &GetUserProfileAvatarRequestTimeout{}
}

/*
GetUserProfileAvatarRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetUserProfileAvatarRequestTimeout struct {
}

// IsSuccess returns true when this get user profile avatar request timeout response has a 2xx status code
func (o *GetUserProfileAvatarRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile avatar request timeout response has a 3xx status code
func (o *GetUserProfileAvatarRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar request timeout response has a 4xx status code
func (o *GetUserProfileAvatarRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile avatar request timeout response has a 5xx status code
func (o *GetUserProfileAvatarRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar request timeout response a status code equal to that given
func (o *GetUserProfileAvatarRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get user profile avatar request timeout response
func (o *GetUserProfileAvatarRequestTimeout) Code() int {
	return 408
}

func (o *GetUserProfileAvatarRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarRequestTimeout ", 408)
}

func (o *GetUserProfileAvatarRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarRequestTimeout ", 408)
}

func (o *GetUserProfileAvatarRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileAvatarUnprocessableEntity creates a GetUserProfileAvatarUnprocessableEntity with default headers values
func NewGetUserProfileAvatarUnprocessableEntity() *GetUserProfileAvatarUnprocessableEntity {
	return &GetUserProfileAvatarUnprocessableEntity{}
}

/*
GetUserProfileAvatarUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUserProfileAvatarUnprocessableEntity struct {
}

// IsSuccess returns true when this get user profile avatar unprocessable entity response has a 2xx status code
func (o *GetUserProfileAvatarUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile avatar unprocessable entity response has a 3xx status code
func (o *GetUserProfileAvatarUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile avatar unprocessable entity response has a 4xx status code
func (o *GetUserProfileAvatarUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile avatar unprocessable entity response has a 5xx status code
func (o *GetUserProfileAvatarUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile avatar unprocessable entity response a status code equal to that given
func (o *GetUserProfileAvatarUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get user profile avatar unprocessable entity response
func (o *GetUserProfileAvatarUnprocessableEntity) Code() int {
	return 422
}

func (o *GetUserProfileAvatarUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarUnprocessableEntity ", 422)
}

func (o *GetUserProfileAvatarUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile/avatar][%d] getUserProfileAvatarUnprocessableEntity ", 422)
}

func (o *GetUserProfileAvatarUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
