// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateOrganizationAvatarReader is a Reader for the UpdateOrganizationAvatar structure.
type UpdateOrganizationAvatarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationAvatarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOrganizationAvatarOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOrganizationAvatarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOrganizationAvatarUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrganizationAvatarForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOrganizationAvatarNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewUpdateOrganizationAvatarRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateOrganizationAvatarUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/backend/v1/organizations2/{organizationId}/avatar] updateOrganizationAvatar", response, response.Code())
	}
}

// NewUpdateOrganizationAvatarOK creates a UpdateOrganizationAvatarOK with default headers values
func NewUpdateOrganizationAvatarOK() *UpdateOrganizationAvatarOK {
	return &UpdateOrganizationAvatarOK{}
}

/*
UpdateOrganizationAvatarOK describes a response with status code 200, with default header values.

OK
*/
type UpdateOrganizationAvatarOK struct {
	Payload *models.LinkDTO
}

// IsSuccess returns true when this update organization avatar o k response has a 2xx status code
func (o *UpdateOrganizationAvatarOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update organization avatar o k response has a 3xx status code
func (o *UpdateOrganizationAvatarOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar o k response has a 4xx status code
func (o *UpdateOrganizationAvatarOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization avatar o k response has a 5xx status code
func (o *UpdateOrganizationAvatarOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar o k response a status code equal to that given
func (o *UpdateOrganizationAvatarOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update organization avatar o k response
func (o *UpdateOrganizationAvatarOK) Code() int {
	return 200
}

func (o *UpdateOrganizationAvatarOK) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarOK  %+v", 200, o.Payload)
}

func (o *UpdateOrganizationAvatarOK) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarOK  %+v", 200, o.Payload)
}

func (o *UpdateOrganizationAvatarOK) GetPayload() *models.LinkDTO {
	return o.Payload
}

func (o *UpdateOrganizationAvatarOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LinkDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationAvatarBadRequest creates a UpdateOrganizationAvatarBadRequest with default headers values
func NewUpdateOrganizationAvatarBadRequest() *UpdateOrganizationAvatarBadRequest {
	return &UpdateOrganizationAvatarBadRequest{}
}

/*
UpdateOrganizationAvatarBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateOrganizationAvatarBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization avatar bad request response has a 2xx status code
func (o *UpdateOrganizationAvatarBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization avatar bad request response has a 3xx status code
func (o *UpdateOrganizationAvatarBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar bad request response has a 4xx status code
func (o *UpdateOrganizationAvatarBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization avatar bad request response has a 5xx status code
func (o *UpdateOrganizationAvatarBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar bad request response a status code equal to that given
func (o *UpdateOrganizationAvatarBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update organization avatar bad request response
func (o *UpdateOrganizationAvatarBadRequest) Code() int {
	return 400
}

func (o *UpdateOrganizationAvatarBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationAvatarBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationAvatarBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationAvatarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationAvatarUnauthorized creates a UpdateOrganizationAvatarUnauthorized with default headers values
func NewUpdateOrganizationAvatarUnauthorized() *UpdateOrganizationAvatarUnauthorized {
	return &UpdateOrganizationAvatarUnauthorized{}
}

/*
UpdateOrganizationAvatarUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateOrganizationAvatarUnauthorized struct {
}

// IsSuccess returns true when this update organization avatar unauthorized response has a 2xx status code
func (o *UpdateOrganizationAvatarUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization avatar unauthorized response has a 3xx status code
func (o *UpdateOrganizationAvatarUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar unauthorized response has a 4xx status code
func (o *UpdateOrganizationAvatarUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization avatar unauthorized response has a 5xx status code
func (o *UpdateOrganizationAvatarUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar unauthorized response a status code equal to that given
func (o *UpdateOrganizationAvatarUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update organization avatar unauthorized response
func (o *UpdateOrganizationAvatarUnauthorized) Code() int {
	return 401
}

func (o *UpdateOrganizationAvatarUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarUnauthorized ", 401)
}

func (o *UpdateOrganizationAvatarUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarUnauthorized ", 401)
}

func (o *UpdateOrganizationAvatarUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationAvatarForbidden creates a UpdateOrganizationAvatarForbidden with default headers values
func NewUpdateOrganizationAvatarForbidden() *UpdateOrganizationAvatarForbidden {
	return &UpdateOrganizationAvatarForbidden{}
}

/*
UpdateOrganizationAvatarForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateOrganizationAvatarForbidden struct {
}

// IsSuccess returns true when this update organization avatar forbidden response has a 2xx status code
func (o *UpdateOrganizationAvatarForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization avatar forbidden response has a 3xx status code
func (o *UpdateOrganizationAvatarForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar forbidden response has a 4xx status code
func (o *UpdateOrganizationAvatarForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization avatar forbidden response has a 5xx status code
func (o *UpdateOrganizationAvatarForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar forbidden response a status code equal to that given
func (o *UpdateOrganizationAvatarForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update organization avatar forbidden response
func (o *UpdateOrganizationAvatarForbidden) Code() int {
	return 403
}

func (o *UpdateOrganizationAvatarForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarForbidden ", 403)
}

func (o *UpdateOrganizationAvatarForbidden) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarForbidden ", 403)
}

func (o *UpdateOrganizationAvatarForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationAvatarNotFound creates a UpdateOrganizationAvatarNotFound with default headers values
func NewUpdateOrganizationAvatarNotFound() *UpdateOrganizationAvatarNotFound {
	return &UpdateOrganizationAvatarNotFound{}
}

/*
UpdateOrganizationAvatarNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateOrganizationAvatarNotFound struct {
}

// IsSuccess returns true when this update organization avatar not found response has a 2xx status code
func (o *UpdateOrganizationAvatarNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization avatar not found response has a 3xx status code
func (o *UpdateOrganizationAvatarNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar not found response has a 4xx status code
func (o *UpdateOrganizationAvatarNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization avatar not found response has a 5xx status code
func (o *UpdateOrganizationAvatarNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar not found response a status code equal to that given
func (o *UpdateOrganizationAvatarNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update organization avatar not found response
func (o *UpdateOrganizationAvatarNotFound) Code() int {
	return 404
}

func (o *UpdateOrganizationAvatarNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarNotFound ", 404)
}

func (o *UpdateOrganizationAvatarNotFound) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarNotFound ", 404)
}

func (o *UpdateOrganizationAvatarNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationAvatarRequestTimeout creates a UpdateOrganizationAvatarRequestTimeout with default headers values
func NewUpdateOrganizationAvatarRequestTimeout() *UpdateOrganizationAvatarRequestTimeout {
	return &UpdateOrganizationAvatarRequestTimeout{}
}

/*
UpdateOrganizationAvatarRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type UpdateOrganizationAvatarRequestTimeout struct {
}

// IsSuccess returns true when this update organization avatar request timeout response has a 2xx status code
func (o *UpdateOrganizationAvatarRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization avatar request timeout response has a 3xx status code
func (o *UpdateOrganizationAvatarRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar request timeout response has a 4xx status code
func (o *UpdateOrganizationAvatarRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization avatar request timeout response has a 5xx status code
func (o *UpdateOrganizationAvatarRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar request timeout response a status code equal to that given
func (o *UpdateOrganizationAvatarRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the update organization avatar request timeout response
func (o *UpdateOrganizationAvatarRequestTimeout) Code() int {
	return 408
}

func (o *UpdateOrganizationAvatarRequestTimeout) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarRequestTimeout ", 408)
}

func (o *UpdateOrganizationAvatarRequestTimeout) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarRequestTimeout ", 408)
}

func (o *UpdateOrganizationAvatarRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationAvatarUnprocessableEntity creates a UpdateOrganizationAvatarUnprocessableEntity with default headers values
func NewUpdateOrganizationAvatarUnprocessableEntity() *UpdateOrganizationAvatarUnprocessableEntity {
	return &UpdateOrganizationAvatarUnprocessableEntity{}
}

/*
UpdateOrganizationAvatarUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateOrganizationAvatarUnprocessableEntity struct {
}

// IsSuccess returns true when this update organization avatar unprocessable entity response has a 2xx status code
func (o *UpdateOrganizationAvatarUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization avatar unprocessable entity response has a 3xx status code
func (o *UpdateOrganizationAvatarUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization avatar unprocessable entity response has a 4xx status code
func (o *UpdateOrganizationAvatarUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization avatar unprocessable entity response has a 5xx status code
func (o *UpdateOrganizationAvatarUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization avatar unprocessable entity response a status code equal to that given
func (o *UpdateOrganizationAvatarUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update organization avatar unprocessable entity response
func (o *UpdateOrganizationAvatarUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateOrganizationAvatarUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarUnprocessableEntity ", 422)
}

func (o *UpdateOrganizationAvatarUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/backend/v1/organizations2/{organizationId}/avatar][%d] updateOrganizationAvatarUnprocessableEntity ", 422)
}

func (o *UpdateOrganizationAvatarUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
