// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// UpdateActiveProjectsQuotaReader is a Reader for the UpdateActiveProjectsQuota structure.
type UpdateActiveProjectsQuotaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateActiveProjectsQuotaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateActiveProjectsQuotaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateActiveProjectsQuotaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateActiveProjectsQuotaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateActiveProjectsQuotaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateActiveProjectsQuotaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewUpdateActiveProjectsQuotaRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateActiveProjectsQuotaUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota] updateActiveProjectsQuota", response, response.Code())
	}
}

// NewUpdateActiveProjectsQuotaOK creates a UpdateActiveProjectsQuotaOK with default headers values
func NewUpdateActiveProjectsQuotaOK() *UpdateActiveProjectsQuotaOK {
	return &UpdateActiveProjectsQuotaOK{}
}

/*
UpdateActiveProjectsQuotaOK describes a response with status code 200, with default header values.

No response
*/
type UpdateActiveProjectsQuotaOK struct {
}

// IsSuccess returns true when this update active projects quota o k response has a 2xx status code
func (o *UpdateActiveProjectsQuotaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update active projects quota o k response has a 3xx status code
func (o *UpdateActiveProjectsQuotaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota o k response has a 4xx status code
func (o *UpdateActiveProjectsQuotaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update active projects quota o k response has a 5xx status code
func (o *UpdateActiveProjectsQuotaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota o k response a status code equal to that given
func (o *UpdateActiveProjectsQuotaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update active projects quota o k response
func (o *UpdateActiveProjectsQuotaOK) Code() int {
	return 200
}

func (o *UpdateActiveProjectsQuotaOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaOK ", 200)
}

func (o *UpdateActiveProjectsQuotaOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaOK ", 200)
}

func (o *UpdateActiveProjectsQuotaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateActiveProjectsQuotaBadRequest creates a UpdateActiveProjectsQuotaBadRequest with default headers values
func NewUpdateActiveProjectsQuotaBadRequest() *UpdateActiveProjectsQuotaBadRequest {
	return &UpdateActiveProjectsQuotaBadRequest{}
}

/*
UpdateActiveProjectsQuotaBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateActiveProjectsQuotaBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update active projects quota bad request response has a 2xx status code
func (o *UpdateActiveProjectsQuotaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update active projects quota bad request response has a 3xx status code
func (o *UpdateActiveProjectsQuotaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota bad request response has a 4xx status code
func (o *UpdateActiveProjectsQuotaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update active projects quota bad request response has a 5xx status code
func (o *UpdateActiveProjectsQuotaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota bad request response a status code equal to that given
func (o *UpdateActiveProjectsQuotaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update active projects quota bad request response
func (o *UpdateActiveProjectsQuotaBadRequest) Code() int {
	return 400
}

func (o *UpdateActiveProjectsQuotaBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateActiveProjectsQuotaBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateActiveProjectsQuotaBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateActiveProjectsQuotaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateActiveProjectsQuotaUnauthorized creates a UpdateActiveProjectsQuotaUnauthorized with default headers values
func NewUpdateActiveProjectsQuotaUnauthorized() *UpdateActiveProjectsQuotaUnauthorized {
	return &UpdateActiveProjectsQuotaUnauthorized{}
}

/*
UpdateActiveProjectsQuotaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateActiveProjectsQuotaUnauthorized struct {
}

// IsSuccess returns true when this update active projects quota unauthorized response has a 2xx status code
func (o *UpdateActiveProjectsQuotaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update active projects quota unauthorized response has a 3xx status code
func (o *UpdateActiveProjectsQuotaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota unauthorized response has a 4xx status code
func (o *UpdateActiveProjectsQuotaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update active projects quota unauthorized response has a 5xx status code
func (o *UpdateActiveProjectsQuotaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota unauthorized response a status code equal to that given
func (o *UpdateActiveProjectsQuotaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update active projects quota unauthorized response
func (o *UpdateActiveProjectsQuotaUnauthorized) Code() int {
	return 401
}

func (o *UpdateActiveProjectsQuotaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaUnauthorized ", 401)
}

func (o *UpdateActiveProjectsQuotaUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaUnauthorized ", 401)
}

func (o *UpdateActiveProjectsQuotaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateActiveProjectsQuotaForbidden creates a UpdateActiveProjectsQuotaForbidden with default headers values
func NewUpdateActiveProjectsQuotaForbidden() *UpdateActiveProjectsQuotaForbidden {
	return &UpdateActiveProjectsQuotaForbidden{}
}

/*
UpdateActiveProjectsQuotaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateActiveProjectsQuotaForbidden struct {
}

// IsSuccess returns true when this update active projects quota forbidden response has a 2xx status code
func (o *UpdateActiveProjectsQuotaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update active projects quota forbidden response has a 3xx status code
func (o *UpdateActiveProjectsQuotaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota forbidden response has a 4xx status code
func (o *UpdateActiveProjectsQuotaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update active projects quota forbidden response has a 5xx status code
func (o *UpdateActiveProjectsQuotaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota forbidden response a status code equal to that given
func (o *UpdateActiveProjectsQuotaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update active projects quota forbidden response
func (o *UpdateActiveProjectsQuotaForbidden) Code() int {
	return 403
}

func (o *UpdateActiveProjectsQuotaForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaForbidden ", 403)
}

func (o *UpdateActiveProjectsQuotaForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaForbidden ", 403)
}

func (o *UpdateActiveProjectsQuotaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateActiveProjectsQuotaNotFound creates a UpdateActiveProjectsQuotaNotFound with default headers values
func NewUpdateActiveProjectsQuotaNotFound() *UpdateActiveProjectsQuotaNotFound {
	return &UpdateActiveProjectsQuotaNotFound{}
}

/*
UpdateActiveProjectsQuotaNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateActiveProjectsQuotaNotFound struct {
}

// IsSuccess returns true when this update active projects quota not found response has a 2xx status code
func (o *UpdateActiveProjectsQuotaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update active projects quota not found response has a 3xx status code
func (o *UpdateActiveProjectsQuotaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota not found response has a 4xx status code
func (o *UpdateActiveProjectsQuotaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update active projects quota not found response has a 5xx status code
func (o *UpdateActiveProjectsQuotaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota not found response a status code equal to that given
func (o *UpdateActiveProjectsQuotaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update active projects quota not found response
func (o *UpdateActiveProjectsQuotaNotFound) Code() int {
	return 404
}

func (o *UpdateActiveProjectsQuotaNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaNotFound ", 404)
}

func (o *UpdateActiveProjectsQuotaNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaNotFound ", 404)
}

func (o *UpdateActiveProjectsQuotaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateActiveProjectsQuotaRequestTimeout creates a UpdateActiveProjectsQuotaRequestTimeout with default headers values
func NewUpdateActiveProjectsQuotaRequestTimeout() *UpdateActiveProjectsQuotaRequestTimeout {
	return &UpdateActiveProjectsQuotaRequestTimeout{}
}

/*
UpdateActiveProjectsQuotaRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type UpdateActiveProjectsQuotaRequestTimeout struct {
}

// IsSuccess returns true when this update active projects quota request timeout response has a 2xx status code
func (o *UpdateActiveProjectsQuotaRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update active projects quota request timeout response has a 3xx status code
func (o *UpdateActiveProjectsQuotaRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota request timeout response has a 4xx status code
func (o *UpdateActiveProjectsQuotaRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this update active projects quota request timeout response has a 5xx status code
func (o *UpdateActiveProjectsQuotaRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota request timeout response a status code equal to that given
func (o *UpdateActiveProjectsQuotaRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the update active projects quota request timeout response
func (o *UpdateActiveProjectsQuotaRequestTimeout) Code() int {
	return 408
}

func (o *UpdateActiveProjectsQuotaRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaRequestTimeout ", 408)
}

func (o *UpdateActiveProjectsQuotaRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaRequestTimeout ", 408)
}

func (o *UpdateActiveProjectsQuotaRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateActiveProjectsQuotaUnprocessableEntity creates a UpdateActiveProjectsQuotaUnprocessableEntity with default headers values
func NewUpdateActiveProjectsQuotaUnprocessableEntity() *UpdateActiveProjectsQuotaUnprocessableEntity {
	return &UpdateActiveProjectsQuotaUnprocessableEntity{}
}

/*
UpdateActiveProjectsQuotaUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateActiveProjectsQuotaUnprocessableEntity struct {
}

// IsSuccess returns true when this update active projects quota unprocessable entity response has a 2xx status code
func (o *UpdateActiveProjectsQuotaUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update active projects quota unprocessable entity response has a 3xx status code
func (o *UpdateActiveProjectsQuotaUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update active projects quota unprocessable entity response has a 4xx status code
func (o *UpdateActiveProjectsQuotaUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update active projects quota unprocessable entity response has a 5xx status code
func (o *UpdateActiveProjectsQuotaUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update active projects quota unprocessable entity response a status code equal to that given
func (o *UpdateActiveProjectsQuotaUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update active projects quota unprocessable entity response
func (o *UpdateActiveProjectsQuotaUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateActiveProjectsQuotaUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaUnprocessableEntity ", 422)
}

func (o *UpdateActiveProjectsQuotaUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/organizations2/{organizationIdentifier}/activeProjectsQuota][%d] updateActiveProjectsQuotaUnprocessableEntity ", 422)
}

func (o *UpdateActiveProjectsQuotaUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
