// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// DeleteProjectMemberReader is a Reader for the DeleteProjectMember structure.
type DeleteProjectMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectMemberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProjectMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteProjectMemberRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteProjectMemberUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/backend/v1/projects/members/{userId}] deleteProjectMember", response, response.Code())
	}
}

// NewDeleteProjectMemberOK creates a DeleteProjectMemberOK with default headers values
func NewDeleteProjectMemberOK() *DeleteProjectMemberOK {
	return &DeleteProjectMemberOK{}
}

/*
DeleteProjectMemberOK describes a response with status code 200, with default header values.

No response
*/
type DeleteProjectMemberOK struct {
}

// IsSuccess returns true when this delete project member o k response has a 2xx status code
func (o *DeleteProjectMemberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete project member o k response has a 3xx status code
func (o *DeleteProjectMemberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member o k response has a 4xx status code
func (o *DeleteProjectMemberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project member o k response has a 5xx status code
func (o *DeleteProjectMemberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member o k response a status code equal to that given
func (o *DeleteProjectMemberOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete project member o k response
func (o *DeleteProjectMemberOK) Code() int {
	return 200
}

func (o *DeleteProjectMemberOK) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberOK ", 200)
}

func (o *DeleteProjectMemberOK) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberOK ", 200)
}

func (o *DeleteProjectMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectMemberBadRequest creates a DeleteProjectMemberBadRequest with default headers values
func NewDeleteProjectMemberBadRequest() *DeleteProjectMemberBadRequest {
	return &DeleteProjectMemberBadRequest{}
}

/*
DeleteProjectMemberBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteProjectMemberBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete project member bad request response has a 2xx status code
func (o *DeleteProjectMemberBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project member bad request response has a 3xx status code
func (o *DeleteProjectMemberBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member bad request response has a 4xx status code
func (o *DeleteProjectMemberBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project member bad request response has a 5xx status code
func (o *DeleteProjectMemberBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member bad request response a status code equal to that given
func (o *DeleteProjectMemberBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete project member bad request response
func (o *DeleteProjectMemberBadRequest) Code() int {
	return 400
}

func (o *DeleteProjectMemberBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectMemberBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectMemberBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteProjectMemberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectMemberUnauthorized creates a DeleteProjectMemberUnauthorized with default headers values
func NewDeleteProjectMemberUnauthorized() *DeleteProjectMemberUnauthorized {
	return &DeleteProjectMemberUnauthorized{}
}

/*
DeleteProjectMemberUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteProjectMemberUnauthorized struct {
}

// IsSuccess returns true when this delete project member unauthorized response has a 2xx status code
func (o *DeleteProjectMemberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project member unauthorized response has a 3xx status code
func (o *DeleteProjectMemberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member unauthorized response has a 4xx status code
func (o *DeleteProjectMemberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project member unauthorized response has a 5xx status code
func (o *DeleteProjectMemberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member unauthorized response a status code equal to that given
func (o *DeleteProjectMemberUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete project member unauthorized response
func (o *DeleteProjectMemberUnauthorized) Code() int {
	return 401
}

func (o *DeleteProjectMemberUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberUnauthorized ", 401)
}

func (o *DeleteProjectMemberUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberUnauthorized ", 401)
}

func (o *DeleteProjectMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectMemberForbidden creates a DeleteProjectMemberForbidden with default headers values
func NewDeleteProjectMemberForbidden() *DeleteProjectMemberForbidden {
	return &DeleteProjectMemberForbidden{}
}

/*
DeleteProjectMemberForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectMemberForbidden struct {
}

// IsSuccess returns true when this delete project member forbidden response has a 2xx status code
func (o *DeleteProjectMemberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project member forbidden response has a 3xx status code
func (o *DeleteProjectMemberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member forbidden response has a 4xx status code
func (o *DeleteProjectMemberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project member forbidden response has a 5xx status code
func (o *DeleteProjectMemberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member forbidden response a status code equal to that given
func (o *DeleteProjectMemberForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete project member forbidden response
func (o *DeleteProjectMemberForbidden) Code() int {
	return 403
}

func (o *DeleteProjectMemberForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberForbidden ", 403)
}

func (o *DeleteProjectMemberForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberForbidden ", 403)
}

func (o *DeleteProjectMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectMemberNotFound creates a DeleteProjectMemberNotFound with default headers values
func NewDeleteProjectMemberNotFound() *DeleteProjectMemberNotFound {
	return &DeleteProjectMemberNotFound{}
}

/*
DeleteProjectMemberNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteProjectMemberNotFound struct {
}

// IsSuccess returns true when this delete project member not found response has a 2xx status code
func (o *DeleteProjectMemberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project member not found response has a 3xx status code
func (o *DeleteProjectMemberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member not found response has a 4xx status code
func (o *DeleteProjectMemberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project member not found response has a 5xx status code
func (o *DeleteProjectMemberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member not found response a status code equal to that given
func (o *DeleteProjectMemberNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete project member not found response
func (o *DeleteProjectMemberNotFound) Code() int {
	return 404
}

func (o *DeleteProjectMemberNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberNotFound ", 404)
}

func (o *DeleteProjectMemberNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberNotFound ", 404)
}

func (o *DeleteProjectMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectMemberRequestTimeout creates a DeleteProjectMemberRequestTimeout with default headers values
func NewDeleteProjectMemberRequestTimeout() *DeleteProjectMemberRequestTimeout {
	return &DeleteProjectMemberRequestTimeout{}
}

/*
DeleteProjectMemberRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type DeleteProjectMemberRequestTimeout struct {
}

// IsSuccess returns true when this delete project member request timeout response has a 2xx status code
func (o *DeleteProjectMemberRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project member request timeout response has a 3xx status code
func (o *DeleteProjectMemberRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member request timeout response has a 4xx status code
func (o *DeleteProjectMemberRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project member request timeout response has a 5xx status code
func (o *DeleteProjectMemberRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member request timeout response a status code equal to that given
func (o *DeleteProjectMemberRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the delete project member request timeout response
func (o *DeleteProjectMemberRequestTimeout) Code() int {
	return 408
}

func (o *DeleteProjectMemberRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberRequestTimeout ", 408)
}

func (o *DeleteProjectMemberRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberRequestTimeout ", 408)
}

func (o *DeleteProjectMemberRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectMemberUnprocessableEntity creates a DeleteProjectMemberUnprocessableEntity with default headers values
func NewDeleteProjectMemberUnprocessableEntity() *DeleteProjectMemberUnprocessableEntity {
	return &DeleteProjectMemberUnprocessableEntity{}
}

/*
DeleteProjectMemberUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeleteProjectMemberUnprocessableEntity struct {
}

// IsSuccess returns true when this delete project member unprocessable entity response has a 2xx status code
func (o *DeleteProjectMemberUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project member unprocessable entity response has a 3xx status code
func (o *DeleteProjectMemberUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project member unprocessable entity response has a 4xx status code
func (o *DeleteProjectMemberUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project member unprocessable entity response has a 5xx status code
func (o *DeleteProjectMemberUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project member unprocessable entity response a status code equal to that given
func (o *DeleteProjectMemberUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete project member unprocessable entity response
func (o *DeleteProjectMemberUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteProjectMemberUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberUnprocessableEntity ", 422)
}

func (o *DeleteProjectMemberUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/members/{userId}][%d] deleteProjectMemberUnprocessableEntity ", 422)
}

func (o *DeleteProjectMemberUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
