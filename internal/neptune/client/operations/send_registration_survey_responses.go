// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// SendRegistrationSurveyReader is a Reader for the SendRegistrationSurvey structure.
type SendRegistrationSurveyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendRegistrationSurveyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSendRegistrationSurveyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSendRegistrationSurveyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSendRegistrationSurveyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSendRegistrationSurveyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSendRegistrationSurveyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewSendRegistrationSurveyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSendRegistrationSurveyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/login/survey] sendRegistrationSurvey", response, response.Code())
	}
}

// NewSendRegistrationSurveyOK creates a SendRegistrationSurveyOK with default headers values
func NewSendRegistrationSurveyOK() *SendRegistrationSurveyOK {
	return &SendRegistrationSurveyOK{}
}

/*
SendRegistrationSurveyOK describes a response with status code 200, with default header values.

No response
*/
type SendRegistrationSurveyOK struct {
}

// IsSuccess returns true when this send registration survey o k response has a 2xx status code
func (o *SendRegistrationSurveyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this send registration survey o k response has a 3xx status code
func (o *SendRegistrationSurveyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey o k response has a 4xx status code
func (o *SendRegistrationSurveyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this send registration survey o k response has a 5xx status code
func (o *SendRegistrationSurveyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey o k response a status code equal to that given
func (o *SendRegistrationSurveyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the send registration survey o k response
func (o *SendRegistrationSurveyOK) Code() int {
	return 200
}

func (o *SendRegistrationSurveyOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyOK ", 200)
}

func (o *SendRegistrationSurveyOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyOK ", 200)
}

func (o *SendRegistrationSurveyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendRegistrationSurveyBadRequest creates a SendRegistrationSurveyBadRequest with default headers values
func NewSendRegistrationSurveyBadRequest() *SendRegistrationSurveyBadRequest {
	return &SendRegistrationSurveyBadRequest{}
}

/*
SendRegistrationSurveyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SendRegistrationSurveyBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this send registration survey bad request response has a 2xx status code
func (o *SendRegistrationSurveyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send registration survey bad request response has a 3xx status code
func (o *SendRegistrationSurveyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey bad request response has a 4xx status code
func (o *SendRegistrationSurveyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this send registration survey bad request response has a 5xx status code
func (o *SendRegistrationSurveyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey bad request response a status code equal to that given
func (o *SendRegistrationSurveyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the send registration survey bad request response
func (o *SendRegistrationSurveyBadRequest) Code() int {
	return 400
}

func (o *SendRegistrationSurveyBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyBadRequest  %+v", 400, o.Payload)
}

func (o *SendRegistrationSurveyBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyBadRequest  %+v", 400, o.Payload)
}

func (o *SendRegistrationSurveyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SendRegistrationSurveyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendRegistrationSurveyUnauthorized creates a SendRegistrationSurveyUnauthorized with default headers values
func NewSendRegistrationSurveyUnauthorized() *SendRegistrationSurveyUnauthorized {
	return &SendRegistrationSurveyUnauthorized{}
}

/*
SendRegistrationSurveyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SendRegistrationSurveyUnauthorized struct {
}

// IsSuccess returns true when this send registration survey unauthorized response has a 2xx status code
func (o *SendRegistrationSurveyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send registration survey unauthorized response has a 3xx status code
func (o *SendRegistrationSurveyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey unauthorized response has a 4xx status code
func (o *SendRegistrationSurveyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this send registration survey unauthorized response has a 5xx status code
func (o *SendRegistrationSurveyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey unauthorized response a status code equal to that given
func (o *SendRegistrationSurveyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the send registration survey unauthorized response
func (o *SendRegistrationSurveyUnauthorized) Code() int {
	return 401
}

func (o *SendRegistrationSurveyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyUnauthorized ", 401)
}

func (o *SendRegistrationSurveyUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyUnauthorized ", 401)
}

func (o *SendRegistrationSurveyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendRegistrationSurveyForbidden creates a SendRegistrationSurveyForbidden with default headers values
func NewSendRegistrationSurveyForbidden() *SendRegistrationSurveyForbidden {
	return &SendRegistrationSurveyForbidden{}
}

/*
SendRegistrationSurveyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SendRegistrationSurveyForbidden struct {
}

// IsSuccess returns true when this send registration survey forbidden response has a 2xx status code
func (o *SendRegistrationSurveyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send registration survey forbidden response has a 3xx status code
func (o *SendRegistrationSurveyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey forbidden response has a 4xx status code
func (o *SendRegistrationSurveyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this send registration survey forbidden response has a 5xx status code
func (o *SendRegistrationSurveyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey forbidden response a status code equal to that given
func (o *SendRegistrationSurveyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the send registration survey forbidden response
func (o *SendRegistrationSurveyForbidden) Code() int {
	return 403
}

func (o *SendRegistrationSurveyForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyForbidden ", 403)
}

func (o *SendRegistrationSurveyForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyForbidden ", 403)
}

func (o *SendRegistrationSurveyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendRegistrationSurveyNotFound creates a SendRegistrationSurveyNotFound with default headers values
func NewSendRegistrationSurveyNotFound() *SendRegistrationSurveyNotFound {
	return &SendRegistrationSurveyNotFound{}
}

/*
SendRegistrationSurveyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SendRegistrationSurveyNotFound struct {
}

// IsSuccess returns true when this send registration survey not found response has a 2xx status code
func (o *SendRegistrationSurveyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send registration survey not found response has a 3xx status code
func (o *SendRegistrationSurveyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey not found response has a 4xx status code
func (o *SendRegistrationSurveyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this send registration survey not found response has a 5xx status code
func (o *SendRegistrationSurveyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey not found response a status code equal to that given
func (o *SendRegistrationSurveyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the send registration survey not found response
func (o *SendRegistrationSurveyNotFound) Code() int {
	return 404
}

func (o *SendRegistrationSurveyNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyNotFound ", 404)
}

func (o *SendRegistrationSurveyNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyNotFound ", 404)
}

func (o *SendRegistrationSurveyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendRegistrationSurveyRequestTimeout creates a SendRegistrationSurveyRequestTimeout with default headers values
func NewSendRegistrationSurveyRequestTimeout() *SendRegistrationSurveyRequestTimeout {
	return &SendRegistrationSurveyRequestTimeout{}
}

/*
SendRegistrationSurveyRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type SendRegistrationSurveyRequestTimeout struct {
}

// IsSuccess returns true when this send registration survey request timeout response has a 2xx status code
func (o *SendRegistrationSurveyRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send registration survey request timeout response has a 3xx status code
func (o *SendRegistrationSurveyRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey request timeout response has a 4xx status code
func (o *SendRegistrationSurveyRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this send registration survey request timeout response has a 5xx status code
func (o *SendRegistrationSurveyRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey request timeout response a status code equal to that given
func (o *SendRegistrationSurveyRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the send registration survey request timeout response
func (o *SendRegistrationSurveyRequestTimeout) Code() int {
	return 408
}

func (o *SendRegistrationSurveyRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyRequestTimeout ", 408)
}

func (o *SendRegistrationSurveyRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyRequestTimeout ", 408)
}

func (o *SendRegistrationSurveyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendRegistrationSurveyUnprocessableEntity creates a SendRegistrationSurveyUnprocessableEntity with default headers values
func NewSendRegistrationSurveyUnprocessableEntity() *SendRegistrationSurveyUnprocessableEntity {
	return &SendRegistrationSurveyUnprocessableEntity{}
}

/*
SendRegistrationSurveyUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type SendRegistrationSurveyUnprocessableEntity struct {
}

// IsSuccess returns true when this send registration survey unprocessable entity response has a 2xx status code
func (o *SendRegistrationSurveyUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send registration survey unprocessable entity response has a 3xx status code
func (o *SendRegistrationSurveyUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send registration survey unprocessable entity response has a 4xx status code
func (o *SendRegistrationSurveyUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this send registration survey unprocessable entity response has a 5xx status code
func (o *SendRegistrationSurveyUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this send registration survey unprocessable entity response a status code equal to that given
func (o *SendRegistrationSurveyUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the send registration survey unprocessable entity response
func (o *SendRegistrationSurveyUnprocessableEntity) Code() int {
	return 422
}

func (o *SendRegistrationSurveyUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyUnprocessableEntity ", 422)
}

func (o *SendRegistrationSurveyUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/login/survey][%d] sendRegistrationSurveyUnprocessableEntity ", 422)
}

func (o *SendRegistrationSurveyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
