// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// CreateProjectInvitationReader is a Reader for the CreateProjectInvitation structure.
type CreateProjectInvitationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectInvitationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateProjectInvitationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectInvitationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProjectInvitationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectInvitationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectInvitationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCreateProjectInvitationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateProjectInvitationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/invitations/project] createProjectInvitation", response, response.Code())
	}
}

// NewCreateProjectInvitationOK creates a CreateProjectInvitationOK with default headers values
func NewCreateProjectInvitationOK() *CreateProjectInvitationOK {
	return &CreateProjectInvitationOK{}
}

/*
CreateProjectInvitationOK describes a response with status code 200, with default header values.

OK
*/
type CreateProjectInvitationOK struct {
	Payload *models.ProjectInvitationDTO
}

// IsSuccess returns true when this create project invitation o k response has a 2xx status code
func (o *CreateProjectInvitationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project invitation o k response has a 3xx status code
func (o *CreateProjectInvitationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation o k response has a 4xx status code
func (o *CreateProjectInvitationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project invitation o k response has a 5xx status code
func (o *CreateProjectInvitationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation o k response a status code equal to that given
func (o *CreateProjectInvitationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create project invitation o k response
func (o *CreateProjectInvitationOK) Code() int {
	return 200
}

func (o *CreateProjectInvitationOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationOK  %+v", 200, o.Payload)
}

func (o *CreateProjectInvitationOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationOK  %+v", 200, o.Payload)
}

func (o *CreateProjectInvitationOK) GetPayload() *models.ProjectInvitationDTO {
	return o.Payload
}

func (o *CreateProjectInvitationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectInvitationDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectInvitationBadRequest creates a CreateProjectInvitationBadRequest with default headers values
func NewCreateProjectInvitationBadRequest() *CreateProjectInvitationBadRequest {
	return &CreateProjectInvitationBadRequest{}
}

/*
CreateProjectInvitationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateProjectInvitationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create project invitation bad request response has a 2xx status code
func (o *CreateProjectInvitationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project invitation bad request response has a 3xx status code
func (o *CreateProjectInvitationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation bad request response has a 4xx status code
func (o *CreateProjectInvitationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project invitation bad request response has a 5xx status code
func (o *CreateProjectInvitationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation bad request response a status code equal to that given
func (o *CreateProjectInvitationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create project invitation bad request response
func (o *CreateProjectInvitationBadRequest) Code() int {
	return 400
}

func (o *CreateProjectInvitationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectInvitationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectInvitationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProjectInvitationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectInvitationUnauthorized creates a CreateProjectInvitationUnauthorized with default headers values
func NewCreateProjectInvitationUnauthorized() *CreateProjectInvitationUnauthorized {
	return &CreateProjectInvitationUnauthorized{}
}

/*
CreateProjectInvitationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectInvitationUnauthorized struct {
}

// IsSuccess returns true when this create project invitation unauthorized response has a 2xx status code
func (o *CreateProjectInvitationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project invitation unauthorized response has a 3xx status code
func (o *CreateProjectInvitationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation unauthorized response has a 4xx status code
func (o *CreateProjectInvitationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project invitation unauthorized response has a 5xx status code
func (o *CreateProjectInvitationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation unauthorized response a status code equal to that given
func (o *CreateProjectInvitationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create project invitation unauthorized response
func (o *CreateProjectInvitationUnauthorized) Code() int {
	return 401
}

func (o *CreateProjectInvitationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationUnauthorized ", 401)
}

func (o *CreateProjectInvitationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationUnauthorized ", 401)
}

func (o *CreateProjectInvitationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectInvitationForbidden creates a CreateProjectInvitationForbidden with default headers values
func NewCreateProjectInvitationForbidden() *CreateProjectInvitationForbidden {
	return &CreateProjectInvitationForbidden{}
}

/*
CreateProjectInvitationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectInvitationForbidden struct {
}

// IsSuccess returns true when this create project invitation forbidden response has a 2xx status code
func (o *CreateProjectInvitationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project invitation forbidden response has a 3xx status code
func (o *CreateProjectInvitationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation forbidden response has a 4xx status code
func (o *CreateProjectInvitationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project invitation forbidden response has a 5xx status code
func (o *CreateProjectInvitationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation forbidden response a status code equal to that given
func (o *CreateProjectInvitationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create project invitation forbidden response
func (o *CreateProjectInvitationForbidden) Code() int {
	return 403
}

func (o *CreateProjectInvitationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationForbidden ", 403)
}

func (o *CreateProjectInvitationForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationForbidden ", 403)
}

func (o *CreateProjectInvitationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectInvitationNotFound creates a CreateProjectInvitationNotFound with default headers values
func NewCreateProjectInvitationNotFound() *CreateProjectInvitationNotFound {
	return &CreateProjectInvitationNotFound{}
}

/*
CreateProjectInvitationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateProjectInvitationNotFound struct {
}

// IsSuccess returns true when this create project invitation not found response has a 2xx status code
func (o *CreateProjectInvitationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project invitation not found response has a 3xx status code
func (o *CreateProjectInvitationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation not found response has a 4xx status code
func (o *CreateProjectInvitationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project invitation not found response has a 5xx status code
func (o *CreateProjectInvitationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation not found response a status code equal to that given
func (o *CreateProjectInvitationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create project invitation not found response
func (o *CreateProjectInvitationNotFound) Code() int {
	return 404
}

func (o *CreateProjectInvitationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationNotFound ", 404)
}

func (o *CreateProjectInvitationNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationNotFound ", 404)
}

func (o *CreateProjectInvitationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectInvitationRequestTimeout creates a CreateProjectInvitationRequestTimeout with default headers values
func NewCreateProjectInvitationRequestTimeout() *CreateProjectInvitationRequestTimeout {
	return &CreateProjectInvitationRequestTimeout{}
}

/*
CreateProjectInvitationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type CreateProjectInvitationRequestTimeout struct {
}

// IsSuccess returns true when this create project invitation request timeout response has a 2xx status code
func (o *CreateProjectInvitationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project invitation request timeout response has a 3xx status code
func (o *CreateProjectInvitationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation request timeout response has a 4xx status code
func (o *CreateProjectInvitationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project invitation request timeout response has a 5xx status code
func (o *CreateProjectInvitationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation request timeout response a status code equal to that given
func (o *CreateProjectInvitationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the create project invitation request timeout response
func (o *CreateProjectInvitationRequestTimeout) Code() int {
	return 408
}

func (o *CreateProjectInvitationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationRequestTimeout ", 408)
}

func (o *CreateProjectInvitationRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationRequestTimeout ", 408)
}

func (o *CreateProjectInvitationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectInvitationUnprocessableEntity creates a CreateProjectInvitationUnprocessableEntity with default headers values
func NewCreateProjectInvitationUnprocessableEntity() *CreateProjectInvitationUnprocessableEntity {
	return &CreateProjectInvitationUnprocessableEntity{}
}

/*
CreateProjectInvitationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateProjectInvitationUnprocessableEntity struct {
}

// IsSuccess returns true when this create project invitation unprocessable entity response has a 2xx status code
func (o *CreateProjectInvitationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project invitation unprocessable entity response has a 3xx status code
func (o *CreateProjectInvitationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project invitation unprocessable entity response has a 4xx status code
func (o *CreateProjectInvitationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project invitation unprocessable entity response has a 5xx status code
func (o *CreateProjectInvitationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create project invitation unprocessable entity response a status code equal to that given
func (o *CreateProjectInvitationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create project invitation unprocessable entity response
func (o *CreateProjectInvitationUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateProjectInvitationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationUnprocessableEntity ", 422)
}

func (o *CreateProjectInvitationUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project][%d] createProjectInvitationUnprocessableEntity ", 422)
}

func (o *CreateProjectInvitationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
