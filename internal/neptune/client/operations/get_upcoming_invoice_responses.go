// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// GetUpcomingInvoiceReader is a Reader for the GetUpcomingInvoice structure.
type GetUpcomingInvoiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUpcomingInvoiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUpcomingInvoiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUpcomingInvoiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUpcomingInvoiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUpcomingInvoiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUpcomingInvoiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUpcomingInvoiceRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUpcomingInvoiceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming] getUpcomingInvoice", response, response.Code())
	}
}

// NewGetUpcomingInvoiceOK creates a GetUpcomingInvoiceOK with default headers values
func NewGetUpcomingInvoiceOK() *GetUpcomingInvoiceOK {
	return &GetUpcomingInvoiceOK{}
}

/*
GetUpcomingInvoiceOK describes a response with status code 200, with default header values.

OK
*/
type GetUpcomingInvoiceOK struct {
	Payload string
}

// IsSuccess returns true when this get upcoming invoice o k response has a 2xx status code
func (o *GetUpcomingInvoiceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get upcoming invoice o k response has a 3xx status code
func (o *GetUpcomingInvoiceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice o k response has a 4xx status code
func (o *GetUpcomingInvoiceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upcoming invoice o k response has a 5xx status code
func (o *GetUpcomingInvoiceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice o k response a status code equal to that given
func (o *GetUpcomingInvoiceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get upcoming invoice o k response
func (o *GetUpcomingInvoiceOK) Code() int {
	return 200
}

func (o *GetUpcomingInvoiceOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceOK  %+v", 200, o.Payload)
}

func (o *GetUpcomingInvoiceOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceOK  %+v", 200, o.Payload)
}

func (o *GetUpcomingInvoiceOK) GetPayload() string {
	return o.Payload
}

func (o *GetUpcomingInvoiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpcomingInvoiceBadRequest creates a GetUpcomingInvoiceBadRequest with default headers values
func NewGetUpcomingInvoiceBadRequest() *GetUpcomingInvoiceBadRequest {
	return &GetUpcomingInvoiceBadRequest{}
}

/*
GetUpcomingInvoiceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUpcomingInvoiceBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upcoming invoice bad request response has a 2xx status code
func (o *GetUpcomingInvoiceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upcoming invoice bad request response has a 3xx status code
func (o *GetUpcomingInvoiceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice bad request response has a 4xx status code
func (o *GetUpcomingInvoiceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upcoming invoice bad request response has a 5xx status code
func (o *GetUpcomingInvoiceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice bad request response a status code equal to that given
func (o *GetUpcomingInvoiceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get upcoming invoice bad request response
func (o *GetUpcomingInvoiceBadRequest) Code() int {
	return 400
}

func (o *GetUpcomingInvoiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceBadRequest  %+v", 400, o.Payload)
}

func (o *GetUpcomingInvoiceBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceBadRequest  %+v", 400, o.Payload)
}

func (o *GetUpcomingInvoiceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpcomingInvoiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpcomingInvoiceUnauthorized creates a GetUpcomingInvoiceUnauthorized with default headers values
func NewGetUpcomingInvoiceUnauthorized() *GetUpcomingInvoiceUnauthorized {
	return &GetUpcomingInvoiceUnauthorized{}
}

/*
GetUpcomingInvoiceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetUpcomingInvoiceUnauthorized struct {
}

// IsSuccess returns true when this get upcoming invoice unauthorized response has a 2xx status code
func (o *GetUpcomingInvoiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upcoming invoice unauthorized response has a 3xx status code
func (o *GetUpcomingInvoiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice unauthorized response has a 4xx status code
func (o *GetUpcomingInvoiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upcoming invoice unauthorized response has a 5xx status code
func (o *GetUpcomingInvoiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice unauthorized response a status code equal to that given
func (o *GetUpcomingInvoiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get upcoming invoice unauthorized response
func (o *GetUpcomingInvoiceUnauthorized) Code() int {
	return 401
}

func (o *GetUpcomingInvoiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceUnauthorized ", 401)
}

func (o *GetUpcomingInvoiceUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceUnauthorized ", 401)
}

func (o *GetUpcomingInvoiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUpcomingInvoiceForbidden creates a GetUpcomingInvoiceForbidden with default headers values
func NewGetUpcomingInvoiceForbidden() *GetUpcomingInvoiceForbidden {
	return &GetUpcomingInvoiceForbidden{}
}

/*
GetUpcomingInvoiceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUpcomingInvoiceForbidden struct {
}

// IsSuccess returns true when this get upcoming invoice forbidden response has a 2xx status code
func (o *GetUpcomingInvoiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upcoming invoice forbidden response has a 3xx status code
func (o *GetUpcomingInvoiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice forbidden response has a 4xx status code
func (o *GetUpcomingInvoiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upcoming invoice forbidden response has a 5xx status code
func (o *GetUpcomingInvoiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice forbidden response a status code equal to that given
func (o *GetUpcomingInvoiceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get upcoming invoice forbidden response
func (o *GetUpcomingInvoiceForbidden) Code() int {
	return 403
}

func (o *GetUpcomingInvoiceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceForbidden ", 403)
}

func (o *GetUpcomingInvoiceForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceForbidden ", 403)
}

func (o *GetUpcomingInvoiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUpcomingInvoiceNotFound creates a GetUpcomingInvoiceNotFound with default headers values
func NewGetUpcomingInvoiceNotFound() *GetUpcomingInvoiceNotFound {
	return &GetUpcomingInvoiceNotFound{}
}

/*
GetUpcomingInvoiceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUpcomingInvoiceNotFound struct {
}

// IsSuccess returns true when this get upcoming invoice not found response has a 2xx status code
func (o *GetUpcomingInvoiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upcoming invoice not found response has a 3xx status code
func (o *GetUpcomingInvoiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice not found response has a 4xx status code
func (o *GetUpcomingInvoiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upcoming invoice not found response has a 5xx status code
func (o *GetUpcomingInvoiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice not found response a status code equal to that given
func (o *GetUpcomingInvoiceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get upcoming invoice not found response
func (o *GetUpcomingInvoiceNotFound) Code() int {
	return 404
}

func (o *GetUpcomingInvoiceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceNotFound ", 404)
}

func (o *GetUpcomingInvoiceNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceNotFound ", 404)
}

func (o *GetUpcomingInvoiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUpcomingInvoiceRequestTimeout creates a GetUpcomingInvoiceRequestTimeout with default headers values
func NewGetUpcomingInvoiceRequestTimeout() *GetUpcomingInvoiceRequestTimeout {
	return &GetUpcomingInvoiceRequestTimeout{}
}

/*
GetUpcomingInvoiceRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetUpcomingInvoiceRequestTimeout struct {
}

// IsSuccess returns true when this get upcoming invoice request timeout response has a 2xx status code
func (o *GetUpcomingInvoiceRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upcoming invoice request timeout response has a 3xx status code
func (o *GetUpcomingInvoiceRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice request timeout response has a 4xx status code
func (o *GetUpcomingInvoiceRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upcoming invoice request timeout response has a 5xx status code
func (o *GetUpcomingInvoiceRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice request timeout response a status code equal to that given
func (o *GetUpcomingInvoiceRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get upcoming invoice request timeout response
func (o *GetUpcomingInvoiceRequestTimeout) Code() int {
	return 408
}

func (o *GetUpcomingInvoiceRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceRequestTimeout ", 408)
}

func (o *GetUpcomingInvoiceRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceRequestTimeout ", 408)
}

func (o *GetUpcomingInvoiceRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUpcomingInvoiceUnprocessableEntity creates a GetUpcomingInvoiceUnprocessableEntity with default headers values
func NewGetUpcomingInvoiceUnprocessableEntity() *GetUpcomingInvoiceUnprocessableEntity {
	return &GetUpcomingInvoiceUnprocessableEntity{}
}

/*
GetUpcomingInvoiceUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUpcomingInvoiceUnprocessableEntity struct {
}

// IsSuccess returns true when this get upcoming invoice unprocessable entity response has a 2xx status code
func (o *GetUpcomingInvoiceUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upcoming invoice unprocessable entity response has a 3xx status code
func (o *GetUpcomingInvoiceUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upcoming invoice unprocessable entity response has a 4xx status code
func (o *GetUpcomingInvoiceUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upcoming invoice unprocessable entity response has a 5xx status code
func (o *GetUpcomingInvoiceUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get upcoming invoice unprocessable entity response a status code equal to that given
func (o *GetUpcomingInvoiceUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get upcoming invoice unprocessable entity response
func (o *GetUpcomingInvoiceUnprocessableEntity) Code() int {
	return 422
}

func (o *GetUpcomingInvoiceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceUnprocessableEntity ", 422)
}

func (o *GetUpcomingInvoiceUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming][%d] getUpcomingInvoiceUnprocessableEntity ", 422)
}

func (o *GetUpcomingInvoiceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
