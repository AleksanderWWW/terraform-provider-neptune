// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GlobalConfigurationReader is a Reader for the GlobalConfiguration structure.
type GlobalConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GlobalConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGlobalConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGlobalConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGlobalConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGlobalConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGlobalConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGlobalConfigurationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGlobalConfigurationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/config] globalConfiguration", response, response.Code())
	}
}

// NewGlobalConfigurationOK creates a GlobalConfigurationOK with default headers values
func NewGlobalConfigurationOK() *GlobalConfigurationOK {
	return &GlobalConfigurationOK{}
}

/*
GlobalConfigurationOK describes a response with status code 200, with default header values.

OK
*/
type GlobalConfigurationOK struct {
	Payload *models.GlobalConfiguration
}

// IsSuccess returns true when this global configuration o k response has a 2xx status code
func (o *GlobalConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this global configuration o k response has a 3xx status code
func (o *GlobalConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration o k response has a 4xx status code
func (o *GlobalConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this global configuration o k response has a 5xx status code
func (o *GlobalConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration o k response a status code equal to that given
func (o *GlobalConfigurationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the global configuration o k response
func (o *GlobalConfigurationOK) Code() int {
	return 200
}

func (o *GlobalConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationOK  %+v", 200, o.Payload)
}

func (o *GlobalConfigurationOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationOK  %+v", 200, o.Payload)
}

func (o *GlobalConfigurationOK) GetPayload() *models.GlobalConfiguration {
	return o.Payload
}

func (o *GlobalConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GlobalConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGlobalConfigurationBadRequest creates a GlobalConfigurationBadRequest with default headers values
func NewGlobalConfigurationBadRequest() *GlobalConfigurationBadRequest {
	return &GlobalConfigurationBadRequest{}
}

/*
GlobalConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GlobalConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this global configuration bad request response has a 2xx status code
func (o *GlobalConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global configuration bad request response has a 3xx status code
func (o *GlobalConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration bad request response has a 4xx status code
func (o *GlobalConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this global configuration bad request response has a 5xx status code
func (o *GlobalConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration bad request response a status code equal to that given
func (o *GlobalConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the global configuration bad request response
func (o *GlobalConfigurationBadRequest) Code() int {
	return 400
}

func (o *GlobalConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GlobalConfigurationBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GlobalConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GlobalConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGlobalConfigurationUnauthorized creates a GlobalConfigurationUnauthorized with default headers values
func NewGlobalConfigurationUnauthorized() *GlobalConfigurationUnauthorized {
	return &GlobalConfigurationUnauthorized{}
}

/*
GlobalConfigurationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GlobalConfigurationUnauthorized struct {
}

// IsSuccess returns true when this global configuration unauthorized response has a 2xx status code
func (o *GlobalConfigurationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global configuration unauthorized response has a 3xx status code
func (o *GlobalConfigurationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration unauthorized response has a 4xx status code
func (o *GlobalConfigurationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this global configuration unauthorized response has a 5xx status code
func (o *GlobalConfigurationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration unauthorized response a status code equal to that given
func (o *GlobalConfigurationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the global configuration unauthorized response
func (o *GlobalConfigurationUnauthorized) Code() int {
	return 401
}

func (o *GlobalConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationUnauthorized ", 401)
}

func (o *GlobalConfigurationUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationUnauthorized ", 401)
}

func (o *GlobalConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalConfigurationForbidden creates a GlobalConfigurationForbidden with default headers values
func NewGlobalConfigurationForbidden() *GlobalConfigurationForbidden {
	return &GlobalConfigurationForbidden{}
}

/*
GlobalConfigurationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GlobalConfigurationForbidden struct {
}

// IsSuccess returns true when this global configuration forbidden response has a 2xx status code
func (o *GlobalConfigurationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global configuration forbidden response has a 3xx status code
func (o *GlobalConfigurationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration forbidden response has a 4xx status code
func (o *GlobalConfigurationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this global configuration forbidden response has a 5xx status code
func (o *GlobalConfigurationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration forbidden response a status code equal to that given
func (o *GlobalConfigurationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the global configuration forbidden response
func (o *GlobalConfigurationForbidden) Code() int {
	return 403
}

func (o *GlobalConfigurationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationForbidden ", 403)
}

func (o *GlobalConfigurationForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationForbidden ", 403)
}

func (o *GlobalConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalConfigurationNotFound creates a GlobalConfigurationNotFound with default headers values
func NewGlobalConfigurationNotFound() *GlobalConfigurationNotFound {
	return &GlobalConfigurationNotFound{}
}

/*
GlobalConfigurationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GlobalConfigurationNotFound struct {
}

// IsSuccess returns true when this global configuration not found response has a 2xx status code
func (o *GlobalConfigurationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global configuration not found response has a 3xx status code
func (o *GlobalConfigurationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration not found response has a 4xx status code
func (o *GlobalConfigurationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this global configuration not found response has a 5xx status code
func (o *GlobalConfigurationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration not found response a status code equal to that given
func (o *GlobalConfigurationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the global configuration not found response
func (o *GlobalConfigurationNotFound) Code() int {
	return 404
}

func (o *GlobalConfigurationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationNotFound ", 404)
}

func (o *GlobalConfigurationNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationNotFound ", 404)
}

func (o *GlobalConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalConfigurationRequestTimeout creates a GlobalConfigurationRequestTimeout with default headers values
func NewGlobalConfigurationRequestTimeout() *GlobalConfigurationRequestTimeout {
	return &GlobalConfigurationRequestTimeout{}
}

/*
GlobalConfigurationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GlobalConfigurationRequestTimeout struct {
}

// IsSuccess returns true when this global configuration request timeout response has a 2xx status code
func (o *GlobalConfigurationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global configuration request timeout response has a 3xx status code
func (o *GlobalConfigurationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration request timeout response has a 4xx status code
func (o *GlobalConfigurationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this global configuration request timeout response has a 5xx status code
func (o *GlobalConfigurationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration request timeout response a status code equal to that given
func (o *GlobalConfigurationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the global configuration request timeout response
func (o *GlobalConfigurationRequestTimeout) Code() int {
	return 408
}

func (o *GlobalConfigurationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationRequestTimeout ", 408)
}

func (o *GlobalConfigurationRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationRequestTimeout ", 408)
}

func (o *GlobalConfigurationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalConfigurationUnprocessableEntity creates a GlobalConfigurationUnprocessableEntity with default headers values
func NewGlobalConfigurationUnprocessableEntity() *GlobalConfigurationUnprocessableEntity {
	return &GlobalConfigurationUnprocessableEntity{}
}

/*
GlobalConfigurationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GlobalConfigurationUnprocessableEntity struct {
}

// IsSuccess returns true when this global configuration unprocessable entity response has a 2xx status code
func (o *GlobalConfigurationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global configuration unprocessable entity response has a 3xx status code
func (o *GlobalConfigurationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global configuration unprocessable entity response has a 4xx status code
func (o *GlobalConfigurationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this global configuration unprocessable entity response has a 5xx status code
func (o *GlobalConfigurationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this global configuration unprocessable entity response a status code equal to that given
func (o *GlobalConfigurationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the global configuration unprocessable entity response
func (o *GlobalConfigurationUnprocessableEntity) Code() int {
	return 422
}

func (o *GlobalConfigurationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationUnprocessableEntity ", 422)
}

func (o *GlobalConfigurationUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/config][%d] globalConfigurationUnprocessableEntity ", 422)
}

func (o *GlobalConfigurationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
