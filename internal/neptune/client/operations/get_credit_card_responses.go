// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// GetCreditCardReader is a Reader for the GetCreditCard structure.
type GetCreditCardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCreditCardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCreditCardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCreditCardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCreditCardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCreditCardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCreditCardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetCreditCardRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetCreditCardUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard] getCreditCard", response, response.Code())
	}
}

// NewGetCreditCardOK creates a GetCreditCardOK with default headers values
func NewGetCreditCardOK() *GetCreditCardOK {
	return &GetCreditCardOK{}
}

/*
GetCreditCardOK describes a response with status code 200, with default header values.

OK
*/
type GetCreditCardOK struct {
	Payload string
}

// IsSuccess returns true when this get credit card o k response has a 2xx status code
func (o *GetCreditCardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get credit card o k response has a 3xx status code
func (o *GetCreditCardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card o k response has a 4xx status code
func (o *GetCreditCardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credit card o k response has a 5xx status code
func (o *GetCreditCardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card o k response a status code equal to that given
func (o *GetCreditCardOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get credit card o k response
func (o *GetCreditCardOK) Code() int {
	return 200
}

func (o *GetCreditCardOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardOK  %+v", 200, o.Payload)
}

func (o *GetCreditCardOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardOK  %+v", 200, o.Payload)
}

func (o *GetCreditCardOK) GetPayload() string {
	return o.Payload
}

func (o *GetCreditCardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCreditCardBadRequest creates a GetCreditCardBadRequest with default headers values
func NewGetCreditCardBadRequest() *GetCreditCardBadRequest {
	return &GetCreditCardBadRequest{}
}

/*
GetCreditCardBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCreditCardBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credit card bad request response has a 2xx status code
func (o *GetCreditCardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credit card bad request response has a 3xx status code
func (o *GetCreditCardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card bad request response has a 4xx status code
func (o *GetCreditCardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credit card bad request response has a 5xx status code
func (o *GetCreditCardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card bad request response a status code equal to that given
func (o *GetCreditCardBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get credit card bad request response
func (o *GetCreditCardBadRequest) Code() int {
	return 400
}

func (o *GetCreditCardBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardBadRequest  %+v", 400, o.Payload)
}

func (o *GetCreditCardBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardBadRequest  %+v", 400, o.Payload)
}

func (o *GetCreditCardBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCreditCardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCreditCardUnauthorized creates a GetCreditCardUnauthorized with default headers values
func NewGetCreditCardUnauthorized() *GetCreditCardUnauthorized {
	return &GetCreditCardUnauthorized{}
}

/*
GetCreditCardUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCreditCardUnauthorized struct {
}

// IsSuccess returns true when this get credit card unauthorized response has a 2xx status code
func (o *GetCreditCardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credit card unauthorized response has a 3xx status code
func (o *GetCreditCardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card unauthorized response has a 4xx status code
func (o *GetCreditCardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credit card unauthorized response has a 5xx status code
func (o *GetCreditCardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card unauthorized response a status code equal to that given
func (o *GetCreditCardUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get credit card unauthorized response
func (o *GetCreditCardUnauthorized) Code() int {
	return 401
}

func (o *GetCreditCardUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardUnauthorized ", 401)
}

func (o *GetCreditCardUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardUnauthorized ", 401)
}

func (o *GetCreditCardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCreditCardForbidden creates a GetCreditCardForbidden with default headers values
func NewGetCreditCardForbidden() *GetCreditCardForbidden {
	return &GetCreditCardForbidden{}
}

/*
GetCreditCardForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCreditCardForbidden struct {
}

// IsSuccess returns true when this get credit card forbidden response has a 2xx status code
func (o *GetCreditCardForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credit card forbidden response has a 3xx status code
func (o *GetCreditCardForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card forbidden response has a 4xx status code
func (o *GetCreditCardForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credit card forbidden response has a 5xx status code
func (o *GetCreditCardForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card forbidden response a status code equal to that given
func (o *GetCreditCardForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get credit card forbidden response
func (o *GetCreditCardForbidden) Code() int {
	return 403
}

func (o *GetCreditCardForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardForbidden ", 403)
}

func (o *GetCreditCardForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardForbidden ", 403)
}

func (o *GetCreditCardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCreditCardNotFound creates a GetCreditCardNotFound with default headers values
func NewGetCreditCardNotFound() *GetCreditCardNotFound {
	return &GetCreditCardNotFound{}
}

/*
GetCreditCardNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCreditCardNotFound struct {
}

// IsSuccess returns true when this get credit card not found response has a 2xx status code
func (o *GetCreditCardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credit card not found response has a 3xx status code
func (o *GetCreditCardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card not found response has a 4xx status code
func (o *GetCreditCardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credit card not found response has a 5xx status code
func (o *GetCreditCardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card not found response a status code equal to that given
func (o *GetCreditCardNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get credit card not found response
func (o *GetCreditCardNotFound) Code() int {
	return 404
}

func (o *GetCreditCardNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardNotFound ", 404)
}

func (o *GetCreditCardNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardNotFound ", 404)
}

func (o *GetCreditCardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCreditCardRequestTimeout creates a GetCreditCardRequestTimeout with default headers values
func NewGetCreditCardRequestTimeout() *GetCreditCardRequestTimeout {
	return &GetCreditCardRequestTimeout{}
}

/*
GetCreditCardRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetCreditCardRequestTimeout struct {
}

// IsSuccess returns true when this get credit card request timeout response has a 2xx status code
func (o *GetCreditCardRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credit card request timeout response has a 3xx status code
func (o *GetCreditCardRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card request timeout response has a 4xx status code
func (o *GetCreditCardRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credit card request timeout response has a 5xx status code
func (o *GetCreditCardRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card request timeout response a status code equal to that given
func (o *GetCreditCardRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get credit card request timeout response
func (o *GetCreditCardRequestTimeout) Code() int {
	return 408
}

func (o *GetCreditCardRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardRequestTimeout ", 408)
}

func (o *GetCreditCardRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardRequestTimeout ", 408)
}

func (o *GetCreditCardRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCreditCardUnprocessableEntity creates a GetCreditCardUnprocessableEntity with default headers values
func NewGetCreditCardUnprocessableEntity() *GetCreditCardUnprocessableEntity {
	return &GetCreditCardUnprocessableEntity{}
}

/*
GetCreditCardUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetCreditCardUnprocessableEntity struct {
}

// IsSuccess returns true when this get credit card unprocessable entity response has a 2xx status code
func (o *GetCreditCardUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credit card unprocessable entity response has a 3xx status code
func (o *GetCreditCardUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credit card unprocessable entity response has a 4xx status code
func (o *GetCreditCardUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credit card unprocessable entity response has a 5xx status code
func (o *GetCreditCardUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get credit card unprocessable entity response a status code equal to that given
func (o *GetCreditCardUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get credit card unprocessable entity response
func (o *GetCreditCardUnprocessableEntity) Code() int {
	return 422
}

func (o *GetCreditCardUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardUnprocessableEntity ", 422)
}

func (o *GetCreditCardUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] getCreditCardUnprocessableEntity ", 422)
}

func (o *GetCreditCardUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
