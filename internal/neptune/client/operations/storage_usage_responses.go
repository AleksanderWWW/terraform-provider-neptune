// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// StorageUsageReader is a Reader for the StorageUsage structure.
type StorageUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StorageUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStorageUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStorageUsageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStorageUsageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStorageUsageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStorageUsageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewStorageUsageRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewStorageUsageUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/storage/usage] storageUsage", response, response.Code())
	}
}

// NewStorageUsageOK creates a StorageUsageOK with default headers values
func NewStorageUsageOK() *StorageUsageOK {
	return &StorageUsageOK{}
}

/*
StorageUsageOK describes a response with status code 200, with default header values.

OK
*/
type StorageUsageOK struct {
	Payload *models.StorageUsage
}

// IsSuccess returns true when this storage usage o k response has a 2xx status code
func (o *StorageUsageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this storage usage o k response has a 3xx status code
func (o *StorageUsageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage o k response has a 4xx status code
func (o *StorageUsageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this storage usage o k response has a 5xx status code
func (o *StorageUsageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage o k response a status code equal to that given
func (o *StorageUsageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the storage usage o k response
func (o *StorageUsageOK) Code() int {
	return 200
}

func (o *StorageUsageOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageOK  %+v", 200, o.Payload)
}

func (o *StorageUsageOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageOK  %+v", 200, o.Payload)
}

func (o *StorageUsageOK) GetPayload() *models.StorageUsage {
	return o.Payload
}

func (o *StorageUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageUsage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStorageUsageBadRequest creates a StorageUsageBadRequest with default headers values
func NewStorageUsageBadRequest() *StorageUsageBadRequest {
	return &StorageUsageBadRequest{}
}

/*
StorageUsageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StorageUsageBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this storage usage bad request response has a 2xx status code
func (o *StorageUsageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this storage usage bad request response has a 3xx status code
func (o *StorageUsageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage bad request response has a 4xx status code
func (o *StorageUsageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this storage usage bad request response has a 5xx status code
func (o *StorageUsageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage bad request response a status code equal to that given
func (o *StorageUsageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the storage usage bad request response
func (o *StorageUsageBadRequest) Code() int {
	return 400
}

func (o *StorageUsageBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageBadRequest  %+v", 400, o.Payload)
}

func (o *StorageUsageBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageBadRequest  %+v", 400, o.Payload)
}

func (o *StorageUsageBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StorageUsageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStorageUsageUnauthorized creates a StorageUsageUnauthorized with default headers values
func NewStorageUsageUnauthorized() *StorageUsageUnauthorized {
	return &StorageUsageUnauthorized{}
}

/*
StorageUsageUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StorageUsageUnauthorized struct {
}

// IsSuccess returns true when this storage usage unauthorized response has a 2xx status code
func (o *StorageUsageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this storage usage unauthorized response has a 3xx status code
func (o *StorageUsageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage unauthorized response has a 4xx status code
func (o *StorageUsageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this storage usage unauthorized response has a 5xx status code
func (o *StorageUsageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage unauthorized response a status code equal to that given
func (o *StorageUsageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the storage usage unauthorized response
func (o *StorageUsageUnauthorized) Code() int {
	return 401
}

func (o *StorageUsageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageUnauthorized ", 401)
}

func (o *StorageUsageUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageUnauthorized ", 401)
}

func (o *StorageUsageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStorageUsageForbidden creates a StorageUsageForbidden with default headers values
func NewStorageUsageForbidden() *StorageUsageForbidden {
	return &StorageUsageForbidden{}
}

/*
StorageUsageForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StorageUsageForbidden struct {
}

// IsSuccess returns true when this storage usage forbidden response has a 2xx status code
func (o *StorageUsageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this storage usage forbidden response has a 3xx status code
func (o *StorageUsageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage forbidden response has a 4xx status code
func (o *StorageUsageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this storage usage forbidden response has a 5xx status code
func (o *StorageUsageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage forbidden response a status code equal to that given
func (o *StorageUsageForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the storage usage forbidden response
func (o *StorageUsageForbidden) Code() int {
	return 403
}

func (o *StorageUsageForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageForbidden ", 403)
}

func (o *StorageUsageForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageForbidden ", 403)
}

func (o *StorageUsageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStorageUsageNotFound creates a StorageUsageNotFound with default headers values
func NewStorageUsageNotFound() *StorageUsageNotFound {
	return &StorageUsageNotFound{}
}

/*
StorageUsageNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StorageUsageNotFound struct {
}

// IsSuccess returns true when this storage usage not found response has a 2xx status code
func (o *StorageUsageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this storage usage not found response has a 3xx status code
func (o *StorageUsageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage not found response has a 4xx status code
func (o *StorageUsageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this storage usage not found response has a 5xx status code
func (o *StorageUsageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage not found response a status code equal to that given
func (o *StorageUsageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the storage usage not found response
func (o *StorageUsageNotFound) Code() int {
	return 404
}

func (o *StorageUsageNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageNotFound ", 404)
}

func (o *StorageUsageNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageNotFound ", 404)
}

func (o *StorageUsageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStorageUsageRequestTimeout creates a StorageUsageRequestTimeout with default headers values
func NewStorageUsageRequestTimeout() *StorageUsageRequestTimeout {
	return &StorageUsageRequestTimeout{}
}

/*
StorageUsageRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type StorageUsageRequestTimeout struct {
}

// IsSuccess returns true when this storage usage request timeout response has a 2xx status code
func (o *StorageUsageRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this storage usage request timeout response has a 3xx status code
func (o *StorageUsageRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage request timeout response has a 4xx status code
func (o *StorageUsageRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this storage usage request timeout response has a 5xx status code
func (o *StorageUsageRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage request timeout response a status code equal to that given
func (o *StorageUsageRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the storage usage request timeout response
func (o *StorageUsageRequestTimeout) Code() int {
	return 408
}

func (o *StorageUsageRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageRequestTimeout ", 408)
}

func (o *StorageUsageRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageRequestTimeout ", 408)
}

func (o *StorageUsageRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStorageUsageUnprocessableEntity creates a StorageUsageUnprocessableEntity with default headers values
func NewStorageUsageUnprocessableEntity() *StorageUsageUnprocessableEntity {
	return &StorageUsageUnprocessableEntity{}
}

/*
StorageUsageUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type StorageUsageUnprocessableEntity struct {
}

// IsSuccess returns true when this storage usage unprocessable entity response has a 2xx status code
func (o *StorageUsageUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this storage usage unprocessable entity response has a 3xx status code
func (o *StorageUsageUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this storage usage unprocessable entity response has a 4xx status code
func (o *StorageUsageUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this storage usage unprocessable entity response has a 5xx status code
func (o *StorageUsageUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this storage usage unprocessable entity response a status code equal to that given
func (o *StorageUsageUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the storage usage unprocessable entity response
func (o *StorageUsageUnprocessableEntity) Code() int {
	return 422
}

func (o *StorageUsageUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageUnprocessableEntity ", 422)
}

func (o *StorageUsageUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/storage/usage][%d] storageUsageUnprocessableEntity ", 422)
}

func (o *StorageUsageUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
