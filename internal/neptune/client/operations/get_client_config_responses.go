// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetClientConfigReader is a Reader for the GetClientConfig structure.
type GetClientConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClientConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClientConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClientConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetClientConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClientConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClientConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetClientConfigRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetClientConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/clients/config] getClientConfig", response, response.Code())
	}
}

// NewGetClientConfigOK creates a GetClientConfigOK with default headers values
func NewGetClientConfigOK() *GetClientConfigOK {
	return &GetClientConfigOK{}
}

/*
GetClientConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetClientConfigOK struct {
	Payload *models.ClientConfig
}

// IsSuccess returns true when this get client config o k response has a 2xx status code
func (o *GetClientConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get client config o k response has a 3xx status code
func (o *GetClientConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config o k response has a 4xx status code
func (o *GetClientConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get client config o k response has a 5xx status code
func (o *GetClientConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config o k response a status code equal to that given
func (o *GetClientConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get client config o k response
func (o *GetClientConfigOK) Code() int {
	return 200
}

func (o *GetClientConfigOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigOK  %+v", 200, o.Payload)
}

func (o *GetClientConfigOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigOK  %+v", 200, o.Payload)
}

func (o *GetClientConfigOK) GetPayload() *models.ClientConfig {
	return o.Payload
}

func (o *GetClientConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientConfigBadRequest creates a GetClientConfigBadRequest with default headers values
func NewGetClientConfigBadRequest() *GetClientConfigBadRequest {
	return &GetClientConfigBadRequest{}
}

/*
GetClientConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetClientConfigBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get client config bad request response has a 2xx status code
func (o *GetClientConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client config bad request response has a 3xx status code
func (o *GetClientConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config bad request response has a 4xx status code
func (o *GetClientConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client config bad request response has a 5xx status code
func (o *GetClientConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config bad request response a status code equal to that given
func (o *GetClientConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get client config bad request response
func (o *GetClientConfigBadRequest) Code() int {
	return 400
}

func (o *GetClientConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetClientConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetClientConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientConfigUnauthorized creates a GetClientConfigUnauthorized with default headers values
func NewGetClientConfigUnauthorized() *GetClientConfigUnauthorized {
	return &GetClientConfigUnauthorized{}
}

/*
GetClientConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClientConfigUnauthorized struct {
}

// IsSuccess returns true when this get client config unauthorized response has a 2xx status code
func (o *GetClientConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client config unauthorized response has a 3xx status code
func (o *GetClientConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config unauthorized response has a 4xx status code
func (o *GetClientConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client config unauthorized response has a 5xx status code
func (o *GetClientConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config unauthorized response a status code equal to that given
func (o *GetClientConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get client config unauthorized response
func (o *GetClientConfigUnauthorized) Code() int {
	return 401
}

func (o *GetClientConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigUnauthorized ", 401)
}

func (o *GetClientConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigUnauthorized ", 401)
}

func (o *GetClientConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClientConfigForbidden creates a GetClientConfigForbidden with default headers values
func NewGetClientConfigForbidden() *GetClientConfigForbidden {
	return &GetClientConfigForbidden{}
}

/*
GetClientConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClientConfigForbidden struct {
}

// IsSuccess returns true when this get client config forbidden response has a 2xx status code
func (o *GetClientConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client config forbidden response has a 3xx status code
func (o *GetClientConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config forbidden response has a 4xx status code
func (o *GetClientConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client config forbidden response has a 5xx status code
func (o *GetClientConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config forbidden response a status code equal to that given
func (o *GetClientConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get client config forbidden response
func (o *GetClientConfigForbidden) Code() int {
	return 403
}

func (o *GetClientConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigForbidden ", 403)
}

func (o *GetClientConfigForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigForbidden ", 403)
}

func (o *GetClientConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClientConfigNotFound creates a GetClientConfigNotFound with default headers values
func NewGetClientConfigNotFound() *GetClientConfigNotFound {
	return &GetClientConfigNotFound{}
}

/*
GetClientConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClientConfigNotFound struct {
}

// IsSuccess returns true when this get client config not found response has a 2xx status code
func (o *GetClientConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client config not found response has a 3xx status code
func (o *GetClientConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config not found response has a 4xx status code
func (o *GetClientConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client config not found response has a 5xx status code
func (o *GetClientConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config not found response a status code equal to that given
func (o *GetClientConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get client config not found response
func (o *GetClientConfigNotFound) Code() int {
	return 404
}

func (o *GetClientConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigNotFound ", 404)
}

func (o *GetClientConfigNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigNotFound ", 404)
}

func (o *GetClientConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClientConfigRequestTimeout creates a GetClientConfigRequestTimeout with default headers values
func NewGetClientConfigRequestTimeout() *GetClientConfigRequestTimeout {
	return &GetClientConfigRequestTimeout{}
}

/*
GetClientConfigRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetClientConfigRequestTimeout struct {
}

// IsSuccess returns true when this get client config request timeout response has a 2xx status code
func (o *GetClientConfigRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client config request timeout response has a 3xx status code
func (o *GetClientConfigRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config request timeout response has a 4xx status code
func (o *GetClientConfigRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client config request timeout response has a 5xx status code
func (o *GetClientConfigRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config request timeout response a status code equal to that given
func (o *GetClientConfigRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get client config request timeout response
func (o *GetClientConfigRequestTimeout) Code() int {
	return 408
}

func (o *GetClientConfigRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigRequestTimeout ", 408)
}

func (o *GetClientConfigRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigRequestTimeout ", 408)
}

func (o *GetClientConfigRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClientConfigUnprocessableEntity creates a GetClientConfigUnprocessableEntity with default headers values
func NewGetClientConfigUnprocessableEntity() *GetClientConfigUnprocessableEntity {
	return &GetClientConfigUnprocessableEntity{}
}

/*
GetClientConfigUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetClientConfigUnprocessableEntity struct {
}

// IsSuccess returns true when this get client config unprocessable entity response has a 2xx status code
func (o *GetClientConfigUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client config unprocessable entity response has a 3xx status code
func (o *GetClientConfigUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client config unprocessable entity response has a 4xx status code
func (o *GetClientConfigUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client config unprocessable entity response has a 5xx status code
func (o *GetClientConfigUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get client config unprocessable entity response a status code equal to that given
func (o *GetClientConfigUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get client config unprocessable entity response
func (o *GetClientConfigUnprocessableEntity) Code() int {
	return 422
}

func (o *GetClientConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigUnprocessableEntity ", 422)
}

func (o *GetClientConfigUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/config][%d] getClientConfigUnprocessableEntity ", 422)
}

func (o *GetClientConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
