// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetLoginActionsReader is a Reader for the GetLoginActions structure.
type GetLoginActionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLoginActionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLoginActionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLoginActionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLoginActionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLoginActionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLoginActionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetLoginActionsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetLoginActionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetLoginActionsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/login/actions] getLoginActions", response, response.Code())
	}
}

// NewGetLoginActionsOK creates a GetLoginActionsOK with default headers values
func NewGetLoginActionsOK() *GetLoginActionsOK {
	return &GetLoginActionsOK{}
}

/*
GetLoginActionsOK describes a response with status code 200, with default header values.

OK
*/
type GetLoginActionsOK struct {
	Payload *models.LoginActionsListDTO
}

// IsSuccess returns true when this get login actions o k response has a 2xx status code
func (o *GetLoginActionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get login actions o k response has a 3xx status code
func (o *GetLoginActionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions o k response has a 4xx status code
func (o *GetLoginActionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get login actions o k response has a 5xx status code
func (o *GetLoginActionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions o k response a status code equal to that given
func (o *GetLoginActionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get login actions o k response
func (o *GetLoginActionsOK) Code() int {
	return 200
}

func (o *GetLoginActionsOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsOK  %+v", 200, o.Payload)
}

func (o *GetLoginActionsOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsOK  %+v", 200, o.Payload)
}

func (o *GetLoginActionsOK) GetPayload() *models.LoginActionsListDTO {
	return o.Payload
}

func (o *GetLoginActionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoginActionsListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLoginActionsBadRequest creates a GetLoginActionsBadRequest with default headers values
func NewGetLoginActionsBadRequest() *GetLoginActionsBadRequest {
	return &GetLoginActionsBadRequest{}
}

/*
GetLoginActionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLoginActionsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get login actions bad request response has a 2xx status code
func (o *GetLoginActionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions bad request response has a 3xx status code
func (o *GetLoginActionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions bad request response has a 4xx status code
func (o *GetLoginActionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions bad request response has a 5xx status code
func (o *GetLoginActionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions bad request response a status code equal to that given
func (o *GetLoginActionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get login actions bad request response
func (o *GetLoginActionsBadRequest) Code() int {
	return 400
}

func (o *GetLoginActionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLoginActionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetLoginActionsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLoginActionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLoginActionsUnauthorized creates a GetLoginActionsUnauthorized with default headers values
func NewGetLoginActionsUnauthorized() *GetLoginActionsUnauthorized {
	return &GetLoginActionsUnauthorized{}
}

/*
GetLoginActionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLoginActionsUnauthorized struct {
}

// IsSuccess returns true when this get login actions unauthorized response has a 2xx status code
func (o *GetLoginActionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions unauthorized response has a 3xx status code
func (o *GetLoginActionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions unauthorized response has a 4xx status code
func (o *GetLoginActionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions unauthorized response has a 5xx status code
func (o *GetLoginActionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions unauthorized response a status code equal to that given
func (o *GetLoginActionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get login actions unauthorized response
func (o *GetLoginActionsUnauthorized) Code() int {
	return 401
}

func (o *GetLoginActionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsUnauthorized ", 401)
}

func (o *GetLoginActionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsUnauthorized ", 401)
}

func (o *GetLoginActionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLoginActionsForbidden creates a GetLoginActionsForbidden with default headers values
func NewGetLoginActionsForbidden() *GetLoginActionsForbidden {
	return &GetLoginActionsForbidden{}
}

/*
GetLoginActionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLoginActionsForbidden struct {
}

// IsSuccess returns true when this get login actions forbidden response has a 2xx status code
func (o *GetLoginActionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions forbidden response has a 3xx status code
func (o *GetLoginActionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions forbidden response has a 4xx status code
func (o *GetLoginActionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions forbidden response has a 5xx status code
func (o *GetLoginActionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions forbidden response a status code equal to that given
func (o *GetLoginActionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get login actions forbidden response
func (o *GetLoginActionsForbidden) Code() int {
	return 403
}

func (o *GetLoginActionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsForbidden ", 403)
}

func (o *GetLoginActionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsForbidden ", 403)
}

func (o *GetLoginActionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLoginActionsNotFound creates a GetLoginActionsNotFound with default headers values
func NewGetLoginActionsNotFound() *GetLoginActionsNotFound {
	return &GetLoginActionsNotFound{}
}

/*
GetLoginActionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLoginActionsNotFound struct {
}

// IsSuccess returns true when this get login actions not found response has a 2xx status code
func (o *GetLoginActionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions not found response has a 3xx status code
func (o *GetLoginActionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions not found response has a 4xx status code
func (o *GetLoginActionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions not found response has a 5xx status code
func (o *GetLoginActionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions not found response a status code equal to that given
func (o *GetLoginActionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get login actions not found response
func (o *GetLoginActionsNotFound) Code() int {
	return 404
}

func (o *GetLoginActionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsNotFound ", 404)
}

func (o *GetLoginActionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsNotFound ", 404)
}

func (o *GetLoginActionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLoginActionsRequestTimeout creates a GetLoginActionsRequestTimeout with default headers values
func NewGetLoginActionsRequestTimeout() *GetLoginActionsRequestTimeout {
	return &GetLoginActionsRequestTimeout{}
}

/*
GetLoginActionsRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetLoginActionsRequestTimeout struct {
}

// IsSuccess returns true when this get login actions request timeout response has a 2xx status code
func (o *GetLoginActionsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions request timeout response has a 3xx status code
func (o *GetLoginActionsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions request timeout response has a 4xx status code
func (o *GetLoginActionsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions request timeout response has a 5xx status code
func (o *GetLoginActionsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions request timeout response a status code equal to that given
func (o *GetLoginActionsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get login actions request timeout response
func (o *GetLoginActionsRequestTimeout) Code() int {
	return 408
}

func (o *GetLoginActionsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsRequestTimeout ", 408)
}

func (o *GetLoginActionsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsRequestTimeout ", 408)
}

func (o *GetLoginActionsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLoginActionsConflict creates a GetLoginActionsConflict with default headers values
func NewGetLoginActionsConflict() *GetLoginActionsConflict {
	return &GetLoginActionsConflict{}
}

/*
GetLoginActionsConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetLoginActionsConflict struct {
}

// IsSuccess returns true when this get login actions conflict response has a 2xx status code
func (o *GetLoginActionsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions conflict response has a 3xx status code
func (o *GetLoginActionsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions conflict response has a 4xx status code
func (o *GetLoginActionsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions conflict response has a 5xx status code
func (o *GetLoginActionsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions conflict response a status code equal to that given
func (o *GetLoginActionsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get login actions conflict response
func (o *GetLoginActionsConflict) Code() int {
	return 409
}

func (o *GetLoginActionsConflict) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsConflict ", 409)
}

func (o *GetLoginActionsConflict) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsConflict ", 409)
}

func (o *GetLoginActionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLoginActionsUnprocessableEntity creates a GetLoginActionsUnprocessableEntity with default headers values
func NewGetLoginActionsUnprocessableEntity() *GetLoginActionsUnprocessableEntity {
	return &GetLoginActionsUnprocessableEntity{}
}

/*
GetLoginActionsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetLoginActionsUnprocessableEntity struct {
}

// IsSuccess returns true when this get login actions unprocessable entity response has a 2xx status code
func (o *GetLoginActionsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get login actions unprocessable entity response has a 3xx status code
func (o *GetLoginActionsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get login actions unprocessable entity response has a 4xx status code
func (o *GetLoginActionsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get login actions unprocessable entity response has a 5xx status code
func (o *GetLoginActionsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get login actions unprocessable entity response a status code equal to that given
func (o *GetLoginActionsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get login actions unprocessable entity response
func (o *GetLoginActionsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetLoginActionsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsUnprocessableEntity ", 422)
}

func (o *GetLoginActionsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/login/actions][%d] getLoginActionsUnprocessableEntity ", 422)
}

func (o *GetLoginActionsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
