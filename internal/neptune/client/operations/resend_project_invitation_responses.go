// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// ResendProjectInvitationReader is a Reader for the ResendProjectInvitation structure.
type ResendProjectInvitationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResendProjectInvitationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResendProjectInvitationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResendProjectInvitationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewResendProjectInvitationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResendProjectInvitationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResendProjectInvitationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewResendProjectInvitationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewResendProjectInvitationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/invitations/project/resend] resendProjectInvitation", response, response.Code())
	}
}

// NewResendProjectInvitationOK creates a ResendProjectInvitationOK with default headers values
func NewResendProjectInvitationOK() *ResendProjectInvitationOK {
	return &ResendProjectInvitationOK{}
}

/*
ResendProjectInvitationOK describes a response with status code 200, with default header values.

No response
*/
type ResendProjectInvitationOK struct {
}

// IsSuccess returns true when this resend project invitation o k response has a 2xx status code
func (o *ResendProjectInvitationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resend project invitation o k response has a 3xx status code
func (o *ResendProjectInvitationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation o k response has a 4xx status code
func (o *ResendProjectInvitationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this resend project invitation o k response has a 5xx status code
func (o *ResendProjectInvitationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation o k response a status code equal to that given
func (o *ResendProjectInvitationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the resend project invitation o k response
func (o *ResendProjectInvitationOK) Code() int {
	return 200
}

func (o *ResendProjectInvitationOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationOK ", 200)
}

func (o *ResendProjectInvitationOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationOK ", 200)
}

func (o *ResendProjectInvitationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendProjectInvitationBadRequest creates a ResendProjectInvitationBadRequest with default headers values
func NewResendProjectInvitationBadRequest() *ResendProjectInvitationBadRequest {
	return &ResendProjectInvitationBadRequest{}
}

/*
ResendProjectInvitationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ResendProjectInvitationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this resend project invitation bad request response has a 2xx status code
func (o *ResendProjectInvitationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend project invitation bad request response has a 3xx status code
func (o *ResendProjectInvitationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation bad request response has a 4xx status code
func (o *ResendProjectInvitationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend project invitation bad request response has a 5xx status code
func (o *ResendProjectInvitationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation bad request response a status code equal to that given
func (o *ResendProjectInvitationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the resend project invitation bad request response
func (o *ResendProjectInvitationBadRequest) Code() int {
	return 400
}

func (o *ResendProjectInvitationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *ResendProjectInvitationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *ResendProjectInvitationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResendProjectInvitationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResendProjectInvitationUnauthorized creates a ResendProjectInvitationUnauthorized with default headers values
func NewResendProjectInvitationUnauthorized() *ResendProjectInvitationUnauthorized {
	return &ResendProjectInvitationUnauthorized{}
}

/*
ResendProjectInvitationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ResendProjectInvitationUnauthorized struct {
}

// IsSuccess returns true when this resend project invitation unauthorized response has a 2xx status code
func (o *ResendProjectInvitationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend project invitation unauthorized response has a 3xx status code
func (o *ResendProjectInvitationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation unauthorized response has a 4xx status code
func (o *ResendProjectInvitationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend project invitation unauthorized response has a 5xx status code
func (o *ResendProjectInvitationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation unauthorized response a status code equal to that given
func (o *ResendProjectInvitationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the resend project invitation unauthorized response
func (o *ResendProjectInvitationUnauthorized) Code() int {
	return 401
}

func (o *ResendProjectInvitationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationUnauthorized ", 401)
}

func (o *ResendProjectInvitationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationUnauthorized ", 401)
}

func (o *ResendProjectInvitationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendProjectInvitationForbidden creates a ResendProjectInvitationForbidden with default headers values
func NewResendProjectInvitationForbidden() *ResendProjectInvitationForbidden {
	return &ResendProjectInvitationForbidden{}
}

/*
ResendProjectInvitationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ResendProjectInvitationForbidden struct {
}

// IsSuccess returns true when this resend project invitation forbidden response has a 2xx status code
func (o *ResendProjectInvitationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend project invitation forbidden response has a 3xx status code
func (o *ResendProjectInvitationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation forbidden response has a 4xx status code
func (o *ResendProjectInvitationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend project invitation forbidden response has a 5xx status code
func (o *ResendProjectInvitationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation forbidden response a status code equal to that given
func (o *ResendProjectInvitationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the resend project invitation forbidden response
func (o *ResendProjectInvitationForbidden) Code() int {
	return 403
}

func (o *ResendProjectInvitationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationForbidden ", 403)
}

func (o *ResendProjectInvitationForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationForbidden ", 403)
}

func (o *ResendProjectInvitationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendProjectInvitationNotFound creates a ResendProjectInvitationNotFound with default headers values
func NewResendProjectInvitationNotFound() *ResendProjectInvitationNotFound {
	return &ResendProjectInvitationNotFound{}
}

/*
ResendProjectInvitationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResendProjectInvitationNotFound struct {
}

// IsSuccess returns true when this resend project invitation not found response has a 2xx status code
func (o *ResendProjectInvitationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend project invitation not found response has a 3xx status code
func (o *ResendProjectInvitationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation not found response has a 4xx status code
func (o *ResendProjectInvitationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend project invitation not found response has a 5xx status code
func (o *ResendProjectInvitationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation not found response a status code equal to that given
func (o *ResendProjectInvitationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the resend project invitation not found response
func (o *ResendProjectInvitationNotFound) Code() int {
	return 404
}

func (o *ResendProjectInvitationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationNotFound ", 404)
}

func (o *ResendProjectInvitationNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationNotFound ", 404)
}

func (o *ResendProjectInvitationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendProjectInvitationRequestTimeout creates a ResendProjectInvitationRequestTimeout with default headers values
func NewResendProjectInvitationRequestTimeout() *ResendProjectInvitationRequestTimeout {
	return &ResendProjectInvitationRequestTimeout{}
}

/*
ResendProjectInvitationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ResendProjectInvitationRequestTimeout struct {
}

// IsSuccess returns true when this resend project invitation request timeout response has a 2xx status code
func (o *ResendProjectInvitationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend project invitation request timeout response has a 3xx status code
func (o *ResendProjectInvitationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation request timeout response has a 4xx status code
func (o *ResendProjectInvitationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend project invitation request timeout response has a 5xx status code
func (o *ResendProjectInvitationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation request timeout response a status code equal to that given
func (o *ResendProjectInvitationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the resend project invitation request timeout response
func (o *ResendProjectInvitationRequestTimeout) Code() int {
	return 408
}

func (o *ResendProjectInvitationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationRequestTimeout ", 408)
}

func (o *ResendProjectInvitationRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationRequestTimeout ", 408)
}

func (o *ResendProjectInvitationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResendProjectInvitationUnprocessableEntity creates a ResendProjectInvitationUnprocessableEntity with default headers values
func NewResendProjectInvitationUnprocessableEntity() *ResendProjectInvitationUnprocessableEntity {
	return &ResendProjectInvitationUnprocessableEntity{}
}

/*
ResendProjectInvitationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ResendProjectInvitationUnprocessableEntity struct {
}

// IsSuccess returns true when this resend project invitation unprocessable entity response has a 2xx status code
func (o *ResendProjectInvitationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resend project invitation unprocessable entity response has a 3xx status code
func (o *ResendProjectInvitationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resend project invitation unprocessable entity response has a 4xx status code
func (o *ResendProjectInvitationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this resend project invitation unprocessable entity response has a 5xx status code
func (o *ResendProjectInvitationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this resend project invitation unprocessable entity response a status code equal to that given
func (o *ResendProjectInvitationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the resend project invitation unprocessable entity response
func (o *ResendProjectInvitationUnprocessableEntity) Code() int {
	return 422
}

func (o *ResendProjectInvitationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationUnprocessableEntity ", 422)
}

func (o *ResendProjectInvitationUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/resend][%d] resendProjectInvitationUnprocessableEntity ", 422)
}

func (o *ResendProjectInvitationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
