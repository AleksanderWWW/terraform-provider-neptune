// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListMembersParams creates a new ListMembersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListMembersParams() *ListMembersParams {
	return &ListMembersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListMembersParamsWithTimeout creates a new ListMembersParams object
// with the ability to set a timeout on a request.
func NewListMembersParamsWithTimeout(timeout time.Duration) *ListMembersParams {
	return &ListMembersParams{
		timeout: timeout,
	}
}

// NewListMembersParamsWithContext creates a new ListMembersParams object
// with the ability to set a context for a request.
func NewListMembersParamsWithContext(ctx context.Context) *ListMembersParams {
	return &ListMembersParams{
		Context: ctx,
	}
}

// NewListMembersParamsWithHTTPClient creates a new ListMembersParams object
// with the ability to set a custom HTTPClient for a request.
func NewListMembersParamsWithHTTPClient(client *http.Client) *ListMembersParams {
	return &ListMembersParams{
		HTTPClient: client,
	}
}

/*
ListMembersParams contains all the parameters to send to the API endpoint

	for the list members operation.

	Typically these are written to a http.Request.
*/
type ListMembersParams struct {

	// Limit.
	//
	// Format: int32
	Limit *int32

	// Offset.
	//
	// Format: int32
	Offset *int32

	// OrganizationIdentifier.
	OrganizationIdentifier *string

	// ProjectIdentifier.
	ProjectIdentifier *string

	// UsernamePrefix.
	UsernamePrefix *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list members params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListMembersParams) WithDefaults() *ListMembersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list members params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListMembersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list members params
func (o *ListMembersParams) WithTimeout(timeout time.Duration) *ListMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list members params
func (o *ListMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list members params
func (o *ListMembersParams) WithContext(ctx context.Context) *ListMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list members params
func (o *ListMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list members params
func (o *ListMembersParams) WithHTTPClient(client *http.Client) *ListMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list members params
func (o *ListMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the list members params
func (o *ListMembersParams) WithLimit(limit *int32) *ListMembersParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list members params
func (o *ListMembersParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithOffset adds the offset to the list members params
func (o *ListMembersParams) WithOffset(offset *int32) *ListMembersParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the list members params
func (o *ListMembersParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithOrganizationIdentifier adds the organizationIdentifier to the list members params
func (o *ListMembersParams) WithOrganizationIdentifier(organizationIdentifier *string) *ListMembersParams {
	o.SetOrganizationIdentifier(organizationIdentifier)
	return o
}

// SetOrganizationIdentifier adds the organizationIdentifier to the list members params
func (o *ListMembersParams) SetOrganizationIdentifier(organizationIdentifier *string) {
	o.OrganizationIdentifier = organizationIdentifier
}

// WithProjectIdentifier adds the projectIdentifier to the list members params
func (o *ListMembersParams) WithProjectIdentifier(projectIdentifier *string) *ListMembersParams {
	o.SetProjectIdentifier(projectIdentifier)
	return o
}

// SetProjectIdentifier adds the projectIdentifier to the list members params
func (o *ListMembersParams) SetProjectIdentifier(projectIdentifier *string) {
	o.ProjectIdentifier = projectIdentifier
}

// WithUsernamePrefix adds the usernamePrefix to the list members params
func (o *ListMembersParams) WithUsernamePrefix(usernamePrefix *string) *ListMembersParams {
	o.SetUsernamePrefix(usernamePrefix)
	return o
}

// SetUsernamePrefix adds the usernamePrefix to the list members params
func (o *ListMembersParams) SetUsernamePrefix(usernamePrefix *string) {
	o.UsernamePrefix = usernamePrefix
}

// WriteToRequest writes these params to a swagger request
func (o *ListMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int32

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.OrganizationIdentifier != nil {

		// query param organizationIdentifier
		var qrOrganizationIdentifier string

		if o.OrganizationIdentifier != nil {
			qrOrganizationIdentifier = *o.OrganizationIdentifier
		}
		qOrganizationIdentifier := qrOrganizationIdentifier
		if qOrganizationIdentifier != "" {

			if err := r.SetQueryParam("organizationIdentifier", qOrganizationIdentifier); err != nil {
				return err
			}
		}
	}

	if o.ProjectIdentifier != nil {

		// query param projectIdentifier
		var qrProjectIdentifier string

		if o.ProjectIdentifier != nil {
			qrProjectIdentifier = *o.ProjectIdentifier
		}
		qProjectIdentifier := qrProjectIdentifier
		if qProjectIdentifier != "" {

			if err := r.SetQueryParam("projectIdentifier", qProjectIdentifier); err != nil {
				return err
			}
		}
	}

	if o.UsernamePrefix != nil {

		// query param usernamePrefix
		var qrUsernamePrefix string

		if o.UsernamePrefix != nil {
			qrUsernamePrefix = *o.UsernamePrefix
		}
		qUsernamePrefix := qrUsernamePrefix
		if qUsernamePrefix != "" {

			if err := r.SetQueryParam("usernamePrefix", qUsernamePrefix); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
