// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetProjectDetailsReader is a Reader for the GetProjectDetails structure.
type GetProjectDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProjectDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProjectDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProjectDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetProjectDetailsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetProjectDetailsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/projects/details] getProjectDetails", response, response.Code())
	}
}

// NewGetProjectDetailsOK creates a GetProjectDetailsOK with default headers values
func NewGetProjectDetailsOK() *GetProjectDetailsOK {
	return &GetProjectDetailsOK{}
}

/*
GetProjectDetailsOK describes a response with status code 200, with default header values.

OK
*/
type GetProjectDetailsOK struct {
	Payload *models.ProjectWithRoleDTO
}

// IsSuccess returns true when this get project details o k response has a 2xx status code
func (o *GetProjectDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project details o k response has a 3xx status code
func (o *GetProjectDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details o k response has a 4xx status code
func (o *GetProjectDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project details o k response has a 5xx status code
func (o *GetProjectDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details o k response a status code equal to that given
func (o *GetProjectDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get project details o k response
func (o *GetProjectDetailsOK) Code() int {
	return 200
}

func (o *GetProjectDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsOK  %+v", 200, o.Payload)
}

func (o *GetProjectDetailsOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsOK  %+v", 200, o.Payload)
}

func (o *GetProjectDetailsOK) GetPayload() *models.ProjectWithRoleDTO {
	return o.Payload
}

func (o *GetProjectDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectWithRoleDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectDetailsBadRequest creates a GetProjectDetailsBadRequest with default headers values
func NewGetProjectDetailsBadRequest() *GetProjectDetailsBadRequest {
	return &GetProjectDetailsBadRequest{}
}

/*
GetProjectDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetProjectDetailsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get project details bad request response has a 2xx status code
func (o *GetProjectDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project details bad request response has a 3xx status code
func (o *GetProjectDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details bad request response has a 4xx status code
func (o *GetProjectDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project details bad request response has a 5xx status code
func (o *GetProjectDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details bad request response a status code equal to that given
func (o *GetProjectDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get project details bad request response
func (o *GetProjectDetailsBadRequest) Code() int {
	return 400
}

func (o *GetProjectDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetProjectDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetProjectDetailsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetProjectDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectDetailsUnauthorized creates a GetProjectDetailsUnauthorized with default headers values
func NewGetProjectDetailsUnauthorized() *GetProjectDetailsUnauthorized {
	return &GetProjectDetailsUnauthorized{}
}

/*
GetProjectDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProjectDetailsUnauthorized struct {
}

// IsSuccess returns true when this get project details unauthorized response has a 2xx status code
func (o *GetProjectDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project details unauthorized response has a 3xx status code
func (o *GetProjectDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details unauthorized response has a 4xx status code
func (o *GetProjectDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project details unauthorized response has a 5xx status code
func (o *GetProjectDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details unauthorized response a status code equal to that given
func (o *GetProjectDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get project details unauthorized response
func (o *GetProjectDetailsUnauthorized) Code() int {
	return 401
}

func (o *GetProjectDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsUnauthorized ", 401)
}

func (o *GetProjectDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsUnauthorized ", 401)
}

func (o *GetProjectDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectDetailsForbidden creates a GetProjectDetailsForbidden with default headers values
func NewGetProjectDetailsForbidden() *GetProjectDetailsForbidden {
	return &GetProjectDetailsForbidden{}
}

/*
GetProjectDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetProjectDetailsForbidden struct {
}

// IsSuccess returns true when this get project details forbidden response has a 2xx status code
func (o *GetProjectDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project details forbidden response has a 3xx status code
func (o *GetProjectDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details forbidden response has a 4xx status code
func (o *GetProjectDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project details forbidden response has a 5xx status code
func (o *GetProjectDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details forbidden response a status code equal to that given
func (o *GetProjectDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get project details forbidden response
func (o *GetProjectDetailsForbidden) Code() int {
	return 403
}

func (o *GetProjectDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsForbidden ", 403)
}

func (o *GetProjectDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsForbidden ", 403)
}

func (o *GetProjectDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectDetailsNotFound creates a GetProjectDetailsNotFound with default headers values
func NewGetProjectDetailsNotFound() *GetProjectDetailsNotFound {
	return &GetProjectDetailsNotFound{}
}

/*
GetProjectDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetProjectDetailsNotFound struct {
}

// IsSuccess returns true when this get project details not found response has a 2xx status code
func (o *GetProjectDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project details not found response has a 3xx status code
func (o *GetProjectDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details not found response has a 4xx status code
func (o *GetProjectDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project details not found response has a 5xx status code
func (o *GetProjectDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details not found response a status code equal to that given
func (o *GetProjectDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get project details not found response
func (o *GetProjectDetailsNotFound) Code() int {
	return 404
}

func (o *GetProjectDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsNotFound ", 404)
}

func (o *GetProjectDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsNotFound ", 404)
}

func (o *GetProjectDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectDetailsRequestTimeout creates a GetProjectDetailsRequestTimeout with default headers values
func NewGetProjectDetailsRequestTimeout() *GetProjectDetailsRequestTimeout {
	return &GetProjectDetailsRequestTimeout{}
}

/*
GetProjectDetailsRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetProjectDetailsRequestTimeout struct {
}

// IsSuccess returns true when this get project details request timeout response has a 2xx status code
func (o *GetProjectDetailsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project details request timeout response has a 3xx status code
func (o *GetProjectDetailsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details request timeout response has a 4xx status code
func (o *GetProjectDetailsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project details request timeout response has a 5xx status code
func (o *GetProjectDetailsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details request timeout response a status code equal to that given
func (o *GetProjectDetailsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get project details request timeout response
func (o *GetProjectDetailsRequestTimeout) Code() int {
	return 408
}

func (o *GetProjectDetailsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsRequestTimeout ", 408)
}

func (o *GetProjectDetailsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsRequestTimeout ", 408)
}

func (o *GetProjectDetailsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectDetailsUnprocessableEntity creates a GetProjectDetailsUnprocessableEntity with default headers values
func NewGetProjectDetailsUnprocessableEntity() *GetProjectDetailsUnprocessableEntity {
	return &GetProjectDetailsUnprocessableEntity{}
}

/*
GetProjectDetailsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetProjectDetailsUnprocessableEntity struct {
}

// IsSuccess returns true when this get project details unprocessable entity response has a 2xx status code
func (o *GetProjectDetailsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project details unprocessable entity response has a 3xx status code
func (o *GetProjectDetailsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project details unprocessable entity response has a 4xx status code
func (o *GetProjectDetailsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project details unprocessable entity response has a 5xx status code
func (o *GetProjectDetailsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get project details unprocessable entity response a status code equal to that given
func (o *GetProjectDetailsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get project details unprocessable entity response
func (o *GetProjectDetailsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetProjectDetailsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsUnprocessableEntity ", 422)
}

func (o *GetProjectDetailsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/details][%d] getProjectDetailsUnprocessableEntity ", 422)
}

func (o *GetProjectDetailsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
