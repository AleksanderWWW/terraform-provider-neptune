// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// ListPublicProjectsReader is a Reader for the ListPublicProjects structure.
type ListPublicProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPublicProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPublicProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPublicProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListPublicProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPublicProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPublicProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewListPublicProjectsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListPublicProjectsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/projects/listPublic] listPublicProjects", response, response.Code())
	}
}

// NewListPublicProjectsOK creates a ListPublicProjectsOK with default headers values
func NewListPublicProjectsOK() *ListPublicProjectsOK {
	return &ListPublicProjectsOK{}
}

/*
ListPublicProjectsOK describes a response with status code 200, with default header values.

OK
*/
type ListPublicProjectsOK struct {
	Payload *models.ProjectListDTO
}

// IsSuccess returns true when this list public projects o k response has a 2xx status code
func (o *ListPublicProjectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list public projects o k response has a 3xx status code
func (o *ListPublicProjectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects o k response has a 4xx status code
func (o *ListPublicProjectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list public projects o k response has a 5xx status code
func (o *ListPublicProjectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects o k response a status code equal to that given
func (o *ListPublicProjectsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list public projects o k response
func (o *ListPublicProjectsOK) Code() int {
	return 200
}

func (o *ListPublicProjectsOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsOK  %+v", 200, o.Payload)
}

func (o *ListPublicProjectsOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsOK  %+v", 200, o.Payload)
}

func (o *ListPublicProjectsOK) GetPayload() *models.ProjectListDTO {
	return o.Payload
}

func (o *ListPublicProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPublicProjectsBadRequest creates a ListPublicProjectsBadRequest with default headers values
func NewListPublicProjectsBadRequest() *ListPublicProjectsBadRequest {
	return &ListPublicProjectsBadRequest{}
}

/*
ListPublicProjectsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListPublicProjectsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list public projects bad request response has a 2xx status code
func (o *ListPublicProjectsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public projects bad request response has a 3xx status code
func (o *ListPublicProjectsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects bad request response has a 4xx status code
func (o *ListPublicProjectsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public projects bad request response has a 5xx status code
func (o *ListPublicProjectsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects bad request response a status code equal to that given
func (o *ListPublicProjectsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list public projects bad request response
func (o *ListPublicProjectsBadRequest) Code() int {
	return 400
}

func (o *ListPublicProjectsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsBadRequest  %+v", 400, o.Payload)
}

func (o *ListPublicProjectsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsBadRequest  %+v", 400, o.Payload)
}

func (o *ListPublicProjectsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPublicProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPublicProjectsUnauthorized creates a ListPublicProjectsUnauthorized with default headers values
func NewListPublicProjectsUnauthorized() *ListPublicProjectsUnauthorized {
	return &ListPublicProjectsUnauthorized{}
}

/*
ListPublicProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListPublicProjectsUnauthorized struct {
}

// IsSuccess returns true when this list public projects unauthorized response has a 2xx status code
func (o *ListPublicProjectsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public projects unauthorized response has a 3xx status code
func (o *ListPublicProjectsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects unauthorized response has a 4xx status code
func (o *ListPublicProjectsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public projects unauthorized response has a 5xx status code
func (o *ListPublicProjectsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects unauthorized response a status code equal to that given
func (o *ListPublicProjectsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list public projects unauthorized response
func (o *ListPublicProjectsUnauthorized) Code() int {
	return 401
}

func (o *ListPublicProjectsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsUnauthorized ", 401)
}

func (o *ListPublicProjectsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsUnauthorized ", 401)
}

func (o *ListPublicProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPublicProjectsForbidden creates a ListPublicProjectsForbidden with default headers values
func NewListPublicProjectsForbidden() *ListPublicProjectsForbidden {
	return &ListPublicProjectsForbidden{}
}

/*
ListPublicProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListPublicProjectsForbidden struct {
}

// IsSuccess returns true when this list public projects forbidden response has a 2xx status code
func (o *ListPublicProjectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public projects forbidden response has a 3xx status code
func (o *ListPublicProjectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects forbidden response has a 4xx status code
func (o *ListPublicProjectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public projects forbidden response has a 5xx status code
func (o *ListPublicProjectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects forbidden response a status code equal to that given
func (o *ListPublicProjectsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list public projects forbidden response
func (o *ListPublicProjectsForbidden) Code() int {
	return 403
}

func (o *ListPublicProjectsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsForbidden ", 403)
}

func (o *ListPublicProjectsForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsForbidden ", 403)
}

func (o *ListPublicProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPublicProjectsNotFound creates a ListPublicProjectsNotFound with default headers values
func NewListPublicProjectsNotFound() *ListPublicProjectsNotFound {
	return &ListPublicProjectsNotFound{}
}

/*
ListPublicProjectsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListPublicProjectsNotFound struct {
}

// IsSuccess returns true when this list public projects not found response has a 2xx status code
func (o *ListPublicProjectsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public projects not found response has a 3xx status code
func (o *ListPublicProjectsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects not found response has a 4xx status code
func (o *ListPublicProjectsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public projects not found response has a 5xx status code
func (o *ListPublicProjectsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects not found response a status code equal to that given
func (o *ListPublicProjectsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list public projects not found response
func (o *ListPublicProjectsNotFound) Code() int {
	return 404
}

func (o *ListPublicProjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsNotFound ", 404)
}

func (o *ListPublicProjectsNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsNotFound ", 404)
}

func (o *ListPublicProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPublicProjectsRequestTimeout creates a ListPublicProjectsRequestTimeout with default headers values
func NewListPublicProjectsRequestTimeout() *ListPublicProjectsRequestTimeout {
	return &ListPublicProjectsRequestTimeout{}
}

/*
ListPublicProjectsRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ListPublicProjectsRequestTimeout struct {
}

// IsSuccess returns true when this list public projects request timeout response has a 2xx status code
func (o *ListPublicProjectsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public projects request timeout response has a 3xx status code
func (o *ListPublicProjectsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects request timeout response has a 4xx status code
func (o *ListPublicProjectsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public projects request timeout response has a 5xx status code
func (o *ListPublicProjectsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects request timeout response a status code equal to that given
func (o *ListPublicProjectsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the list public projects request timeout response
func (o *ListPublicProjectsRequestTimeout) Code() int {
	return 408
}

func (o *ListPublicProjectsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsRequestTimeout ", 408)
}

func (o *ListPublicProjectsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsRequestTimeout ", 408)
}

func (o *ListPublicProjectsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPublicProjectsUnprocessableEntity creates a ListPublicProjectsUnprocessableEntity with default headers values
func NewListPublicProjectsUnprocessableEntity() *ListPublicProjectsUnprocessableEntity {
	return &ListPublicProjectsUnprocessableEntity{}
}

/*
ListPublicProjectsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ListPublicProjectsUnprocessableEntity struct {
}

// IsSuccess returns true when this list public projects unprocessable entity response has a 2xx status code
func (o *ListPublicProjectsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public projects unprocessable entity response has a 3xx status code
func (o *ListPublicProjectsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public projects unprocessable entity response has a 4xx status code
func (o *ListPublicProjectsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public projects unprocessable entity response has a 5xx status code
func (o *ListPublicProjectsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list public projects unprocessable entity response a status code equal to that given
func (o *ListPublicProjectsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list public projects unprocessable entity response
func (o *ListPublicProjectsUnprocessableEntity) Code() int {
	return 422
}

func (o *ListPublicProjectsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsUnprocessableEntity ", 422)
}

func (o *ListPublicProjectsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listPublic][%d] listPublicProjectsUnprocessableEntity ", 422)
}

func (o *ListPublicProjectsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
