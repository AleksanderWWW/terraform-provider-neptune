// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// MonitoringTimeStatsReader is a Reader for the MonitoringTimeStats structure.
type MonitoringTimeStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MonitoringTimeStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMonitoringTimeStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMonitoringTimeStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMonitoringTimeStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMonitoringTimeStatsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMonitoringTimeStatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewMonitoringTimeStatsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewMonitoringTimeStatsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/resources/stats] monitoringTimeStats", response, response.Code())
	}
}

// NewMonitoringTimeStatsOK creates a MonitoringTimeStatsOK with default headers values
func NewMonitoringTimeStatsOK() *MonitoringTimeStatsOK {
	return &MonitoringTimeStatsOK{}
}

/*
MonitoringTimeStatsOK describes a response with status code 200, with default header values.

OK
*/
type MonitoringTimeStatsOK struct {
	Payload *models.MonitoringTimeStatsDTO
}

// IsSuccess returns true when this monitoring time stats o k response has a 2xx status code
func (o *MonitoringTimeStatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this monitoring time stats o k response has a 3xx status code
func (o *MonitoringTimeStatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats o k response has a 4xx status code
func (o *MonitoringTimeStatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this monitoring time stats o k response has a 5xx status code
func (o *MonitoringTimeStatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats o k response a status code equal to that given
func (o *MonitoringTimeStatsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the monitoring time stats o k response
func (o *MonitoringTimeStatsOK) Code() int {
	return 200
}

func (o *MonitoringTimeStatsOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsOK  %+v", 200, o.Payload)
}

func (o *MonitoringTimeStatsOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsOK  %+v", 200, o.Payload)
}

func (o *MonitoringTimeStatsOK) GetPayload() *models.MonitoringTimeStatsDTO {
	return o.Payload
}

func (o *MonitoringTimeStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MonitoringTimeStatsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitoringTimeStatsBadRequest creates a MonitoringTimeStatsBadRequest with default headers values
func NewMonitoringTimeStatsBadRequest() *MonitoringTimeStatsBadRequest {
	return &MonitoringTimeStatsBadRequest{}
}

/*
MonitoringTimeStatsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type MonitoringTimeStatsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this monitoring time stats bad request response has a 2xx status code
func (o *MonitoringTimeStatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this monitoring time stats bad request response has a 3xx status code
func (o *MonitoringTimeStatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats bad request response has a 4xx status code
func (o *MonitoringTimeStatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this monitoring time stats bad request response has a 5xx status code
func (o *MonitoringTimeStatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats bad request response a status code equal to that given
func (o *MonitoringTimeStatsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the monitoring time stats bad request response
func (o *MonitoringTimeStatsBadRequest) Code() int {
	return 400
}

func (o *MonitoringTimeStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsBadRequest  %+v", 400, o.Payload)
}

func (o *MonitoringTimeStatsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsBadRequest  %+v", 400, o.Payload)
}

func (o *MonitoringTimeStatsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *MonitoringTimeStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMonitoringTimeStatsUnauthorized creates a MonitoringTimeStatsUnauthorized with default headers values
func NewMonitoringTimeStatsUnauthorized() *MonitoringTimeStatsUnauthorized {
	return &MonitoringTimeStatsUnauthorized{}
}

/*
MonitoringTimeStatsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type MonitoringTimeStatsUnauthorized struct {
}

// IsSuccess returns true when this monitoring time stats unauthorized response has a 2xx status code
func (o *MonitoringTimeStatsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this monitoring time stats unauthorized response has a 3xx status code
func (o *MonitoringTimeStatsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats unauthorized response has a 4xx status code
func (o *MonitoringTimeStatsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this monitoring time stats unauthorized response has a 5xx status code
func (o *MonitoringTimeStatsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats unauthorized response a status code equal to that given
func (o *MonitoringTimeStatsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the monitoring time stats unauthorized response
func (o *MonitoringTimeStatsUnauthorized) Code() int {
	return 401
}

func (o *MonitoringTimeStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsUnauthorized ", 401)
}

func (o *MonitoringTimeStatsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsUnauthorized ", 401)
}

func (o *MonitoringTimeStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitoringTimeStatsForbidden creates a MonitoringTimeStatsForbidden with default headers values
func NewMonitoringTimeStatsForbidden() *MonitoringTimeStatsForbidden {
	return &MonitoringTimeStatsForbidden{}
}

/*
MonitoringTimeStatsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type MonitoringTimeStatsForbidden struct {
}

// IsSuccess returns true when this monitoring time stats forbidden response has a 2xx status code
func (o *MonitoringTimeStatsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this monitoring time stats forbidden response has a 3xx status code
func (o *MonitoringTimeStatsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats forbidden response has a 4xx status code
func (o *MonitoringTimeStatsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this monitoring time stats forbidden response has a 5xx status code
func (o *MonitoringTimeStatsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats forbidden response a status code equal to that given
func (o *MonitoringTimeStatsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the monitoring time stats forbidden response
func (o *MonitoringTimeStatsForbidden) Code() int {
	return 403
}

func (o *MonitoringTimeStatsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsForbidden ", 403)
}

func (o *MonitoringTimeStatsForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsForbidden ", 403)
}

func (o *MonitoringTimeStatsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitoringTimeStatsNotFound creates a MonitoringTimeStatsNotFound with default headers values
func NewMonitoringTimeStatsNotFound() *MonitoringTimeStatsNotFound {
	return &MonitoringTimeStatsNotFound{}
}

/*
MonitoringTimeStatsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type MonitoringTimeStatsNotFound struct {
}

// IsSuccess returns true when this monitoring time stats not found response has a 2xx status code
func (o *MonitoringTimeStatsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this monitoring time stats not found response has a 3xx status code
func (o *MonitoringTimeStatsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats not found response has a 4xx status code
func (o *MonitoringTimeStatsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this monitoring time stats not found response has a 5xx status code
func (o *MonitoringTimeStatsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats not found response a status code equal to that given
func (o *MonitoringTimeStatsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the monitoring time stats not found response
func (o *MonitoringTimeStatsNotFound) Code() int {
	return 404
}

func (o *MonitoringTimeStatsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsNotFound ", 404)
}

func (o *MonitoringTimeStatsNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsNotFound ", 404)
}

func (o *MonitoringTimeStatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitoringTimeStatsRequestTimeout creates a MonitoringTimeStatsRequestTimeout with default headers values
func NewMonitoringTimeStatsRequestTimeout() *MonitoringTimeStatsRequestTimeout {
	return &MonitoringTimeStatsRequestTimeout{}
}

/*
MonitoringTimeStatsRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type MonitoringTimeStatsRequestTimeout struct {
}

// IsSuccess returns true when this monitoring time stats request timeout response has a 2xx status code
func (o *MonitoringTimeStatsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this monitoring time stats request timeout response has a 3xx status code
func (o *MonitoringTimeStatsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats request timeout response has a 4xx status code
func (o *MonitoringTimeStatsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this monitoring time stats request timeout response has a 5xx status code
func (o *MonitoringTimeStatsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats request timeout response a status code equal to that given
func (o *MonitoringTimeStatsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the monitoring time stats request timeout response
func (o *MonitoringTimeStatsRequestTimeout) Code() int {
	return 408
}

func (o *MonitoringTimeStatsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsRequestTimeout ", 408)
}

func (o *MonitoringTimeStatsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsRequestTimeout ", 408)
}

func (o *MonitoringTimeStatsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMonitoringTimeStatsUnprocessableEntity creates a MonitoringTimeStatsUnprocessableEntity with default headers values
func NewMonitoringTimeStatsUnprocessableEntity() *MonitoringTimeStatsUnprocessableEntity {
	return &MonitoringTimeStatsUnprocessableEntity{}
}

/*
MonitoringTimeStatsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type MonitoringTimeStatsUnprocessableEntity struct {
}

// IsSuccess returns true when this monitoring time stats unprocessable entity response has a 2xx status code
func (o *MonitoringTimeStatsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this monitoring time stats unprocessable entity response has a 3xx status code
func (o *MonitoringTimeStatsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this monitoring time stats unprocessable entity response has a 4xx status code
func (o *MonitoringTimeStatsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this monitoring time stats unprocessable entity response has a 5xx status code
func (o *MonitoringTimeStatsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this monitoring time stats unprocessable entity response a status code equal to that given
func (o *MonitoringTimeStatsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the monitoring time stats unprocessable entity response
func (o *MonitoringTimeStatsUnprocessableEntity) Code() int {
	return 422
}

func (o *MonitoringTimeStatsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsUnprocessableEntity ", 422)
}

func (o *MonitoringTimeStatsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/resources/stats][%d] monitoringTimeStatsUnprocessableEntity ", 422)
}

func (o *MonitoringTimeStatsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
