// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddUserProfileLinkReader is a Reader for the AddUserProfileLink structure.
type AddUserProfileLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddUserProfileLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddUserProfileLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddUserProfileLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddUserProfileLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddUserProfileLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddUserProfileLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewAddUserProfileLinkRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAddUserProfileLinkUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/userProfile/links] addUserProfileLink", response, response.Code())
	}
}

// NewAddUserProfileLinkOK creates a AddUserProfileLinkOK with default headers values
func NewAddUserProfileLinkOK() *AddUserProfileLinkOK {
	return &AddUserProfileLinkOK{}
}

/*
AddUserProfileLinkOK describes a response with status code 200, with default header values.

No response
*/
type AddUserProfileLinkOK struct {
}

// IsSuccess returns true when this add user profile link o k response has a 2xx status code
func (o *AddUserProfileLinkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add user profile link o k response has a 3xx status code
func (o *AddUserProfileLinkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link o k response has a 4xx status code
func (o *AddUserProfileLinkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add user profile link o k response has a 5xx status code
func (o *AddUserProfileLinkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link o k response a status code equal to that given
func (o *AddUserProfileLinkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add user profile link o k response
func (o *AddUserProfileLinkOK) Code() int {
	return 200
}

func (o *AddUserProfileLinkOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkOK ", 200)
}

func (o *AddUserProfileLinkOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkOK ", 200)
}

func (o *AddUserProfileLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserProfileLinkBadRequest creates a AddUserProfileLinkBadRequest with default headers values
func NewAddUserProfileLinkBadRequest() *AddUserProfileLinkBadRequest {
	return &AddUserProfileLinkBadRequest{}
}

/*
AddUserProfileLinkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddUserProfileLinkBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add user profile link bad request response has a 2xx status code
func (o *AddUserProfileLinkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user profile link bad request response has a 3xx status code
func (o *AddUserProfileLinkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link bad request response has a 4xx status code
func (o *AddUserProfileLinkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user profile link bad request response has a 5xx status code
func (o *AddUserProfileLinkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link bad request response a status code equal to that given
func (o *AddUserProfileLinkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add user profile link bad request response
func (o *AddUserProfileLinkBadRequest) Code() int {
	return 400
}

func (o *AddUserProfileLinkBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkBadRequest  %+v", 400, o.Payload)
}

func (o *AddUserProfileLinkBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkBadRequest  %+v", 400, o.Payload)
}

func (o *AddUserProfileLinkBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddUserProfileLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUserProfileLinkUnauthorized creates a AddUserProfileLinkUnauthorized with default headers values
func NewAddUserProfileLinkUnauthorized() *AddUserProfileLinkUnauthorized {
	return &AddUserProfileLinkUnauthorized{}
}

/*
AddUserProfileLinkUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddUserProfileLinkUnauthorized struct {
}

// IsSuccess returns true when this add user profile link unauthorized response has a 2xx status code
func (o *AddUserProfileLinkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user profile link unauthorized response has a 3xx status code
func (o *AddUserProfileLinkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link unauthorized response has a 4xx status code
func (o *AddUserProfileLinkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user profile link unauthorized response has a 5xx status code
func (o *AddUserProfileLinkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link unauthorized response a status code equal to that given
func (o *AddUserProfileLinkUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add user profile link unauthorized response
func (o *AddUserProfileLinkUnauthorized) Code() int {
	return 401
}

func (o *AddUserProfileLinkUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkUnauthorized ", 401)
}

func (o *AddUserProfileLinkUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkUnauthorized ", 401)
}

func (o *AddUserProfileLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserProfileLinkForbidden creates a AddUserProfileLinkForbidden with default headers values
func NewAddUserProfileLinkForbidden() *AddUserProfileLinkForbidden {
	return &AddUserProfileLinkForbidden{}
}

/*
AddUserProfileLinkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddUserProfileLinkForbidden struct {
}

// IsSuccess returns true when this add user profile link forbidden response has a 2xx status code
func (o *AddUserProfileLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user profile link forbidden response has a 3xx status code
func (o *AddUserProfileLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link forbidden response has a 4xx status code
func (o *AddUserProfileLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user profile link forbidden response has a 5xx status code
func (o *AddUserProfileLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link forbidden response a status code equal to that given
func (o *AddUserProfileLinkForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add user profile link forbidden response
func (o *AddUserProfileLinkForbidden) Code() int {
	return 403
}

func (o *AddUserProfileLinkForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkForbidden ", 403)
}

func (o *AddUserProfileLinkForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkForbidden ", 403)
}

func (o *AddUserProfileLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserProfileLinkNotFound creates a AddUserProfileLinkNotFound with default headers values
func NewAddUserProfileLinkNotFound() *AddUserProfileLinkNotFound {
	return &AddUserProfileLinkNotFound{}
}

/*
AddUserProfileLinkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddUserProfileLinkNotFound struct {
}

// IsSuccess returns true when this add user profile link not found response has a 2xx status code
func (o *AddUserProfileLinkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user profile link not found response has a 3xx status code
func (o *AddUserProfileLinkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link not found response has a 4xx status code
func (o *AddUserProfileLinkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user profile link not found response has a 5xx status code
func (o *AddUserProfileLinkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link not found response a status code equal to that given
func (o *AddUserProfileLinkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add user profile link not found response
func (o *AddUserProfileLinkNotFound) Code() int {
	return 404
}

func (o *AddUserProfileLinkNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkNotFound ", 404)
}

func (o *AddUserProfileLinkNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkNotFound ", 404)
}

func (o *AddUserProfileLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserProfileLinkRequestTimeout creates a AddUserProfileLinkRequestTimeout with default headers values
func NewAddUserProfileLinkRequestTimeout() *AddUserProfileLinkRequestTimeout {
	return &AddUserProfileLinkRequestTimeout{}
}

/*
AddUserProfileLinkRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type AddUserProfileLinkRequestTimeout struct {
}

// IsSuccess returns true when this add user profile link request timeout response has a 2xx status code
func (o *AddUserProfileLinkRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user profile link request timeout response has a 3xx status code
func (o *AddUserProfileLinkRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link request timeout response has a 4xx status code
func (o *AddUserProfileLinkRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user profile link request timeout response has a 5xx status code
func (o *AddUserProfileLinkRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link request timeout response a status code equal to that given
func (o *AddUserProfileLinkRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the add user profile link request timeout response
func (o *AddUserProfileLinkRequestTimeout) Code() int {
	return 408
}

func (o *AddUserProfileLinkRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkRequestTimeout ", 408)
}

func (o *AddUserProfileLinkRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkRequestTimeout ", 408)
}

func (o *AddUserProfileLinkRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserProfileLinkUnprocessableEntity creates a AddUserProfileLinkUnprocessableEntity with default headers values
func NewAddUserProfileLinkUnprocessableEntity() *AddUserProfileLinkUnprocessableEntity {
	return &AddUserProfileLinkUnprocessableEntity{}
}

/*
AddUserProfileLinkUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type AddUserProfileLinkUnprocessableEntity struct {
}

// IsSuccess returns true when this add user profile link unprocessable entity response has a 2xx status code
func (o *AddUserProfileLinkUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user profile link unprocessable entity response has a 3xx status code
func (o *AddUserProfileLinkUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user profile link unprocessable entity response has a 4xx status code
func (o *AddUserProfileLinkUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user profile link unprocessable entity response has a 5xx status code
func (o *AddUserProfileLinkUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this add user profile link unprocessable entity response a status code equal to that given
func (o *AddUserProfileLinkUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the add user profile link unprocessable entity response
func (o *AddUserProfileLinkUnprocessableEntity) Code() int {
	return 422
}

func (o *AddUserProfileLinkUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkUnprocessableEntity ", 422)
}

func (o *AddUserProfileLinkUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/userProfile/links][%d] addUserProfileLinkUnprocessableEntity ", 422)
}

func (o *AddUserProfileLinkUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
