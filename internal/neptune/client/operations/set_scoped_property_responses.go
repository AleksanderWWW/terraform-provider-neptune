// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// SetScopedPropertyReader is a Reader for the SetScopedProperty structure.
type SetScopedPropertyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetScopedPropertyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetScopedPropertyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetScopedPropertyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetScopedPropertyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetScopedPropertyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetScopedPropertyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewSetScopedPropertyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetScopedPropertyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/clients/properties] setScopedProperty", response, response.Code())
	}
}

// NewSetScopedPropertyOK creates a SetScopedPropertyOK with default headers values
func NewSetScopedPropertyOK() *SetScopedPropertyOK {
	return &SetScopedPropertyOK{}
}

/*
SetScopedPropertyOK describes a response with status code 200, with default header values.

No response
*/
type SetScopedPropertyOK struct {
}

// IsSuccess returns true when this set scoped property o k response has a 2xx status code
func (o *SetScopedPropertyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set scoped property o k response has a 3xx status code
func (o *SetScopedPropertyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property o k response has a 4xx status code
func (o *SetScopedPropertyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set scoped property o k response has a 5xx status code
func (o *SetScopedPropertyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property o k response a status code equal to that given
func (o *SetScopedPropertyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set scoped property o k response
func (o *SetScopedPropertyOK) Code() int {
	return 200
}

func (o *SetScopedPropertyOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyOK ", 200)
}

func (o *SetScopedPropertyOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyOK ", 200)
}

func (o *SetScopedPropertyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetScopedPropertyBadRequest creates a SetScopedPropertyBadRequest with default headers values
func NewSetScopedPropertyBadRequest() *SetScopedPropertyBadRequest {
	return &SetScopedPropertyBadRequest{}
}

/*
SetScopedPropertyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SetScopedPropertyBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set scoped property bad request response has a 2xx status code
func (o *SetScopedPropertyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set scoped property bad request response has a 3xx status code
func (o *SetScopedPropertyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property bad request response has a 4xx status code
func (o *SetScopedPropertyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set scoped property bad request response has a 5xx status code
func (o *SetScopedPropertyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property bad request response a status code equal to that given
func (o *SetScopedPropertyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set scoped property bad request response
func (o *SetScopedPropertyBadRequest) Code() int {
	return 400
}

func (o *SetScopedPropertyBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyBadRequest  %+v", 400, o.Payload)
}

func (o *SetScopedPropertyBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyBadRequest  %+v", 400, o.Payload)
}

func (o *SetScopedPropertyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScopedPropertyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScopedPropertyUnauthorized creates a SetScopedPropertyUnauthorized with default headers values
func NewSetScopedPropertyUnauthorized() *SetScopedPropertyUnauthorized {
	return &SetScopedPropertyUnauthorized{}
}

/*
SetScopedPropertyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetScopedPropertyUnauthorized struct {
}

// IsSuccess returns true when this set scoped property unauthorized response has a 2xx status code
func (o *SetScopedPropertyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set scoped property unauthorized response has a 3xx status code
func (o *SetScopedPropertyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property unauthorized response has a 4xx status code
func (o *SetScopedPropertyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set scoped property unauthorized response has a 5xx status code
func (o *SetScopedPropertyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property unauthorized response a status code equal to that given
func (o *SetScopedPropertyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set scoped property unauthorized response
func (o *SetScopedPropertyUnauthorized) Code() int {
	return 401
}

func (o *SetScopedPropertyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyUnauthorized ", 401)
}

func (o *SetScopedPropertyUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyUnauthorized ", 401)
}

func (o *SetScopedPropertyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetScopedPropertyForbidden creates a SetScopedPropertyForbidden with default headers values
func NewSetScopedPropertyForbidden() *SetScopedPropertyForbidden {
	return &SetScopedPropertyForbidden{}
}

/*
SetScopedPropertyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetScopedPropertyForbidden struct {
}

// IsSuccess returns true when this set scoped property forbidden response has a 2xx status code
func (o *SetScopedPropertyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set scoped property forbidden response has a 3xx status code
func (o *SetScopedPropertyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property forbidden response has a 4xx status code
func (o *SetScopedPropertyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set scoped property forbidden response has a 5xx status code
func (o *SetScopedPropertyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property forbidden response a status code equal to that given
func (o *SetScopedPropertyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set scoped property forbidden response
func (o *SetScopedPropertyForbidden) Code() int {
	return 403
}

func (o *SetScopedPropertyForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyForbidden ", 403)
}

func (o *SetScopedPropertyForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyForbidden ", 403)
}

func (o *SetScopedPropertyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetScopedPropertyNotFound creates a SetScopedPropertyNotFound with default headers values
func NewSetScopedPropertyNotFound() *SetScopedPropertyNotFound {
	return &SetScopedPropertyNotFound{}
}

/*
SetScopedPropertyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetScopedPropertyNotFound struct {
}

// IsSuccess returns true when this set scoped property not found response has a 2xx status code
func (o *SetScopedPropertyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set scoped property not found response has a 3xx status code
func (o *SetScopedPropertyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property not found response has a 4xx status code
func (o *SetScopedPropertyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set scoped property not found response has a 5xx status code
func (o *SetScopedPropertyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property not found response a status code equal to that given
func (o *SetScopedPropertyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set scoped property not found response
func (o *SetScopedPropertyNotFound) Code() int {
	return 404
}

func (o *SetScopedPropertyNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyNotFound ", 404)
}

func (o *SetScopedPropertyNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyNotFound ", 404)
}

func (o *SetScopedPropertyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetScopedPropertyRequestTimeout creates a SetScopedPropertyRequestTimeout with default headers values
func NewSetScopedPropertyRequestTimeout() *SetScopedPropertyRequestTimeout {
	return &SetScopedPropertyRequestTimeout{}
}

/*
SetScopedPropertyRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type SetScopedPropertyRequestTimeout struct {
}

// IsSuccess returns true when this set scoped property request timeout response has a 2xx status code
func (o *SetScopedPropertyRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set scoped property request timeout response has a 3xx status code
func (o *SetScopedPropertyRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property request timeout response has a 4xx status code
func (o *SetScopedPropertyRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this set scoped property request timeout response has a 5xx status code
func (o *SetScopedPropertyRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property request timeout response a status code equal to that given
func (o *SetScopedPropertyRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the set scoped property request timeout response
func (o *SetScopedPropertyRequestTimeout) Code() int {
	return 408
}

func (o *SetScopedPropertyRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyRequestTimeout ", 408)
}

func (o *SetScopedPropertyRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyRequestTimeout ", 408)
}

func (o *SetScopedPropertyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetScopedPropertyUnprocessableEntity creates a SetScopedPropertyUnprocessableEntity with default headers values
func NewSetScopedPropertyUnprocessableEntity() *SetScopedPropertyUnprocessableEntity {
	return &SetScopedPropertyUnprocessableEntity{}
}

/*
SetScopedPropertyUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type SetScopedPropertyUnprocessableEntity struct {
}

// IsSuccess returns true when this set scoped property unprocessable entity response has a 2xx status code
func (o *SetScopedPropertyUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set scoped property unprocessable entity response has a 3xx status code
func (o *SetScopedPropertyUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set scoped property unprocessable entity response has a 4xx status code
func (o *SetScopedPropertyUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set scoped property unprocessable entity response has a 5xx status code
func (o *SetScopedPropertyUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set scoped property unprocessable entity response a status code equal to that given
func (o *SetScopedPropertyUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set scoped property unprocessable entity response
func (o *SetScopedPropertyUnprocessableEntity) Code() int {
	return 422
}

func (o *SetScopedPropertyUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyUnprocessableEntity ", 422)
}

func (o *SetScopedPropertyUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/clients/properties][%d] setScopedPropertyUnprocessableEntity ", 422)
}

func (o *SetScopedPropertyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
