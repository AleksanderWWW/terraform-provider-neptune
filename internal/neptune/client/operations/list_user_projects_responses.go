// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// ListUserProjectsReader is a Reader for the ListUserProjects structure.
type ListUserProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListUserProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListUserProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewListUserProjectsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListUserProjectsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/projects/listForUser] listUserProjects", response, response.Code())
	}
}

// NewListUserProjectsOK creates a ListUserProjectsOK with default headers values
func NewListUserProjectsOK() *ListUserProjectsOK {
	return &ListUserProjectsOK{}
}

/*
ListUserProjectsOK describes a response with status code 200, with default header values.

OK
*/
type ListUserProjectsOK struct {
	Payload *models.ProjectListDTO
}

// IsSuccess returns true when this list user projects o k response has a 2xx status code
func (o *ListUserProjectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user projects o k response has a 3xx status code
func (o *ListUserProjectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects o k response has a 4xx status code
func (o *ListUserProjectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user projects o k response has a 5xx status code
func (o *ListUserProjectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects o k response a status code equal to that given
func (o *ListUserProjectsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user projects o k response
func (o *ListUserProjectsOK) Code() int {
	return 200
}

func (o *ListUserProjectsOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsOK  %+v", 200, o.Payload)
}

func (o *ListUserProjectsOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsOK  %+v", 200, o.Payload)
}

func (o *ListUserProjectsOK) GetPayload() *models.ProjectListDTO {
	return o.Payload
}

func (o *ListUserProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserProjectsBadRequest creates a ListUserProjectsBadRequest with default headers values
func NewListUserProjectsBadRequest() *ListUserProjectsBadRequest {
	return &ListUserProjectsBadRequest{}
}

/*
ListUserProjectsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListUserProjectsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user projects bad request response has a 2xx status code
func (o *ListUserProjectsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user projects bad request response has a 3xx status code
func (o *ListUserProjectsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects bad request response has a 4xx status code
func (o *ListUserProjectsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user projects bad request response has a 5xx status code
func (o *ListUserProjectsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects bad request response a status code equal to that given
func (o *ListUserProjectsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list user projects bad request response
func (o *ListUserProjectsBadRequest) Code() int {
	return 400
}

func (o *ListUserProjectsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsBadRequest  %+v", 400, o.Payload)
}

func (o *ListUserProjectsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsBadRequest  %+v", 400, o.Payload)
}

func (o *ListUserProjectsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserProjectsUnauthorized creates a ListUserProjectsUnauthorized with default headers values
func NewListUserProjectsUnauthorized() *ListUserProjectsUnauthorized {
	return &ListUserProjectsUnauthorized{}
}

/*
ListUserProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserProjectsUnauthorized struct {
}

// IsSuccess returns true when this list user projects unauthorized response has a 2xx status code
func (o *ListUserProjectsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user projects unauthorized response has a 3xx status code
func (o *ListUserProjectsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects unauthorized response has a 4xx status code
func (o *ListUserProjectsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user projects unauthorized response has a 5xx status code
func (o *ListUserProjectsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects unauthorized response a status code equal to that given
func (o *ListUserProjectsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user projects unauthorized response
func (o *ListUserProjectsUnauthorized) Code() int {
	return 401
}

func (o *ListUserProjectsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsUnauthorized ", 401)
}

func (o *ListUserProjectsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsUnauthorized ", 401)
}

func (o *ListUserProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUserProjectsForbidden creates a ListUserProjectsForbidden with default headers values
func NewListUserProjectsForbidden() *ListUserProjectsForbidden {
	return &ListUserProjectsForbidden{}
}

/*
ListUserProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserProjectsForbidden struct {
}

// IsSuccess returns true when this list user projects forbidden response has a 2xx status code
func (o *ListUserProjectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user projects forbidden response has a 3xx status code
func (o *ListUserProjectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects forbidden response has a 4xx status code
func (o *ListUserProjectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user projects forbidden response has a 5xx status code
func (o *ListUserProjectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects forbidden response a status code equal to that given
func (o *ListUserProjectsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user projects forbidden response
func (o *ListUserProjectsForbidden) Code() int {
	return 403
}

func (o *ListUserProjectsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsForbidden ", 403)
}

func (o *ListUserProjectsForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsForbidden ", 403)
}

func (o *ListUserProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUserProjectsNotFound creates a ListUserProjectsNotFound with default headers values
func NewListUserProjectsNotFound() *ListUserProjectsNotFound {
	return &ListUserProjectsNotFound{}
}

/*
ListUserProjectsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListUserProjectsNotFound struct {
}

// IsSuccess returns true when this list user projects not found response has a 2xx status code
func (o *ListUserProjectsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user projects not found response has a 3xx status code
func (o *ListUserProjectsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects not found response has a 4xx status code
func (o *ListUserProjectsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user projects not found response has a 5xx status code
func (o *ListUserProjectsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects not found response a status code equal to that given
func (o *ListUserProjectsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user projects not found response
func (o *ListUserProjectsNotFound) Code() int {
	return 404
}

func (o *ListUserProjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsNotFound ", 404)
}

func (o *ListUserProjectsNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsNotFound ", 404)
}

func (o *ListUserProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUserProjectsRequestTimeout creates a ListUserProjectsRequestTimeout with default headers values
func NewListUserProjectsRequestTimeout() *ListUserProjectsRequestTimeout {
	return &ListUserProjectsRequestTimeout{}
}

/*
ListUserProjectsRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ListUserProjectsRequestTimeout struct {
}

// IsSuccess returns true when this list user projects request timeout response has a 2xx status code
func (o *ListUserProjectsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user projects request timeout response has a 3xx status code
func (o *ListUserProjectsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects request timeout response has a 4xx status code
func (o *ListUserProjectsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user projects request timeout response has a 5xx status code
func (o *ListUserProjectsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects request timeout response a status code equal to that given
func (o *ListUserProjectsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the list user projects request timeout response
func (o *ListUserProjectsRequestTimeout) Code() int {
	return 408
}

func (o *ListUserProjectsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsRequestTimeout ", 408)
}

func (o *ListUserProjectsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsRequestTimeout ", 408)
}

func (o *ListUserProjectsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUserProjectsUnprocessableEntity creates a ListUserProjectsUnprocessableEntity with default headers values
func NewListUserProjectsUnprocessableEntity() *ListUserProjectsUnprocessableEntity {
	return &ListUserProjectsUnprocessableEntity{}
}

/*
ListUserProjectsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ListUserProjectsUnprocessableEntity struct {
}

// IsSuccess returns true when this list user projects unprocessable entity response has a 2xx status code
func (o *ListUserProjectsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user projects unprocessable entity response has a 3xx status code
func (o *ListUserProjectsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user projects unprocessable entity response has a 4xx status code
func (o *ListUserProjectsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user projects unprocessable entity response has a 5xx status code
func (o *ListUserProjectsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list user projects unprocessable entity response a status code equal to that given
func (o *ListUserProjectsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list user projects unprocessable entity response
func (o *ListUserProjectsUnprocessableEntity) Code() int {
	return 422
}

func (o *ListUserProjectsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsUnprocessableEntity ", 422)
}

func (o *ListUserProjectsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/projects/listForUser][%d] listUserProjectsUnprocessableEntity ", 422)
}

func (o *ListUserProjectsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
