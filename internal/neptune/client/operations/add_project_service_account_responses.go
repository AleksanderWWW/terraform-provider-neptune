// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddProjectServiceAccountReader is a Reader for the AddProjectServiceAccount structure.
type AddProjectServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddProjectServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddProjectServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddProjectServiceAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddProjectServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddProjectServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddProjectServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewAddProjectServiceAccountRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddProjectServiceAccountConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAddProjectServiceAccountUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/projects/service_accounts] addProjectServiceAccount", response, response.Code())
	}
}

// NewAddProjectServiceAccountOK creates a AddProjectServiceAccountOK with default headers values
func NewAddProjectServiceAccountOK() *AddProjectServiceAccountOK {
	return &AddProjectServiceAccountOK{}
}

/*
AddProjectServiceAccountOK describes a response with status code 200, with default header values.

OK
*/
type AddProjectServiceAccountOK struct {
	Payload *models.ServiceAccountWithRoleDTO
}

// IsSuccess returns true when this add project service account o k response has a 2xx status code
func (o *AddProjectServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add project service account o k response has a 3xx status code
func (o *AddProjectServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account o k response has a 4xx status code
func (o *AddProjectServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add project service account o k response has a 5xx status code
func (o *AddProjectServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account o k response a status code equal to that given
func (o *AddProjectServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add project service account o k response
func (o *AddProjectServiceAccountOK) Code() int {
	return 200
}

func (o *AddProjectServiceAccountOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountOK  %+v", 200, o.Payload)
}

func (o *AddProjectServiceAccountOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountOK  %+v", 200, o.Payload)
}

func (o *AddProjectServiceAccountOK) GetPayload() *models.ServiceAccountWithRoleDTO {
	return o.Payload
}

func (o *AddProjectServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceAccountWithRoleDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectServiceAccountBadRequest creates a AddProjectServiceAccountBadRequest with default headers values
func NewAddProjectServiceAccountBadRequest() *AddProjectServiceAccountBadRequest {
	return &AddProjectServiceAccountBadRequest{}
}

/*
AddProjectServiceAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddProjectServiceAccountBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add project service account bad request response has a 2xx status code
func (o *AddProjectServiceAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account bad request response has a 3xx status code
func (o *AddProjectServiceAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account bad request response has a 4xx status code
func (o *AddProjectServiceAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account bad request response has a 5xx status code
func (o *AddProjectServiceAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account bad request response a status code equal to that given
func (o *AddProjectServiceAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add project service account bad request response
func (o *AddProjectServiceAccountBadRequest) Code() int {
	return 400
}

func (o *AddProjectServiceAccountBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *AddProjectServiceAccountBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *AddProjectServiceAccountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddProjectServiceAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectServiceAccountUnauthorized creates a AddProjectServiceAccountUnauthorized with default headers values
func NewAddProjectServiceAccountUnauthorized() *AddProjectServiceAccountUnauthorized {
	return &AddProjectServiceAccountUnauthorized{}
}

/*
AddProjectServiceAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddProjectServiceAccountUnauthorized struct {
}

// IsSuccess returns true when this add project service account unauthorized response has a 2xx status code
func (o *AddProjectServiceAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account unauthorized response has a 3xx status code
func (o *AddProjectServiceAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account unauthorized response has a 4xx status code
func (o *AddProjectServiceAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account unauthorized response has a 5xx status code
func (o *AddProjectServiceAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account unauthorized response a status code equal to that given
func (o *AddProjectServiceAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add project service account unauthorized response
func (o *AddProjectServiceAccountUnauthorized) Code() int {
	return 401
}

func (o *AddProjectServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountUnauthorized ", 401)
}

func (o *AddProjectServiceAccountUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountUnauthorized ", 401)
}

func (o *AddProjectServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectServiceAccountForbidden creates a AddProjectServiceAccountForbidden with default headers values
func NewAddProjectServiceAccountForbidden() *AddProjectServiceAccountForbidden {
	return &AddProjectServiceAccountForbidden{}
}

/*
AddProjectServiceAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddProjectServiceAccountForbidden struct {
}

// IsSuccess returns true when this add project service account forbidden response has a 2xx status code
func (o *AddProjectServiceAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account forbidden response has a 3xx status code
func (o *AddProjectServiceAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account forbidden response has a 4xx status code
func (o *AddProjectServiceAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account forbidden response has a 5xx status code
func (o *AddProjectServiceAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account forbidden response a status code equal to that given
func (o *AddProjectServiceAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add project service account forbidden response
func (o *AddProjectServiceAccountForbidden) Code() int {
	return 403
}

func (o *AddProjectServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountForbidden ", 403)
}

func (o *AddProjectServiceAccountForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountForbidden ", 403)
}

func (o *AddProjectServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectServiceAccountNotFound creates a AddProjectServiceAccountNotFound with default headers values
func NewAddProjectServiceAccountNotFound() *AddProjectServiceAccountNotFound {
	return &AddProjectServiceAccountNotFound{}
}

/*
AddProjectServiceAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddProjectServiceAccountNotFound struct {
}

// IsSuccess returns true when this add project service account not found response has a 2xx status code
func (o *AddProjectServiceAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account not found response has a 3xx status code
func (o *AddProjectServiceAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account not found response has a 4xx status code
func (o *AddProjectServiceAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account not found response has a 5xx status code
func (o *AddProjectServiceAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account not found response a status code equal to that given
func (o *AddProjectServiceAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add project service account not found response
func (o *AddProjectServiceAccountNotFound) Code() int {
	return 404
}

func (o *AddProjectServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountNotFound ", 404)
}

func (o *AddProjectServiceAccountNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountNotFound ", 404)
}

func (o *AddProjectServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectServiceAccountRequestTimeout creates a AddProjectServiceAccountRequestTimeout with default headers values
func NewAddProjectServiceAccountRequestTimeout() *AddProjectServiceAccountRequestTimeout {
	return &AddProjectServiceAccountRequestTimeout{}
}

/*
AddProjectServiceAccountRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type AddProjectServiceAccountRequestTimeout struct {
}

// IsSuccess returns true when this add project service account request timeout response has a 2xx status code
func (o *AddProjectServiceAccountRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account request timeout response has a 3xx status code
func (o *AddProjectServiceAccountRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account request timeout response has a 4xx status code
func (o *AddProjectServiceAccountRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account request timeout response has a 5xx status code
func (o *AddProjectServiceAccountRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account request timeout response a status code equal to that given
func (o *AddProjectServiceAccountRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the add project service account request timeout response
func (o *AddProjectServiceAccountRequestTimeout) Code() int {
	return 408
}

func (o *AddProjectServiceAccountRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountRequestTimeout ", 408)
}

func (o *AddProjectServiceAccountRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountRequestTimeout ", 408)
}

func (o *AddProjectServiceAccountRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectServiceAccountConflict creates a AddProjectServiceAccountConflict with default headers values
func NewAddProjectServiceAccountConflict() *AddProjectServiceAccountConflict {
	return &AddProjectServiceAccountConflict{}
}

/*
AddProjectServiceAccountConflict describes a response with status code 409, with default header values.

Conflict
*/
type AddProjectServiceAccountConflict struct {
}

// IsSuccess returns true when this add project service account conflict response has a 2xx status code
func (o *AddProjectServiceAccountConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account conflict response has a 3xx status code
func (o *AddProjectServiceAccountConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account conflict response has a 4xx status code
func (o *AddProjectServiceAccountConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account conflict response has a 5xx status code
func (o *AddProjectServiceAccountConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account conflict response a status code equal to that given
func (o *AddProjectServiceAccountConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add project service account conflict response
func (o *AddProjectServiceAccountConflict) Code() int {
	return 409
}

func (o *AddProjectServiceAccountConflict) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountConflict ", 409)
}

func (o *AddProjectServiceAccountConflict) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountConflict ", 409)
}

func (o *AddProjectServiceAccountConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectServiceAccountUnprocessableEntity creates a AddProjectServiceAccountUnprocessableEntity with default headers values
func NewAddProjectServiceAccountUnprocessableEntity() *AddProjectServiceAccountUnprocessableEntity {
	return &AddProjectServiceAccountUnprocessableEntity{}
}

/*
AddProjectServiceAccountUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type AddProjectServiceAccountUnprocessableEntity struct {
}

// IsSuccess returns true when this add project service account unprocessable entity response has a 2xx status code
func (o *AddProjectServiceAccountUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project service account unprocessable entity response has a 3xx status code
func (o *AddProjectServiceAccountUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project service account unprocessable entity response has a 4xx status code
func (o *AddProjectServiceAccountUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project service account unprocessable entity response has a 5xx status code
func (o *AddProjectServiceAccountUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this add project service account unprocessable entity response a status code equal to that given
func (o *AddProjectServiceAccountUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the add project service account unprocessable entity response
func (o *AddProjectServiceAccountUnprocessableEntity) Code() int {
	return 422
}

func (o *AddProjectServiceAccountUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountUnprocessableEntity ", 422)
}

func (o *AddProjectServiceAccountUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/service_accounts][%d] addProjectServiceAccountUnprocessableEntity ", 422)
}

func (o *AddProjectServiceAccountUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
