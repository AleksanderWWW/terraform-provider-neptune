// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// DeleteProjectServiceAccountReader is a Reader for the DeleteProjectServiceAccount structure.
type DeleteProjectServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectServiceAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProjectServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteProjectServiceAccountRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteProjectServiceAccountUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}] deleteProjectServiceAccount", response, response.Code())
	}
}

// NewDeleteProjectServiceAccountOK creates a DeleteProjectServiceAccountOK with default headers values
func NewDeleteProjectServiceAccountOK() *DeleteProjectServiceAccountOK {
	return &DeleteProjectServiceAccountOK{}
}

/*
DeleteProjectServiceAccountOK describes a response with status code 200, with default header values.

No response
*/
type DeleteProjectServiceAccountOK struct {
}

// IsSuccess returns true when this delete project service account o k response has a 2xx status code
func (o *DeleteProjectServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete project service account o k response has a 3xx status code
func (o *DeleteProjectServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account o k response has a 4xx status code
func (o *DeleteProjectServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project service account o k response has a 5xx status code
func (o *DeleteProjectServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account o k response a status code equal to that given
func (o *DeleteProjectServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete project service account o k response
func (o *DeleteProjectServiceAccountOK) Code() int {
	return 200
}

func (o *DeleteProjectServiceAccountOK) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountOK ", 200)
}

func (o *DeleteProjectServiceAccountOK) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountOK ", 200)
}

func (o *DeleteProjectServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectServiceAccountBadRequest creates a DeleteProjectServiceAccountBadRequest with default headers values
func NewDeleteProjectServiceAccountBadRequest() *DeleteProjectServiceAccountBadRequest {
	return &DeleteProjectServiceAccountBadRequest{}
}

/*
DeleteProjectServiceAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteProjectServiceAccountBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete project service account bad request response has a 2xx status code
func (o *DeleteProjectServiceAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project service account bad request response has a 3xx status code
func (o *DeleteProjectServiceAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account bad request response has a 4xx status code
func (o *DeleteProjectServiceAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project service account bad request response has a 5xx status code
func (o *DeleteProjectServiceAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account bad request response a status code equal to that given
func (o *DeleteProjectServiceAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete project service account bad request response
func (o *DeleteProjectServiceAccountBadRequest) Code() int {
	return 400
}

func (o *DeleteProjectServiceAccountBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectServiceAccountBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectServiceAccountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteProjectServiceAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectServiceAccountUnauthorized creates a DeleteProjectServiceAccountUnauthorized with default headers values
func NewDeleteProjectServiceAccountUnauthorized() *DeleteProjectServiceAccountUnauthorized {
	return &DeleteProjectServiceAccountUnauthorized{}
}

/*
DeleteProjectServiceAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteProjectServiceAccountUnauthorized struct {
}

// IsSuccess returns true when this delete project service account unauthorized response has a 2xx status code
func (o *DeleteProjectServiceAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project service account unauthorized response has a 3xx status code
func (o *DeleteProjectServiceAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account unauthorized response has a 4xx status code
func (o *DeleteProjectServiceAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project service account unauthorized response has a 5xx status code
func (o *DeleteProjectServiceAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account unauthorized response a status code equal to that given
func (o *DeleteProjectServiceAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete project service account unauthorized response
func (o *DeleteProjectServiceAccountUnauthorized) Code() int {
	return 401
}

func (o *DeleteProjectServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountUnauthorized ", 401)
}

func (o *DeleteProjectServiceAccountUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountUnauthorized ", 401)
}

func (o *DeleteProjectServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectServiceAccountForbidden creates a DeleteProjectServiceAccountForbidden with default headers values
func NewDeleteProjectServiceAccountForbidden() *DeleteProjectServiceAccountForbidden {
	return &DeleteProjectServiceAccountForbidden{}
}

/*
DeleteProjectServiceAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectServiceAccountForbidden struct {
}

// IsSuccess returns true when this delete project service account forbidden response has a 2xx status code
func (o *DeleteProjectServiceAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project service account forbidden response has a 3xx status code
func (o *DeleteProjectServiceAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account forbidden response has a 4xx status code
func (o *DeleteProjectServiceAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project service account forbidden response has a 5xx status code
func (o *DeleteProjectServiceAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account forbidden response a status code equal to that given
func (o *DeleteProjectServiceAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete project service account forbidden response
func (o *DeleteProjectServiceAccountForbidden) Code() int {
	return 403
}

func (o *DeleteProjectServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountForbidden ", 403)
}

func (o *DeleteProjectServiceAccountForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountForbidden ", 403)
}

func (o *DeleteProjectServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectServiceAccountNotFound creates a DeleteProjectServiceAccountNotFound with default headers values
func NewDeleteProjectServiceAccountNotFound() *DeleteProjectServiceAccountNotFound {
	return &DeleteProjectServiceAccountNotFound{}
}

/*
DeleteProjectServiceAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteProjectServiceAccountNotFound struct {
}

// IsSuccess returns true when this delete project service account not found response has a 2xx status code
func (o *DeleteProjectServiceAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project service account not found response has a 3xx status code
func (o *DeleteProjectServiceAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account not found response has a 4xx status code
func (o *DeleteProjectServiceAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project service account not found response has a 5xx status code
func (o *DeleteProjectServiceAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account not found response a status code equal to that given
func (o *DeleteProjectServiceAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete project service account not found response
func (o *DeleteProjectServiceAccountNotFound) Code() int {
	return 404
}

func (o *DeleteProjectServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountNotFound ", 404)
}

func (o *DeleteProjectServiceAccountNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountNotFound ", 404)
}

func (o *DeleteProjectServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectServiceAccountRequestTimeout creates a DeleteProjectServiceAccountRequestTimeout with default headers values
func NewDeleteProjectServiceAccountRequestTimeout() *DeleteProjectServiceAccountRequestTimeout {
	return &DeleteProjectServiceAccountRequestTimeout{}
}

/*
DeleteProjectServiceAccountRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type DeleteProjectServiceAccountRequestTimeout struct {
}

// IsSuccess returns true when this delete project service account request timeout response has a 2xx status code
func (o *DeleteProjectServiceAccountRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project service account request timeout response has a 3xx status code
func (o *DeleteProjectServiceAccountRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account request timeout response has a 4xx status code
func (o *DeleteProjectServiceAccountRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project service account request timeout response has a 5xx status code
func (o *DeleteProjectServiceAccountRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account request timeout response a status code equal to that given
func (o *DeleteProjectServiceAccountRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the delete project service account request timeout response
func (o *DeleteProjectServiceAccountRequestTimeout) Code() int {
	return 408
}

func (o *DeleteProjectServiceAccountRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountRequestTimeout ", 408)
}

func (o *DeleteProjectServiceAccountRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountRequestTimeout ", 408)
}

func (o *DeleteProjectServiceAccountRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectServiceAccountUnprocessableEntity creates a DeleteProjectServiceAccountUnprocessableEntity with default headers values
func NewDeleteProjectServiceAccountUnprocessableEntity() *DeleteProjectServiceAccountUnprocessableEntity {
	return &DeleteProjectServiceAccountUnprocessableEntity{}
}

/*
DeleteProjectServiceAccountUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeleteProjectServiceAccountUnprocessableEntity struct {
}

// IsSuccess returns true when this delete project service account unprocessable entity response has a 2xx status code
func (o *DeleteProjectServiceAccountUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project service account unprocessable entity response has a 3xx status code
func (o *DeleteProjectServiceAccountUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project service account unprocessable entity response has a 4xx status code
func (o *DeleteProjectServiceAccountUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project service account unprocessable entity response has a 5xx status code
func (o *DeleteProjectServiceAccountUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project service account unprocessable entity response a status code equal to that given
func (o *DeleteProjectServiceAccountUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete project service account unprocessable entity response
func (o *DeleteProjectServiceAccountUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteProjectServiceAccountUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountUnprocessableEntity ", 422)
}

func (o *DeleteProjectServiceAccountUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/projects/service_accounts/{serviceAccountId}][%d] deleteProjectServiceAccountUnprocessableEntity ", 422)
}

func (o *DeleteProjectServiceAccountUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
