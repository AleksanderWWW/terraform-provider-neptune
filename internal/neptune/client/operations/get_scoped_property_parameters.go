// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetScopedPropertyParams creates a new GetScopedPropertyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetScopedPropertyParams() *GetScopedPropertyParams {
	return &GetScopedPropertyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetScopedPropertyParamsWithTimeout creates a new GetScopedPropertyParams object
// with the ability to set a timeout on a request.
func NewGetScopedPropertyParamsWithTimeout(timeout time.Duration) *GetScopedPropertyParams {
	return &GetScopedPropertyParams{
		timeout: timeout,
	}
}

// NewGetScopedPropertyParamsWithContext creates a new GetScopedPropertyParams object
// with the ability to set a context for a request.
func NewGetScopedPropertyParamsWithContext(ctx context.Context) *GetScopedPropertyParams {
	return &GetScopedPropertyParams{
		Context: ctx,
	}
}

// NewGetScopedPropertyParamsWithHTTPClient creates a new GetScopedPropertyParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetScopedPropertyParamsWithHTTPClient(client *http.Client) *GetScopedPropertyParams {
	return &GetScopedPropertyParams{
		HTTPClient: client,
	}
}

/*
GetScopedPropertyParams contains all the parameters to send to the API endpoint

	for the get scoped property operation.

	Typically these are written to a http.Request.
*/
type GetScopedPropertyParams struct {

	// Key.
	Key string

	// PropertyType.
	PropertyType string

	// Scope.
	Scope string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get scoped property params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScopedPropertyParams) WithDefaults() *GetScopedPropertyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get scoped property params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScopedPropertyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get scoped property params
func (o *GetScopedPropertyParams) WithTimeout(timeout time.Duration) *GetScopedPropertyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get scoped property params
func (o *GetScopedPropertyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get scoped property params
func (o *GetScopedPropertyParams) WithContext(ctx context.Context) *GetScopedPropertyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get scoped property params
func (o *GetScopedPropertyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get scoped property params
func (o *GetScopedPropertyParams) WithHTTPClient(client *http.Client) *GetScopedPropertyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get scoped property params
func (o *GetScopedPropertyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKey adds the key to the get scoped property params
func (o *GetScopedPropertyParams) WithKey(key string) *GetScopedPropertyParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the get scoped property params
func (o *GetScopedPropertyParams) SetKey(key string) {
	o.Key = key
}

// WithPropertyType adds the propertyType to the get scoped property params
func (o *GetScopedPropertyParams) WithPropertyType(propertyType string) *GetScopedPropertyParams {
	o.SetPropertyType(propertyType)
	return o
}

// SetPropertyType adds the propertyType to the get scoped property params
func (o *GetScopedPropertyParams) SetPropertyType(propertyType string) {
	o.PropertyType = propertyType
}

// WithScope adds the scope to the get scoped property params
func (o *GetScopedPropertyParams) WithScope(scope string) *GetScopedPropertyParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the get scoped property params
func (o *GetScopedPropertyParams) SetScope(scope string) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *GetScopedPropertyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param key
	qrKey := o.Key
	qKey := qrKey
	if qKey != "" {

		if err := r.SetQueryParam("key", qKey); err != nil {
			return err
		}
	}

	// query param propertyType
	qrPropertyType := o.PropertyType
	qPropertyType := qrPropertyType
	if qPropertyType != "" {

		if err := r.SetQueryParam("propertyType", qPropertyType); err != nil {
			return err
		}
	}

	// query param scope
	qrScope := o.Scope
	qScope := qrScope
	if qScope != "" {

		if err := r.SetQueryParam("scope", qScope); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
