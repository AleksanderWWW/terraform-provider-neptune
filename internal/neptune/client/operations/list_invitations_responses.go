// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// ListInvitationsReader is a Reader for the ListInvitations structure.
type ListInvitationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInvitationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListInvitationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListInvitationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListInvitationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListInvitationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListInvitationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewListInvitationsRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListInvitationsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/invitations] listInvitations", response, response.Code())
	}
}

// NewListInvitationsOK creates a ListInvitationsOK with default headers values
func NewListInvitationsOK() *ListInvitationsOK {
	return &ListInvitationsOK{}
}

/*
ListInvitationsOK describes a response with status code 200, with default header values.

OK
*/
type ListInvitationsOK struct {
	Payload *models.InvitationListDTO
}

// IsSuccess returns true when this list invitations o k response has a 2xx status code
func (o *ListInvitationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list invitations o k response has a 3xx status code
func (o *ListInvitationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations o k response has a 4xx status code
func (o *ListInvitationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list invitations o k response has a 5xx status code
func (o *ListInvitationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations o k response a status code equal to that given
func (o *ListInvitationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list invitations o k response
func (o *ListInvitationsOK) Code() int {
	return 200
}

func (o *ListInvitationsOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsOK  %+v", 200, o.Payload)
}

func (o *ListInvitationsOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsOK  %+v", 200, o.Payload)
}

func (o *ListInvitationsOK) GetPayload() *models.InvitationListDTO {
	return o.Payload
}

func (o *ListInvitationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InvitationListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInvitationsBadRequest creates a ListInvitationsBadRequest with default headers values
func NewListInvitationsBadRequest() *ListInvitationsBadRequest {
	return &ListInvitationsBadRequest{}
}

/*
ListInvitationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListInvitationsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list invitations bad request response has a 2xx status code
func (o *ListInvitationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list invitations bad request response has a 3xx status code
func (o *ListInvitationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations bad request response has a 4xx status code
func (o *ListInvitationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list invitations bad request response has a 5xx status code
func (o *ListInvitationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations bad request response a status code equal to that given
func (o *ListInvitationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list invitations bad request response
func (o *ListInvitationsBadRequest) Code() int {
	return 400
}

func (o *ListInvitationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsBadRequest  %+v", 400, o.Payload)
}

func (o *ListInvitationsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsBadRequest  %+v", 400, o.Payload)
}

func (o *ListInvitationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListInvitationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInvitationsUnauthorized creates a ListInvitationsUnauthorized with default headers values
func NewListInvitationsUnauthorized() *ListInvitationsUnauthorized {
	return &ListInvitationsUnauthorized{}
}

/*
ListInvitationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListInvitationsUnauthorized struct {
}

// IsSuccess returns true when this list invitations unauthorized response has a 2xx status code
func (o *ListInvitationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list invitations unauthorized response has a 3xx status code
func (o *ListInvitationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations unauthorized response has a 4xx status code
func (o *ListInvitationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list invitations unauthorized response has a 5xx status code
func (o *ListInvitationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations unauthorized response a status code equal to that given
func (o *ListInvitationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list invitations unauthorized response
func (o *ListInvitationsUnauthorized) Code() int {
	return 401
}

func (o *ListInvitationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsUnauthorized ", 401)
}

func (o *ListInvitationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsUnauthorized ", 401)
}

func (o *ListInvitationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListInvitationsForbidden creates a ListInvitationsForbidden with default headers values
func NewListInvitationsForbidden() *ListInvitationsForbidden {
	return &ListInvitationsForbidden{}
}

/*
ListInvitationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListInvitationsForbidden struct {
}

// IsSuccess returns true when this list invitations forbidden response has a 2xx status code
func (o *ListInvitationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list invitations forbidden response has a 3xx status code
func (o *ListInvitationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations forbidden response has a 4xx status code
func (o *ListInvitationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list invitations forbidden response has a 5xx status code
func (o *ListInvitationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations forbidden response a status code equal to that given
func (o *ListInvitationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list invitations forbidden response
func (o *ListInvitationsForbidden) Code() int {
	return 403
}

func (o *ListInvitationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsForbidden ", 403)
}

func (o *ListInvitationsForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsForbidden ", 403)
}

func (o *ListInvitationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListInvitationsNotFound creates a ListInvitationsNotFound with default headers values
func NewListInvitationsNotFound() *ListInvitationsNotFound {
	return &ListInvitationsNotFound{}
}

/*
ListInvitationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListInvitationsNotFound struct {
}

// IsSuccess returns true when this list invitations not found response has a 2xx status code
func (o *ListInvitationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list invitations not found response has a 3xx status code
func (o *ListInvitationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations not found response has a 4xx status code
func (o *ListInvitationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list invitations not found response has a 5xx status code
func (o *ListInvitationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations not found response a status code equal to that given
func (o *ListInvitationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list invitations not found response
func (o *ListInvitationsNotFound) Code() int {
	return 404
}

func (o *ListInvitationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsNotFound ", 404)
}

func (o *ListInvitationsNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsNotFound ", 404)
}

func (o *ListInvitationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListInvitationsRequestTimeout creates a ListInvitationsRequestTimeout with default headers values
func NewListInvitationsRequestTimeout() *ListInvitationsRequestTimeout {
	return &ListInvitationsRequestTimeout{}
}

/*
ListInvitationsRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ListInvitationsRequestTimeout struct {
}

// IsSuccess returns true when this list invitations request timeout response has a 2xx status code
func (o *ListInvitationsRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list invitations request timeout response has a 3xx status code
func (o *ListInvitationsRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations request timeout response has a 4xx status code
func (o *ListInvitationsRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this list invitations request timeout response has a 5xx status code
func (o *ListInvitationsRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations request timeout response a status code equal to that given
func (o *ListInvitationsRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the list invitations request timeout response
func (o *ListInvitationsRequestTimeout) Code() int {
	return 408
}

func (o *ListInvitationsRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsRequestTimeout ", 408)
}

func (o *ListInvitationsRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsRequestTimeout ", 408)
}

func (o *ListInvitationsRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListInvitationsUnprocessableEntity creates a ListInvitationsUnprocessableEntity with default headers values
func NewListInvitationsUnprocessableEntity() *ListInvitationsUnprocessableEntity {
	return &ListInvitationsUnprocessableEntity{}
}

/*
ListInvitationsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ListInvitationsUnprocessableEntity struct {
}

// IsSuccess returns true when this list invitations unprocessable entity response has a 2xx status code
func (o *ListInvitationsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list invitations unprocessable entity response has a 3xx status code
func (o *ListInvitationsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list invitations unprocessable entity response has a 4xx status code
func (o *ListInvitationsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list invitations unprocessable entity response has a 5xx status code
func (o *ListInvitationsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list invitations unprocessable entity response a status code equal to that given
func (o *ListInvitationsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list invitations unprocessable entity response
func (o *ListInvitationsUnprocessableEntity) Code() int {
	return 422
}

func (o *ListInvitationsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsUnprocessableEntity ", 422)
}

func (o *ListInvitationsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations][%d] listInvitationsUnprocessableEntity ", 422)
}

func (o *ListInvitationsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
