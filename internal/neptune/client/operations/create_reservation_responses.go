// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// CreateReservationReader is a Reader for the CreateReservation structure.
type CreateReservationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateReservationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateReservationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateReservationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateReservationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateReservationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateReservationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCreateReservationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateReservationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/reservations] createReservation", response, response.Code())
	}
}

// NewCreateReservationOK creates a CreateReservationOK with default headers values
func NewCreateReservationOK() *CreateReservationOK {
	return &CreateReservationOK{}
}

/*
CreateReservationOK describes a response with status code 200, with default header values.

No response
*/
type CreateReservationOK struct {
}

// IsSuccess returns true when this create reservation o k response has a 2xx status code
func (o *CreateReservationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create reservation o k response has a 3xx status code
func (o *CreateReservationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation o k response has a 4xx status code
func (o *CreateReservationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create reservation o k response has a 5xx status code
func (o *CreateReservationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation o k response a status code equal to that given
func (o *CreateReservationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create reservation o k response
func (o *CreateReservationOK) Code() int {
	return 200
}

func (o *CreateReservationOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationOK ", 200)
}

func (o *CreateReservationOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationOK ", 200)
}

func (o *CreateReservationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateReservationBadRequest creates a CreateReservationBadRequest with default headers values
func NewCreateReservationBadRequest() *CreateReservationBadRequest {
	return &CreateReservationBadRequest{}
}

/*
CreateReservationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateReservationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create reservation bad request response has a 2xx status code
func (o *CreateReservationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create reservation bad request response has a 3xx status code
func (o *CreateReservationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation bad request response has a 4xx status code
func (o *CreateReservationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create reservation bad request response has a 5xx status code
func (o *CreateReservationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation bad request response a status code equal to that given
func (o *CreateReservationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create reservation bad request response
func (o *CreateReservationBadRequest) Code() int {
	return 400
}

func (o *CreateReservationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateReservationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationBadRequest  %+v", 400, o.Payload)
}

func (o *CreateReservationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateReservationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateReservationUnauthorized creates a CreateReservationUnauthorized with default headers values
func NewCreateReservationUnauthorized() *CreateReservationUnauthorized {
	return &CreateReservationUnauthorized{}
}

/*
CreateReservationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateReservationUnauthorized struct {
}

// IsSuccess returns true when this create reservation unauthorized response has a 2xx status code
func (o *CreateReservationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create reservation unauthorized response has a 3xx status code
func (o *CreateReservationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation unauthorized response has a 4xx status code
func (o *CreateReservationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create reservation unauthorized response has a 5xx status code
func (o *CreateReservationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation unauthorized response a status code equal to that given
func (o *CreateReservationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create reservation unauthorized response
func (o *CreateReservationUnauthorized) Code() int {
	return 401
}

func (o *CreateReservationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationUnauthorized ", 401)
}

func (o *CreateReservationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationUnauthorized ", 401)
}

func (o *CreateReservationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateReservationForbidden creates a CreateReservationForbidden with default headers values
func NewCreateReservationForbidden() *CreateReservationForbidden {
	return &CreateReservationForbidden{}
}

/*
CreateReservationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateReservationForbidden struct {
}

// IsSuccess returns true when this create reservation forbidden response has a 2xx status code
func (o *CreateReservationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create reservation forbidden response has a 3xx status code
func (o *CreateReservationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation forbidden response has a 4xx status code
func (o *CreateReservationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create reservation forbidden response has a 5xx status code
func (o *CreateReservationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation forbidden response a status code equal to that given
func (o *CreateReservationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create reservation forbidden response
func (o *CreateReservationForbidden) Code() int {
	return 403
}

func (o *CreateReservationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationForbidden ", 403)
}

func (o *CreateReservationForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationForbidden ", 403)
}

func (o *CreateReservationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateReservationNotFound creates a CreateReservationNotFound with default headers values
func NewCreateReservationNotFound() *CreateReservationNotFound {
	return &CreateReservationNotFound{}
}

/*
CreateReservationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateReservationNotFound struct {
}

// IsSuccess returns true when this create reservation not found response has a 2xx status code
func (o *CreateReservationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create reservation not found response has a 3xx status code
func (o *CreateReservationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation not found response has a 4xx status code
func (o *CreateReservationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create reservation not found response has a 5xx status code
func (o *CreateReservationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation not found response a status code equal to that given
func (o *CreateReservationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create reservation not found response
func (o *CreateReservationNotFound) Code() int {
	return 404
}

func (o *CreateReservationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationNotFound ", 404)
}

func (o *CreateReservationNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationNotFound ", 404)
}

func (o *CreateReservationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateReservationRequestTimeout creates a CreateReservationRequestTimeout with default headers values
func NewCreateReservationRequestTimeout() *CreateReservationRequestTimeout {
	return &CreateReservationRequestTimeout{}
}

/*
CreateReservationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type CreateReservationRequestTimeout struct {
}

// IsSuccess returns true when this create reservation request timeout response has a 2xx status code
func (o *CreateReservationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create reservation request timeout response has a 3xx status code
func (o *CreateReservationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation request timeout response has a 4xx status code
func (o *CreateReservationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this create reservation request timeout response has a 5xx status code
func (o *CreateReservationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation request timeout response a status code equal to that given
func (o *CreateReservationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the create reservation request timeout response
func (o *CreateReservationRequestTimeout) Code() int {
	return 408
}

func (o *CreateReservationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationRequestTimeout ", 408)
}

func (o *CreateReservationRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationRequestTimeout ", 408)
}

func (o *CreateReservationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateReservationUnprocessableEntity creates a CreateReservationUnprocessableEntity with default headers values
func NewCreateReservationUnprocessableEntity() *CreateReservationUnprocessableEntity {
	return &CreateReservationUnprocessableEntity{}
}

/*
CreateReservationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateReservationUnprocessableEntity struct {
}

// IsSuccess returns true when this create reservation unprocessable entity response has a 2xx status code
func (o *CreateReservationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create reservation unprocessable entity response has a 3xx status code
func (o *CreateReservationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create reservation unprocessable entity response has a 4xx status code
func (o *CreateReservationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create reservation unprocessable entity response has a 5xx status code
func (o *CreateReservationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create reservation unprocessable entity response a status code equal to that given
func (o *CreateReservationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create reservation unprocessable entity response
func (o *CreateReservationUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateReservationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationUnprocessableEntity ", 422)
}

func (o *CreateReservationUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/reservations][%d] createReservationUnprocessableEntity ", 422)
}

func (o *CreateReservationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
