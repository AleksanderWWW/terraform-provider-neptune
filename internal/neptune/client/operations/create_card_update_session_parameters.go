// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// NewCreateCardUpdateSessionParams creates a new CreateCardUpdateSessionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateCardUpdateSessionParams() *CreateCardUpdateSessionParams {
	return &CreateCardUpdateSessionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateCardUpdateSessionParamsWithTimeout creates a new CreateCardUpdateSessionParams object
// with the ability to set a timeout on a request.
func NewCreateCardUpdateSessionParamsWithTimeout(timeout time.Duration) *CreateCardUpdateSessionParams {
	return &CreateCardUpdateSessionParams{
		timeout: timeout,
	}
}

// NewCreateCardUpdateSessionParamsWithContext creates a new CreateCardUpdateSessionParams object
// with the ability to set a context for a request.
func NewCreateCardUpdateSessionParamsWithContext(ctx context.Context) *CreateCardUpdateSessionParams {
	return &CreateCardUpdateSessionParams{
		Context: ctx,
	}
}

// NewCreateCardUpdateSessionParamsWithHTTPClient creates a new CreateCardUpdateSessionParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateCardUpdateSessionParamsWithHTTPClient(client *http.Client) *CreateCardUpdateSessionParams {
	return &CreateCardUpdateSessionParams{
		HTTPClient: client,
	}
}

/*
CreateCardUpdateSessionParams contains all the parameters to send to the API endpoint

	for the create card update session operation.

	Typically these are written to a http.Request.
*/
type CreateCardUpdateSessionParams struct {

	/* CreateSessionParams.

	   Stripe Checkout Session details
	*/
	CreateSessionParams *models.CreateSessionParamsDTO

	// OrganizationIdentifier.
	OrganizationIdentifier string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create card update session params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateCardUpdateSessionParams) WithDefaults() *CreateCardUpdateSessionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create card update session params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateCardUpdateSessionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create card update session params
func (o *CreateCardUpdateSessionParams) WithTimeout(timeout time.Duration) *CreateCardUpdateSessionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create card update session params
func (o *CreateCardUpdateSessionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create card update session params
func (o *CreateCardUpdateSessionParams) WithContext(ctx context.Context) *CreateCardUpdateSessionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create card update session params
func (o *CreateCardUpdateSessionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create card update session params
func (o *CreateCardUpdateSessionParams) WithHTTPClient(client *http.Client) *CreateCardUpdateSessionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create card update session params
func (o *CreateCardUpdateSessionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateSessionParams adds the createSessionParams to the create card update session params
func (o *CreateCardUpdateSessionParams) WithCreateSessionParams(createSessionParams *models.CreateSessionParamsDTO) *CreateCardUpdateSessionParams {
	o.SetCreateSessionParams(createSessionParams)
	return o
}

// SetCreateSessionParams adds the createSessionParams to the create card update session params
func (o *CreateCardUpdateSessionParams) SetCreateSessionParams(createSessionParams *models.CreateSessionParamsDTO) {
	o.CreateSessionParams = createSessionParams
}

// WithOrganizationIdentifier adds the organizationIdentifier to the create card update session params
func (o *CreateCardUpdateSessionParams) WithOrganizationIdentifier(organizationIdentifier string) *CreateCardUpdateSessionParams {
	o.SetOrganizationIdentifier(organizationIdentifier)
	return o
}

// SetOrganizationIdentifier adds the organizationIdentifier to the create card update session params
func (o *CreateCardUpdateSessionParams) SetOrganizationIdentifier(organizationIdentifier string) {
	o.OrganizationIdentifier = organizationIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *CreateCardUpdateSessionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CreateSessionParams != nil {
		if err := r.SetBodyParam(o.CreateSessionParams); err != nil {
			return err
		}
	}

	// path param organizationIdentifier
	if err := r.SetPathParam("organizationIdentifier", o.OrganizationIdentifier); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
