// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// DeleteScopedPropertyReader is a Reader for the DeleteScopedProperty structure.
type DeleteScopedPropertyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScopedPropertyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteScopedPropertyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteScopedPropertyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteScopedPropertyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteScopedPropertyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteScopedPropertyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeleteScopedPropertyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteScopedPropertyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/backend/v1/clients/properties] deleteScopedProperty", response, response.Code())
	}
}

// NewDeleteScopedPropertyOK creates a DeleteScopedPropertyOK with default headers values
func NewDeleteScopedPropertyOK() *DeleteScopedPropertyOK {
	return &DeleteScopedPropertyOK{}
}

/*
DeleteScopedPropertyOK describes a response with status code 200, with default header values.

No response
*/
type DeleteScopedPropertyOK struct {
}

// IsSuccess returns true when this delete scoped property o k response has a 2xx status code
func (o *DeleteScopedPropertyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete scoped property o k response has a 3xx status code
func (o *DeleteScopedPropertyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property o k response has a 4xx status code
func (o *DeleteScopedPropertyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete scoped property o k response has a 5xx status code
func (o *DeleteScopedPropertyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property o k response a status code equal to that given
func (o *DeleteScopedPropertyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete scoped property o k response
func (o *DeleteScopedPropertyOK) Code() int {
	return 200
}

func (o *DeleteScopedPropertyOK) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyOK ", 200)
}

func (o *DeleteScopedPropertyOK) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyOK ", 200)
}

func (o *DeleteScopedPropertyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopedPropertyBadRequest creates a DeleteScopedPropertyBadRequest with default headers values
func NewDeleteScopedPropertyBadRequest() *DeleteScopedPropertyBadRequest {
	return &DeleteScopedPropertyBadRequest{}
}

/*
DeleteScopedPropertyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteScopedPropertyBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete scoped property bad request response has a 2xx status code
func (o *DeleteScopedPropertyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete scoped property bad request response has a 3xx status code
func (o *DeleteScopedPropertyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property bad request response has a 4xx status code
func (o *DeleteScopedPropertyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete scoped property bad request response has a 5xx status code
func (o *DeleteScopedPropertyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property bad request response a status code equal to that given
func (o *DeleteScopedPropertyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete scoped property bad request response
func (o *DeleteScopedPropertyBadRequest) Code() int {
	return 400
}

func (o *DeleteScopedPropertyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteScopedPropertyBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteScopedPropertyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteScopedPropertyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScopedPropertyUnauthorized creates a DeleteScopedPropertyUnauthorized with default headers values
func NewDeleteScopedPropertyUnauthorized() *DeleteScopedPropertyUnauthorized {
	return &DeleteScopedPropertyUnauthorized{}
}

/*
DeleteScopedPropertyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteScopedPropertyUnauthorized struct {
}

// IsSuccess returns true when this delete scoped property unauthorized response has a 2xx status code
func (o *DeleteScopedPropertyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete scoped property unauthorized response has a 3xx status code
func (o *DeleteScopedPropertyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property unauthorized response has a 4xx status code
func (o *DeleteScopedPropertyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete scoped property unauthorized response has a 5xx status code
func (o *DeleteScopedPropertyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property unauthorized response a status code equal to that given
func (o *DeleteScopedPropertyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete scoped property unauthorized response
func (o *DeleteScopedPropertyUnauthorized) Code() int {
	return 401
}

func (o *DeleteScopedPropertyUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyUnauthorized ", 401)
}

func (o *DeleteScopedPropertyUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyUnauthorized ", 401)
}

func (o *DeleteScopedPropertyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopedPropertyForbidden creates a DeleteScopedPropertyForbidden with default headers values
func NewDeleteScopedPropertyForbidden() *DeleteScopedPropertyForbidden {
	return &DeleteScopedPropertyForbidden{}
}

/*
DeleteScopedPropertyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteScopedPropertyForbidden struct {
}

// IsSuccess returns true when this delete scoped property forbidden response has a 2xx status code
func (o *DeleteScopedPropertyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete scoped property forbidden response has a 3xx status code
func (o *DeleteScopedPropertyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property forbidden response has a 4xx status code
func (o *DeleteScopedPropertyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete scoped property forbidden response has a 5xx status code
func (o *DeleteScopedPropertyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property forbidden response a status code equal to that given
func (o *DeleteScopedPropertyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete scoped property forbidden response
func (o *DeleteScopedPropertyForbidden) Code() int {
	return 403
}

func (o *DeleteScopedPropertyForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyForbidden ", 403)
}

func (o *DeleteScopedPropertyForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyForbidden ", 403)
}

func (o *DeleteScopedPropertyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopedPropertyNotFound creates a DeleteScopedPropertyNotFound with default headers values
func NewDeleteScopedPropertyNotFound() *DeleteScopedPropertyNotFound {
	return &DeleteScopedPropertyNotFound{}
}

/*
DeleteScopedPropertyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteScopedPropertyNotFound struct {
}

// IsSuccess returns true when this delete scoped property not found response has a 2xx status code
func (o *DeleteScopedPropertyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete scoped property not found response has a 3xx status code
func (o *DeleteScopedPropertyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property not found response has a 4xx status code
func (o *DeleteScopedPropertyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete scoped property not found response has a 5xx status code
func (o *DeleteScopedPropertyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property not found response a status code equal to that given
func (o *DeleteScopedPropertyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete scoped property not found response
func (o *DeleteScopedPropertyNotFound) Code() int {
	return 404
}

func (o *DeleteScopedPropertyNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyNotFound ", 404)
}

func (o *DeleteScopedPropertyNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyNotFound ", 404)
}

func (o *DeleteScopedPropertyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopedPropertyRequestTimeout creates a DeleteScopedPropertyRequestTimeout with default headers values
func NewDeleteScopedPropertyRequestTimeout() *DeleteScopedPropertyRequestTimeout {
	return &DeleteScopedPropertyRequestTimeout{}
}

/*
DeleteScopedPropertyRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type DeleteScopedPropertyRequestTimeout struct {
}

// IsSuccess returns true when this delete scoped property request timeout response has a 2xx status code
func (o *DeleteScopedPropertyRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete scoped property request timeout response has a 3xx status code
func (o *DeleteScopedPropertyRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property request timeout response has a 4xx status code
func (o *DeleteScopedPropertyRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete scoped property request timeout response has a 5xx status code
func (o *DeleteScopedPropertyRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property request timeout response a status code equal to that given
func (o *DeleteScopedPropertyRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the delete scoped property request timeout response
func (o *DeleteScopedPropertyRequestTimeout) Code() int {
	return 408
}

func (o *DeleteScopedPropertyRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyRequestTimeout ", 408)
}

func (o *DeleteScopedPropertyRequestTimeout) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyRequestTimeout ", 408)
}

func (o *DeleteScopedPropertyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopedPropertyUnprocessableEntity creates a DeleteScopedPropertyUnprocessableEntity with default headers values
func NewDeleteScopedPropertyUnprocessableEntity() *DeleteScopedPropertyUnprocessableEntity {
	return &DeleteScopedPropertyUnprocessableEntity{}
}

/*
DeleteScopedPropertyUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeleteScopedPropertyUnprocessableEntity struct {
}

// IsSuccess returns true when this delete scoped property unprocessable entity response has a 2xx status code
func (o *DeleteScopedPropertyUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete scoped property unprocessable entity response has a 3xx status code
func (o *DeleteScopedPropertyUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete scoped property unprocessable entity response has a 4xx status code
func (o *DeleteScopedPropertyUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete scoped property unprocessable entity response has a 5xx status code
func (o *DeleteScopedPropertyUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete scoped property unprocessable entity response a status code equal to that given
func (o *DeleteScopedPropertyUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete scoped property unprocessable entity response
func (o *DeleteScopedPropertyUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteScopedPropertyUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyUnprocessableEntity ", 422)
}

func (o *DeleteScopedPropertyUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/backend/v1/clients/properties][%d] deleteScopedPropertyUnprocessableEntity ", 422)
}

func (o *DeleteScopedPropertyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
