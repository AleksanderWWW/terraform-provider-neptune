// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// ActivateServiceAccountReader is a Reader for the ActivateServiceAccount structure.
type ActivateServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActivateServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewActivateServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewActivateServiceAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewActivateServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewActivateServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewActivateServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewActivateServiceAccountRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewActivateServiceAccountUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /api/backend/v1/serviceAccounts/activate] activateServiceAccount", response, response.Code())
	}
}

// NewActivateServiceAccountOK creates a ActivateServiceAccountOK with default headers values
func NewActivateServiceAccountOK() *ActivateServiceAccountOK {
	return &ActivateServiceAccountOK{}
}

/*
ActivateServiceAccountOK describes a response with status code 200, with default header values.

No response
*/
type ActivateServiceAccountOK struct {
}

// IsSuccess returns true when this activate service account o k response has a 2xx status code
func (o *ActivateServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this activate service account o k response has a 3xx status code
func (o *ActivateServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account o k response has a 4xx status code
func (o *ActivateServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this activate service account o k response has a 5xx status code
func (o *ActivateServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account o k response a status code equal to that given
func (o *ActivateServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the activate service account o k response
func (o *ActivateServiceAccountOK) Code() int {
	return 200
}

func (o *ActivateServiceAccountOK) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountOK ", 200)
}

func (o *ActivateServiceAccountOK) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountOK ", 200)
}

func (o *ActivateServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewActivateServiceAccountBadRequest creates a ActivateServiceAccountBadRequest with default headers values
func NewActivateServiceAccountBadRequest() *ActivateServiceAccountBadRequest {
	return &ActivateServiceAccountBadRequest{}
}

/*
ActivateServiceAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ActivateServiceAccountBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate service account bad request response has a 2xx status code
func (o *ActivateServiceAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate service account bad request response has a 3xx status code
func (o *ActivateServiceAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account bad request response has a 4xx status code
func (o *ActivateServiceAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate service account bad request response has a 5xx status code
func (o *ActivateServiceAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account bad request response a status code equal to that given
func (o *ActivateServiceAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the activate service account bad request response
func (o *ActivateServiceAccountBadRequest) Code() int {
	return 400
}

func (o *ActivateServiceAccountBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *ActivateServiceAccountBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *ActivateServiceAccountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateServiceAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateServiceAccountUnauthorized creates a ActivateServiceAccountUnauthorized with default headers values
func NewActivateServiceAccountUnauthorized() *ActivateServiceAccountUnauthorized {
	return &ActivateServiceAccountUnauthorized{}
}

/*
ActivateServiceAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ActivateServiceAccountUnauthorized struct {
}

// IsSuccess returns true when this activate service account unauthorized response has a 2xx status code
func (o *ActivateServiceAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate service account unauthorized response has a 3xx status code
func (o *ActivateServiceAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account unauthorized response has a 4xx status code
func (o *ActivateServiceAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate service account unauthorized response has a 5xx status code
func (o *ActivateServiceAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account unauthorized response a status code equal to that given
func (o *ActivateServiceAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the activate service account unauthorized response
func (o *ActivateServiceAccountUnauthorized) Code() int {
	return 401
}

func (o *ActivateServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountUnauthorized ", 401)
}

func (o *ActivateServiceAccountUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountUnauthorized ", 401)
}

func (o *ActivateServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewActivateServiceAccountForbidden creates a ActivateServiceAccountForbidden with default headers values
func NewActivateServiceAccountForbidden() *ActivateServiceAccountForbidden {
	return &ActivateServiceAccountForbidden{}
}

/*
ActivateServiceAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ActivateServiceAccountForbidden struct {
}

// IsSuccess returns true when this activate service account forbidden response has a 2xx status code
func (o *ActivateServiceAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate service account forbidden response has a 3xx status code
func (o *ActivateServiceAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account forbidden response has a 4xx status code
func (o *ActivateServiceAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate service account forbidden response has a 5xx status code
func (o *ActivateServiceAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account forbidden response a status code equal to that given
func (o *ActivateServiceAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the activate service account forbidden response
func (o *ActivateServiceAccountForbidden) Code() int {
	return 403
}

func (o *ActivateServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountForbidden ", 403)
}

func (o *ActivateServiceAccountForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountForbidden ", 403)
}

func (o *ActivateServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewActivateServiceAccountNotFound creates a ActivateServiceAccountNotFound with default headers values
func NewActivateServiceAccountNotFound() *ActivateServiceAccountNotFound {
	return &ActivateServiceAccountNotFound{}
}

/*
ActivateServiceAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ActivateServiceAccountNotFound struct {
}

// IsSuccess returns true when this activate service account not found response has a 2xx status code
func (o *ActivateServiceAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate service account not found response has a 3xx status code
func (o *ActivateServiceAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account not found response has a 4xx status code
func (o *ActivateServiceAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate service account not found response has a 5xx status code
func (o *ActivateServiceAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account not found response a status code equal to that given
func (o *ActivateServiceAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the activate service account not found response
func (o *ActivateServiceAccountNotFound) Code() int {
	return 404
}

func (o *ActivateServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountNotFound ", 404)
}

func (o *ActivateServiceAccountNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountNotFound ", 404)
}

func (o *ActivateServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewActivateServiceAccountRequestTimeout creates a ActivateServiceAccountRequestTimeout with default headers values
func NewActivateServiceAccountRequestTimeout() *ActivateServiceAccountRequestTimeout {
	return &ActivateServiceAccountRequestTimeout{}
}

/*
ActivateServiceAccountRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ActivateServiceAccountRequestTimeout struct {
}

// IsSuccess returns true when this activate service account request timeout response has a 2xx status code
func (o *ActivateServiceAccountRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate service account request timeout response has a 3xx status code
func (o *ActivateServiceAccountRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account request timeout response has a 4xx status code
func (o *ActivateServiceAccountRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate service account request timeout response has a 5xx status code
func (o *ActivateServiceAccountRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account request timeout response a status code equal to that given
func (o *ActivateServiceAccountRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the activate service account request timeout response
func (o *ActivateServiceAccountRequestTimeout) Code() int {
	return 408
}

func (o *ActivateServiceAccountRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountRequestTimeout ", 408)
}

func (o *ActivateServiceAccountRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountRequestTimeout ", 408)
}

func (o *ActivateServiceAccountRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewActivateServiceAccountUnprocessableEntity creates a ActivateServiceAccountUnprocessableEntity with default headers values
func NewActivateServiceAccountUnprocessableEntity() *ActivateServiceAccountUnprocessableEntity {
	return &ActivateServiceAccountUnprocessableEntity{}
}

/*
ActivateServiceAccountUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ActivateServiceAccountUnprocessableEntity struct {
}

// IsSuccess returns true when this activate service account unprocessable entity response has a 2xx status code
func (o *ActivateServiceAccountUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate service account unprocessable entity response has a 3xx status code
func (o *ActivateServiceAccountUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate service account unprocessable entity response has a 4xx status code
func (o *ActivateServiceAccountUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate service account unprocessable entity response has a 5xx status code
func (o *ActivateServiceAccountUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this activate service account unprocessable entity response a status code equal to that given
func (o *ActivateServiceAccountUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the activate service account unprocessable entity response
func (o *ActivateServiceAccountUnprocessableEntity) Code() int {
	return 422
}

func (o *ActivateServiceAccountUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountUnprocessableEntity ", 422)
}

func (o *ActivateServiceAccountUnprocessableEntity) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/activate][%d] activateServiceAccountUnprocessableEntity ", 422)
}

func (o *ActivateServiceAccountUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
