// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetProjectInvitationReader is a Reader for the GetProjectInvitation structure.
type GetProjectInvitationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectInvitationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectInvitationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProjectInvitationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProjectInvitationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProjectInvitationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectInvitationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetProjectInvitationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetProjectInvitationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/invitations/project/{invitationId}] getProjectInvitation", response, response.Code())
	}
}

// NewGetProjectInvitationOK creates a GetProjectInvitationOK with default headers values
func NewGetProjectInvitationOK() *GetProjectInvitationOK {
	return &GetProjectInvitationOK{}
}

/*
GetProjectInvitationOK describes a response with status code 200, with default header values.

OK
*/
type GetProjectInvitationOK struct {
	Payload *models.ProjectInvitationDTO
}

// IsSuccess returns true when this get project invitation o k response has a 2xx status code
func (o *GetProjectInvitationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project invitation o k response has a 3xx status code
func (o *GetProjectInvitationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation o k response has a 4xx status code
func (o *GetProjectInvitationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project invitation o k response has a 5xx status code
func (o *GetProjectInvitationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation o k response a status code equal to that given
func (o *GetProjectInvitationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get project invitation o k response
func (o *GetProjectInvitationOK) Code() int {
	return 200
}

func (o *GetProjectInvitationOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationOK  %+v", 200, o.Payload)
}

func (o *GetProjectInvitationOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationOK  %+v", 200, o.Payload)
}

func (o *GetProjectInvitationOK) GetPayload() *models.ProjectInvitationDTO {
	return o.Payload
}

func (o *GetProjectInvitationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectInvitationDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectInvitationBadRequest creates a GetProjectInvitationBadRequest with default headers values
func NewGetProjectInvitationBadRequest() *GetProjectInvitationBadRequest {
	return &GetProjectInvitationBadRequest{}
}

/*
GetProjectInvitationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetProjectInvitationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get project invitation bad request response has a 2xx status code
func (o *GetProjectInvitationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project invitation bad request response has a 3xx status code
func (o *GetProjectInvitationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation bad request response has a 4xx status code
func (o *GetProjectInvitationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project invitation bad request response has a 5xx status code
func (o *GetProjectInvitationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation bad request response a status code equal to that given
func (o *GetProjectInvitationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get project invitation bad request response
func (o *GetProjectInvitationBadRequest) Code() int {
	return 400
}

func (o *GetProjectInvitationBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *GetProjectInvitationBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *GetProjectInvitationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetProjectInvitationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectInvitationUnauthorized creates a GetProjectInvitationUnauthorized with default headers values
func NewGetProjectInvitationUnauthorized() *GetProjectInvitationUnauthorized {
	return &GetProjectInvitationUnauthorized{}
}

/*
GetProjectInvitationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProjectInvitationUnauthorized struct {
}

// IsSuccess returns true when this get project invitation unauthorized response has a 2xx status code
func (o *GetProjectInvitationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project invitation unauthorized response has a 3xx status code
func (o *GetProjectInvitationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation unauthorized response has a 4xx status code
func (o *GetProjectInvitationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project invitation unauthorized response has a 5xx status code
func (o *GetProjectInvitationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation unauthorized response a status code equal to that given
func (o *GetProjectInvitationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get project invitation unauthorized response
func (o *GetProjectInvitationUnauthorized) Code() int {
	return 401
}

func (o *GetProjectInvitationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationUnauthorized ", 401)
}

func (o *GetProjectInvitationUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationUnauthorized ", 401)
}

func (o *GetProjectInvitationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectInvitationForbidden creates a GetProjectInvitationForbidden with default headers values
func NewGetProjectInvitationForbidden() *GetProjectInvitationForbidden {
	return &GetProjectInvitationForbidden{}
}

/*
GetProjectInvitationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetProjectInvitationForbidden struct {
}

// IsSuccess returns true when this get project invitation forbidden response has a 2xx status code
func (o *GetProjectInvitationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project invitation forbidden response has a 3xx status code
func (o *GetProjectInvitationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation forbidden response has a 4xx status code
func (o *GetProjectInvitationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project invitation forbidden response has a 5xx status code
func (o *GetProjectInvitationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation forbidden response a status code equal to that given
func (o *GetProjectInvitationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get project invitation forbidden response
func (o *GetProjectInvitationForbidden) Code() int {
	return 403
}

func (o *GetProjectInvitationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationForbidden ", 403)
}

func (o *GetProjectInvitationForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationForbidden ", 403)
}

func (o *GetProjectInvitationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectInvitationNotFound creates a GetProjectInvitationNotFound with default headers values
func NewGetProjectInvitationNotFound() *GetProjectInvitationNotFound {
	return &GetProjectInvitationNotFound{}
}

/*
GetProjectInvitationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetProjectInvitationNotFound struct {
}

// IsSuccess returns true when this get project invitation not found response has a 2xx status code
func (o *GetProjectInvitationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project invitation not found response has a 3xx status code
func (o *GetProjectInvitationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation not found response has a 4xx status code
func (o *GetProjectInvitationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project invitation not found response has a 5xx status code
func (o *GetProjectInvitationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation not found response a status code equal to that given
func (o *GetProjectInvitationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get project invitation not found response
func (o *GetProjectInvitationNotFound) Code() int {
	return 404
}

func (o *GetProjectInvitationNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationNotFound ", 404)
}

func (o *GetProjectInvitationNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationNotFound ", 404)
}

func (o *GetProjectInvitationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectInvitationRequestTimeout creates a GetProjectInvitationRequestTimeout with default headers values
func NewGetProjectInvitationRequestTimeout() *GetProjectInvitationRequestTimeout {
	return &GetProjectInvitationRequestTimeout{}
}

/*
GetProjectInvitationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetProjectInvitationRequestTimeout struct {
}

// IsSuccess returns true when this get project invitation request timeout response has a 2xx status code
func (o *GetProjectInvitationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project invitation request timeout response has a 3xx status code
func (o *GetProjectInvitationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation request timeout response has a 4xx status code
func (o *GetProjectInvitationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project invitation request timeout response has a 5xx status code
func (o *GetProjectInvitationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation request timeout response a status code equal to that given
func (o *GetProjectInvitationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get project invitation request timeout response
func (o *GetProjectInvitationRequestTimeout) Code() int {
	return 408
}

func (o *GetProjectInvitationRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationRequestTimeout ", 408)
}

func (o *GetProjectInvitationRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationRequestTimeout ", 408)
}

func (o *GetProjectInvitationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectInvitationUnprocessableEntity creates a GetProjectInvitationUnprocessableEntity with default headers values
func NewGetProjectInvitationUnprocessableEntity() *GetProjectInvitationUnprocessableEntity {
	return &GetProjectInvitationUnprocessableEntity{}
}

/*
GetProjectInvitationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetProjectInvitationUnprocessableEntity struct {
}

// IsSuccess returns true when this get project invitation unprocessable entity response has a 2xx status code
func (o *GetProjectInvitationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project invitation unprocessable entity response has a 3xx status code
func (o *GetProjectInvitationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project invitation unprocessable entity response has a 4xx status code
func (o *GetProjectInvitationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project invitation unprocessable entity response has a 5xx status code
func (o *GetProjectInvitationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get project invitation unprocessable entity response a status code equal to that given
func (o *GetProjectInvitationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get project invitation unprocessable entity response
func (o *GetProjectInvitationUnprocessableEntity) Code() int {
	return 422
}

func (o *GetProjectInvitationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationUnprocessableEntity ", 422)
}

func (o *GetProjectInvitationUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/invitations/project/{invitationId}][%d] getProjectInvitationUnprocessableEntity ", 422)
}

func (o *GetProjectInvitationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
