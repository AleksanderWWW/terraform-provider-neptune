// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetScopedPropertyReader is a Reader for the GetScopedProperty structure.
type GetScopedPropertyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScopedPropertyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScopedPropertyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScopedPropertyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScopedPropertyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScopedPropertyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScopedPropertyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetScopedPropertyRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetScopedPropertyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/clients/properties] getScopedProperty", response, response.Code())
	}
}

// NewGetScopedPropertyOK creates a GetScopedPropertyOK with default headers values
func NewGetScopedPropertyOK() *GetScopedPropertyOK {
	return &GetScopedPropertyOK{}
}

/*
GetScopedPropertyOK describes a response with status code 200, with default header values.

OK
*/
type GetScopedPropertyOK struct {
	Payload *models.PropertyDTO
}

// IsSuccess returns true when this get scoped property o k response has a 2xx status code
func (o *GetScopedPropertyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get scoped property o k response has a 3xx status code
func (o *GetScopedPropertyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property o k response has a 4xx status code
func (o *GetScopedPropertyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scoped property o k response has a 5xx status code
func (o *GetScopedPropertyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property o k response a status code equal to that given
func (o *GetScopedPropertyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get scoped property o k response
func (o *GetScopedPropertyOK) Code() int {
	return 200
}

func (o *GetScopedPropertyOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyOK  %+v", 200, o.Payload)
}

func (o *GetScopedPropertyOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyOK  %+v", 200, o.Payload)
}

func (o *GetScopedPropertyOK) GetPayload() *models.PropertyDTO {
	return o.Payload
}

func (o *GetScopedPropertyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PropertyDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopedPropertyBadRequest creates a GetScopedPropertyBadRequest with default headers values
func NewGetScopedPropertyBadRequest() *GetScopedPropertyBadRequest {
	return &GetScopedPropertyBadRequest{}
}

/*
GetScopedPropertyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetScopedPropertyBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get scoped property bad request response has a 2xx status code
func (o *GetScopedPropertyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scoped property bad request response has a 3xx status code
func (o *GetScopedPropertyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property bad request response has a 4xx status code
func (o *GetScopedPropertyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scoped property bad request response has a 5xx status code
func (o *GetScopedPropertyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property bad request response a status code equal to that given
func (o *GetScopedPropertyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get scoped property bad request response
func (o *GetScopedPropertyBadRequest) Code() int {
	return 400
}

func (o *GetScopedPropertyBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyBadRequest  %+v", 400, o.Payload)
}

func (o *GetScopedPropertyBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyBadRequest  %+v", 400, o.Payload)
}

func (o *GetScopedPropertyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScopedPropertyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopedPropertyUnauthorized creates a GetScopedPropertyUnauthorized with default headers values
func NewGetScopedPropertyUnauthorized() *GetScopedPropertyUnauthorized {
	return &GetScopedPropertyUnauthorized{}
}

/*
GetScopedPropertyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetScopedPropertyUnauthorized struct {
}

// IsSuccess returns true when this get scoped property unauthorized response has a 2xx status code
func (o *GetScopedPropertyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scoped property unauthorized response has a 3xx status code
func (o *GetScopedPropertyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property unauthorized response has a 4xx status code
func (o *GetScopedPropertyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scoped property unauthorized response has a 5xx status code
func (o *GetScopedPropertyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property unauthorized response a status code equal to that given
func (o *GetScopedPropertyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get scoped property unauthorized response
func (o *GetScopedPropertyUnauthorized) Code() int {
	return 401
}

func (o *GetScopedPropertyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyUnauthorized ", 401)
}

func (o *GetScopedPropertyUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyUnauthorized ", 401)
}

func (o *GetScopedPropertyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScopedPropertyForbidden creates a GetScopedPropertyForbidden with default headers values
func NewGetScopedPropertyForbidden() *GetScopedPropertyForbidden {
	return &GetScopedPropertyForbidden{}
}

/*
GetScopedPropertyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetScopedPropertyForbidden struct {
}

// IsSuccess returns true when this get scoped property forbidden response has a 2xx status code
func (o *GetScopedPropertyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scoped property forbidden response has a 3xx status code
func (o *GetScopedPropertyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property forbidden response has a 4xx status code
func (o *GetScopedPropertyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scoped property forbidden response has a 5xx status code
func (o *GetScopedPropertyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property forbidden response a status code equal to that given
func (o *GetScopedPropertyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get scoped property forbidden response
func (o *GetScopedPropertyForbidden) Code() int {
	return 403
}

func (o *GetScopedPropertyForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyForbidden ", 403)
}

func (o *GetScopedPropertyForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyForbidden ", 403)
}

func (o *GetScopedPropertyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScopedPropertyNotFound creates a GetScopedPropertyNotFound with default headers values
func NewGetScopedPropertyNotFound() *GetScopedPropertyNotFound {
	return &GetScopedPropertyNotFound{}
}

/*
GetScopedPropertyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetScopedPropertyNotFound struct {
}

// IsSuccess returns true when this get scoped property not found response has a 2xx status code
func (o *GetScopedPropertyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scoped property not found response has a 3xx status code
func (o *GetScopedPropertyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property not found response has a 4xx status code
func (o *GetScopedPropertyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scoped property not found response has a 5xx status code
func (o *GetScopedPropertyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property not found response a status code equal to that given
func (o *GetScopedPropertyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get scoped property not found response
func (o *GetScopedPropertyNotFound) Code() int {
	return 404
}

func (o *GetScopedPropertyNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyNotFound ", 404)
}

func (o *GetScopedPropertyNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyNotFound ", 404)
}

func (o *GetScopedPropertyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScopedPropertyRequestTimeout creates a GetScopedPropertyRequestTimeout with default headers values
func NewGetScopedPropertyRequestTimeout() *GetScopedPropertyRequestTimeout {
	return &GetScopedPropertyRequestTimeout{}
}

/*
GetScopedPropertyRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetScopedPropertyRequestTimeout struct {
}

// IsSuccess returns true when this get scoped property request timeout response has a 2xx status code
func (o *GetScopedPropertyRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scoped property request timeout response has a 3xx status code
func (o *GetScopedPropertyRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property request timeout response has a 4xx status code
func (o *GetScopedPropertyRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scoped property request timeout response has a 5xx status code
func (o *GetScopedPropertyRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property request timeout response a status code equal to that given
func (o *GetScopedPropertyRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get scoped property request timeout response
func (o *GetScopedPropertyRequestTimeout) Code() int {
	return 408
}

func (o *GetScopedPropertyRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyRequestTimeout ", 408)
}

func (o *GetScopedPropertyRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyRequestTimeout ", 408)
}

func (o *GetScopedPropertyRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScopedPropertyUnprocessableEntity creates a GetScopedPropertyUnprocessableEntity with default headers values
func NewGetScopedPropertyUnprocessableEntity() *GetScopedPropertyUnprocessableEntity {
	return &GetScopedPropertyUnprocessableEntity{}
}

/*
GetScopedPropertyUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetScopedPropertyUnprocessableEntity struct {
}

// IsSuccess returns true when this get scoped property unprocessable entity response has a 2xx status code
func (o *GetScopedPropertyUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scoped property unprocessable entity response has a 3xx status code
func (o *GetScopedPropertyUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scoped property unprocessable entity response has a 4xx status code
func (o *GetScopedPropertyUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scoped property unprocessable entity response has a 5xx status code
func (o *GetScopedPropertyUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get scoped property unprocessable entity response a status code equal to that given
func (o *GetScopedPropertyUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get scoped property unprocessable entity response
func (o *GetScopedPropertyUnprocessableEntity) Code() int {
	return 422
}

func (o *GetScopedPropertyUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyUnprocessableEntity ", 422)
}

func (o *GetScopedPropertyUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/clients/properties][%d] getScopedPropertyUnprocessableEntity ", 422)
}

func (o *GetScopedPropertyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
