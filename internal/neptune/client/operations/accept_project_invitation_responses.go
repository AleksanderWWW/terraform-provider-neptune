// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// AcceptProjectInvitationReader is a Reader for the AcceptProjectInvitation structure.
type AcceptProjectInvitationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptProjectInvitationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptProjectInvitationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAcceptProjectInvitationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAcceptProjectInvitationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAcceptProjectInvitationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptProjectInvitationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewAcceptProjectInvitationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAcceptProjectInvitationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/invitations/project/{invitationId}/accept] acceptProjectInvitation", response, response.Code())
	}
}

// NewAcceptProjectInvitationOK creates a AcceptProjectInvitationOK with default headers values
func NewAcceptProjectInvitationOK() *AcceptProjectInvitationOK {
	return &AcceptProjectInvitationOK{}
}

/*
AcceptProjectInvitationOK describes a response with status code 200, with default header values.

No response
*/
type AcceptProjectInvitationOK struct {
}

// IsSuccess returns true when this accept project invitation o k response has a 2xx status code
func (o *AcceptProjectInvitationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this accept project invitation o k response has a 3xx status code
func (o *AcceptProjectInvitationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation o k response has a 4xx status code
func (o *AcceptProjectInvitationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this accept project invitation o k response has a 5xx status code
func (o *AcceptProjectInvitationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation o k response a status code equal to that given
func (o *AcceptProjectInvitationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the accept project invitation o k response
func (o *AcceptProjectInvitationOK) Code() int {
	return 200
}

func (o *AcceptProjectInvitationOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationOK ", 200)
}

func (o *AcceptProjectInvitationOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationOK ", 200)
}

func (o *AcceptProjectInvitationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAcceptProjectInvitationBadRequest creates a AcceptProjectInvitationBadRequest with default headers values
func NewAcceptProjectInvitationBadRequest() *AcceptProjectInvitationBadRequest {
	return &AcceptProjectInvitationBadRequest{}
}

/*
AcceptProjectInvitationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AcceptProjectInvitationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept project invitation bad request response has a 2xx status code
func (o *AcceptProjectInvitationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept project invitation bad request response has a 3xx status code
func (o *AcceptProjectInvitationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation bad request response has a 4xx status code
func (o *AcceptProjectInvitationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept project invitation bad request response has a 5xx status code
func (o *AcceptProjectInvitationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation bad request response a status code equal to that given
func (o *AcceptProjectInvitationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the accept project invitation bad request response
func (o *AcceptProjectInvitationBadRequest) Code() int {
	return 400
}

func (o *AcceptProjectInvitationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *AcceptProjectInvitationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationBadRequest  %+v", 400, o.Payload)
}

func (o *AcceptProjectInvitationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptProjectInvitationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptProjectInvitationUnauthorized creates a AcceptProjectInvitationUnauthorized with default headers values
func NewAcceptProjectInvitationUnauthorized() *AcceptProjectInvitationUnauthorized {
	return &AcceptProjectInvitationUnauthorized{}
}

/*
AcceptProjectInvitationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AcceptProjectInvitationUnauthorized struct {
}

// IsSuccess returns true when this accept project invitation unauthorized response has a 2xx status code
func (o *AcceptProjectInvitationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept project invitation unauthorized response has a 3xx status code
func (o *AcceptProjectInvitationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation unauthorized response has a 4xx status code
func (o *AcceptProjectInvitationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept project invitation unauthorized response has a 5xx status code
func (o *AcceptProjectInvitationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation unauthorized response a status code equal to that given
func (o *AcceptProjectInvitationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the accept project invitation unauthorized response
func (o *AcceptProjectInvitationUnauthorized) Code() int {
	return 401
}

func (o *AcceptProjectInvitationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationUnauthorized ", 401)
}

func (o *AcceptProjectInvitationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationUnauthorized ", 401)
}

func (o *AcceptProjectInvitationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAcceptProjectInvitationForbidden creates a AcceptProjectInvitationForbidden with default headers values
func NewAcceptProjectInvitationForbidden() *AcceptProjectInvitationForbidden {
	return &AcceptProjectInvitationForbidden{}
}

/*
AcceptProjectInvitationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AcceptProjectInvitationForbidden struct {
}

// IsSuccess returns true when this accept project invitation forbidden response has a 2xx status code
func (o *AcceptProjectInvitationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept project invitation forbidden response has a 3xx status code
func (o *AcceptProjectInvitationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation forbidden response has a 4xx status code
func (o *AcceptProjectInvitationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept project invitation forbidden response has a 5xx status code
func (o *AcceptProjectInvitationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation forbidden response a status code equal to that given
func (o *AcceptProjectInvitationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the accept project invitation forbidden response
func (o *AcceptProjectInvitationForbidden) Code() int {
	return 403
}

func (o *AcceptProjectInvitationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationForbidden ", 403)
}

func (o *AcceptProjectInvitationForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationForbidden ", 403)
}

func (o *AcceptProjectInvitationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAcceptProjectInvitationNotFound creates a AcceptProjectInvitationNotFound with default headers values
func NewAcceptProjectInvitationNotFound() *AcceptProjectInvitationNotFound {
	return &AcceptProjectInvitationNotFound{}
}

/*
AcceptProjectInvitationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AcceptProjectInvitationNotFound struct {
}

// IsSuccess returns true when this accept project invitation not found response has a 2xx status code
func (o *AcceptProjectInvitationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept project invitation not found response has a 3xx status code
func (o *AcceptProjectInvitationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation not found response has a 4xx status code
func (o *AcceptProjectInvitationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept project invitation not found response has a 5xx status code
func (o *AcceptProjectInvitationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation not found response a status code equal to that given
func (o *AcceptProjectInvitationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the accept project invitation not found response
func (o *AcceptProjectInvitationNotFound) Code() int {
	return 404
}

func (o *AcceptProjectInvitationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationNotFound ", 404)
}

func (o *AcceptProjectInvitationNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationNotFound ", 404)
}

func (o *AcceptProjectInvitationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAcceptProjectInvitationRequestTimeout creates a AcceptProjectInvitationRequestTimeout with default headers values
func NewAcceptProjectInvitationRequestTimeout() *AcceptProjectInvitationRequestTimeout {
	return &AcceptProjectInvitationRequestTimeout{}
}

/*
AcceptProjectInvitationRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type AcceptProjectInvitationRequestTimeout struct {
}

// IsSuccess returns true when this accept project invitation request timeout response has a 2xx status code
func (o *AcceptProjectInvitationRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept project invitation request timeout response has a 3xx status code
func (o *AcceptProjectInvitationRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation request timeout response has a 4xx status code
func (o *AcceptProjectInvitationRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept project invitation request timeout response has a 5xx status code
func (o *AcceptProjectInvitationRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation request timeout response a status code equal to that given
func (o *AcceptProjectInvitationRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the accept project invitation request timeout response
func (o *AcceptProjectInvitationRequestTimeout) Code() int {
	return 408
}

func (o *AcceptProjectInvitationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationRequestTimeout ", 408)
}

func (o *AcceptProjectInvitationRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationRequestTimeout ", 408)
}

func (o *AcceptProjectInvitationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAcceptProjectInvitationUnprocessableEntity creates a AcceptProjectInvitationUnprocessableEntity with default headers values
func NewAcceptProjectInvitationUnprocessableEntity() *AcceptProjectInvitationUnprocessableEntity {
	return &AcceptProjectInvitationUnprocessableEntity{}
}

/*
AcceptProjectInvitationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type AcceptProjectInvitationUnprocessableEntity struct {
}

// IsSuccess returns true when this accept project invitation unprocessable entity response has a 2xx status code
func (o *AcceptProjectInvitationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept project invitation unprocessable entity response has a 3xx status code
func (o *AcceptProjectInvitationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept project invitation unprocessable entity response has a 4xx status code
func (o *AcceptProjectInvitationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept project invitation unprocessable entity response has a 5xx status code
func (o *AcceptProjectInvitationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this accept project invitation unprocessable entity response a status code equal to that given
func (o *AcceptProjectInvitationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the accept project invitation unprocessable entity response
func (o *AcceptProjectInvitationUnprocessableEntity) Code() int {
	return 422
}

func (o *AcceptProjectInvitationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationUnprocessableEntity ", 422)
}

func (o *AcceptProjectInvitationUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/invitations/project/{invitationId}/accept][%d] acceptProjectInvitationUnprocessableEntity ", 422)
}

func (o *AcceptProjectInvitationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
