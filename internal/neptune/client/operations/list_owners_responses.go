// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// ListOwnersReader is a Reader for the ListOwners structure.
type ListOwnersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOwnersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOwnersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOwnersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListOwnersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListOwnersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListOwnersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewListOwnersRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListOwnersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners] listOwners", response, response.Code())
	}
}

// NewListOwnersOK creates a ListOwnersOK with default headers values
func NewListOwnersOK() *ListOwnersOK {
	return &ListOwnersOK{}
}

/*
ListOwnersOK describes a response with status code 200, with default header values.

OK
*/
type ListOwnersOK struct {
	Payload *models.OrganizationOwnerListDTO
}

// IsSuccess returns true when this list owners o k response has a 2xx status code
func (o *ListOwnersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list owners o k response has a 3xx status code
func (o *ListOwnersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners o k response has a 4xx status code
func (o *ListOwnersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list owners o k response has a 5xx status code
func (o *ListOwnersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners o k response a status code equal to that given
func (o *ListOwnersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list owners o k response
func (o *ListOwnersOK) Code() int {
	return 200
}

func (o *ListOwnersOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersOK  %+v", 200, o.Payload)
}

func (o *ListOwnersOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersOK  %+v", 200, o.Payload)
}

func (o *ListOwnersOK) GetPayload() *models.OrganizationOwnerListDTO {
	return o.Payload
}

func (o *ListOwnersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationOwnerListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOwnersBadRequest creates a ListOwnersBadRequest with default headers values
func NewListOwnersBadRequest() *ListOwnersBadRequest {
	return &ListOwnersBadRequest{}
}

/*
ListOwnersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListOwnersBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list owners bad request response has a 2xx status code
func (o *ListOwnersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list owners bad request response has a 3xx status code
func (o *ListOwnersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners bad request response has a 4xx status code
func (o *ListOwnersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list owners bad request response has a 5xx status code
func (o *ListOwnersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners bad request response a status code equal to that given
func (o *ListOwnersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list owners bad request response
func (o *ListOwnersBadRequest) Code() int {
	return 400
}

func (o *ListOwnersBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersBadRequest  %+v", 400, o.Payload)
}

func (o *ListOwnersBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersBadRequest  %+v", 400, o.Payload)
}

func (o *ListOwnersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOwnersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOwnersUnauthorized creates a ListOwnersUnauthorized with default headers values
func NewListOwnersUnauthorized() *ListOwnersUnauthorized {
	return &ListOwnersUnauthorized{}
}

/*
ListOwnersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListOwnersUnauthorized struct {
}

// IsSuccess returns true when this list owners unauthorized response has a 2xx status code
func (o *ListOwnersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list owners unauthorized response has a 3xx status code
func (o *ListOwnersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners unauthorized response has a 4xx status code
func (o *ListOwnersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list owners unauthorized response has a 5xx status code
func (o *ListOwnersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners unauthorized response a status code equal to that given
func (o *ListOwnersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list owners unauthorized response
func (o *ListOwnersUnauthorized) Code() int {
	return 401
}

func (o *ListOwnersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersUnauthorized ", 401)
}

func (o *ListOwnersUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersUnauthorized ", 401)
}

func (o *ListOwnersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOwnersForbidden creates a ListOwnersForbidden with default headers values
func NewListOwnersForbidden() *ListOwnersForbidden {
	return &ListOwnersForbidden{}
}

/*
ListOwnersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListOwnersForbidden struct {
}

// IsSuccess returns true when this list owners forbidden response has a 2xx status code
func (o *ListOwnersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list owners forbidden response has a 3xx status code
func (o *ListOwnersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners forbidden response has a 4xx status code
func (o *ListOwnersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list owners forbidden response has a 5xx status code
func (o *ListOwnersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners forbidden response a status code equal to that given
func (o *ListOwnersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list owners forbidden response
func (o *ListOwnersForbidden) Code() int {
	return 403
}

func (o *ListOwnersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersForbidden ", 403)
}

func (o *ListOwnersForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersForbidden ", 403)
}

func (o *ListOwnersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOwnersNotFound creates a ListOwnersNotFound with default headers values
func NewListOwnersNotFound() *ListOwnersNotFound {
	return &ListOwnersNotFound{}
}

/*
ListOwnersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListOwnersNotFound struct {
}

// IsSuccess returns true when this list owners not found response has a 2xx status code
func (o *ListOwnersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list owners not found response has a 3xx status code
func (o *ListOwnersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners not found response has a 4xx status code
func (o *ListOwnersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list owners not found response has a 5xx status code
func (o *ListOwnersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners not found response a status code equal to that given
func (o *ListOwnersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list owners not found response
func (o *ListOwnersNotFound) Code() int {
	return 404
}

func (o *ListOwnersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersNotFound ", 404)
}

func (o *ListOwnersNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersNotFound ", 404)
}

func (o *ListOwnersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOwnersRequestTimeout creates a ListOwnersRequestTimeout with default headers values
func NewListOwnersRequestTimeout() *ListOwnersRequestTimeout {
	return &ListOwnersRequestTimeout{}
}

/*
ListOwnersRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type ListOwnersRequestTimeout struct {
}

// IsSuccess returns true when this list owners request timeout response has a 2xx status code
func (o *ListOwnersRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list owners request timeout response has a 3xx status code
func (o *ListOwnersRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners request timeout response has a 4xx status code
func (o *ListOwnersRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this list owners request timeout response has a 5xx status code
func (o *ListOwnersRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners request timeout response a status code equal to that given
func (o *ListOwnersRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the list owners request timeout response
func (o *ListOwnersRequestTimeout) Code() int {
	return 408
}

func (o *ListOwnersRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersRequestTimeout ", 408)
}

func (o *ListOwnersRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersRequestTimeout ", 408)
}

func (o *ListOwnersRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOwnersUnprocessableEntity creates a ListOwnersUnprocessableEntity with default headers values
func NewListOwnersUnprocessableEntity() *ListOwnersUnprocessableEntity {
	return &ListOwnersUnprocessableEntity{}
}

/*
ListOwnersUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ListOwnersUnprocessableEntity struct {
}

// IsSuccess returns true when this list owners unprocessable entity response has a 2xx status code
func (o *ListOwnersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list owners unprocessable entity response has a 3xx status code
func (o *ListOwnersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list owners unprocessable entity response has a 4xx status code
func (o *ListOwnersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list owners unprocessable entity response has a 5xx status code
func (o *ListOwnersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list owners unprocessable entity response a status code equal to that given
func (o *ListOwnersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list owners unprocessable entity response
func (o *ListOwnersUnprocessableEntity) Code() int {
	return 422
}

func (o *ListOwnersUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersUnprocessableEntity ", 422)
}

func (o *ListOwnersUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/organizations2/{organizationIdentifier}/owners][%d] listOwnersUnprocessableEntity ", 422)
}

func (o *ListOwnersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
