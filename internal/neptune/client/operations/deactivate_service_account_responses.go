// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// DeactivateServiceAccountReader is a Reader for the DeactivateServiceAccount structure.
type DeactivateServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeactivateServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeactivateServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeactivateServiceAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeactivateServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeactivateServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeactivateServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewDeactivateServiceAccountRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeactivateServiceAccountUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /api/backend/v1/serviceAccounts/deactivate] deactivateServiceAccount", response, response.Code())
	}
}

// NewDeactivateServiceAccountOK creates a DeactivateServiceAccountOK with default headers values
func NewDeactivateServiceAccountOK() *DeactivateServiceAccountOK {
	return &DeactivateServiceAccountOK{}
}

/*
DeactivateServiceAccountOK describes a response with status code 200, with default header values.

No response
*/
type DeactivateServiceAccountOK struct {
}

// IsSuccess returns true when this deactivate service account o k response has a 2xx status code
func (o *DeactivateServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deactivate service account o k response has a 3xx status code
func (o *DeactivateServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account o k response has a 4xx status code
func (o *DeactivateServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deactivate service account o k response has a 5xx status code
func (o *DeactivateServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account o k response a status code equal to that given
func (o *DeactivateServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the deactivate service account o k response
func (o *DeactivateServiceAccountOK) Code() int {
	return 200
}

func (o *DeactivateServiceAccountOK) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountOK ", 200)
}

func (o *DeactivateServiceAccountOK) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountOK ", 200)
}

func (o *DeactivateServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeactivateServiceAccountBadRequest creates a DeactivateServiceAccountBadRequest with default headers values
func NewDeactivateServiceAccountBadRequest() *DeactivateServiceAccountBadRequest {
	return &DeactivateServiceAccountBadRequest{}
}

/*
DeactivateServiceAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeactivateServiceAccountBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this deactivate service account bad request response has a 2xx status code
func (o *DeactivateServiceAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate service account bad request response has a 3xx status code
func (o *DeactivateServiceAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account bad request response has a 4xx status code
func (o *DeactivateServiceAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate service account bad request response has a 5xx status code
func (o *DeactivateServiceAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account bad request response a status code equal to that given
func (o *DeactivateServiceAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the deactivate service account bad request response
func (o *DeactivateServiceAccountBadRequest) Code() int {
	return 400
}

func (o *DeactivateServiceAccountBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeactivateServiceAccountBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeactivateServiceAccountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeactivateServiceAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeactivateServiceAccountUnauthorized creates a DeactivateServiceAccountUnauthorized with default headers values
func NewDeactivateServiceAccountUnauthorized() *DeactivateServiceAccountUnauthorized {
	return &DeactivateServiceAccountUnauthorized{}
}

/*
DeactivateServiceAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeactivateServiceAccountUnauthorized struct {
}

// IsSuccess returns true when this deactivate service account unauthorized response has a 2xx status code
func (o *DeactivateServiceAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate service account unauthorized response has a 3xx status code
func (o *DeactivateServiceAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account unauthorized response has a 4xx status code
func (o *DeactivateServiceAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate service account unauthorized response has a 5xx status code
func (o *DeactivateServiceAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account unauthorized response a status code equal to that given
func (o *DeactivateServiceAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the deactivate service account unauthorized response
func (o *DeactivateServiceAccountUnauthorized) Code() int {
	return 401
}

func (o *DeactivateServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountUnauthorized ", 401)
}

func (o *DeactivateServiceAccountUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountUnauthorized ", 401)
}

func (o *DeactivateServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeactivateServiceAccountForbidden creates a DeactivateServiceAccountForbidden with default headers values
func NewDeactivateServiceAccountForbidden() *DeactivateServiceAccountForbidden {
	return &DeactivateServiceAccountForbidden{}
}

/*
DeactivateServiceAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeactivateServiceAccountForbidden struct {
}

// IsSuccess returns true when this deactivate service account forbidden response has a 2xx status code
func (o *DeactivateServiceAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate service account forbidden response has a 3xx status code
func (o *DeactivateServiceAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account forbidden response has a 4xx status code
func (o *DeactivateServiceAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate service account forbidden response has a 5xx status code
func (o *DeactivateServiceAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account forbidden response a status code equal to that given
func (o *DeactivateServiceAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the deactivate service account forbidden response
func (o *DeactivateServiceAccountForbidden) Code() int {
	return 403
}

func (o *DeactivateServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountForbidden ", 403)
}

func (o *DeactivateServiceAccountForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountForbidden ", 403)
}

func (o *DeactivateServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeactivateServiceAccountNotFound creates a DeactivateServiceAccountNotFound with default headers values
func NewDeactivateServiceAccountNotFound() *DeactivateServiceAccountNotFound {
	return &DeactivateServiceAccountNotFound{}
}

/*
DeactivateServiceAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeactivateServiceAccountNotFound struct {
}

// IsSuccess returns true when this deactivate service account not found response has a 2xx status code
func (o *DeactivateServiceAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate service account not found response has a 3xx status code
func (o *DeactivateServiceAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account not found response has a 4xx status code
func (o *DeactivateServiceAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate service account not found response has a 5xx status code
func (o *DeactivateServiceAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account not found response a status code equal to that given
func (o *DeactivateServiceAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the deactivate service account not found response
func (o *DeactivateServiceAccountNotFound) Code() int {
	return 404
}

func (o *DeactivateServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountNotFound ", 404)
}

func (o *DeactivateServiceAccountNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountNotFound ", 404)
}

func (o *DeactivateServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeactivateServiceAccountRequestTimeout creates a DeactivateServiceAccountRequestTimeout with default headers values
func NewDeactivateServiceAccountRequestTimeout() *DeactivateServiceAccountRequestTimeout {
	return &DeactivateServiceAccountRequestTimeout{}
}

/*
DeactivateServiceAccountRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type DeactivateServiceAccountRequestTimeout struct {
}

// IsSuccess returns true when this deactivate service account request timeout response has a 2xx status code
func (o *DeactivateServiceAccountRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate service account request timeout response has a 3xx status code
func (o *DeactivateServiceAccountRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account request timeout response has a 4xx status code
func (o *DeactivateServiceAccountRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate service account request timeout response has a 5xx status code
func (o *DeactivateServiceAccountRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account request timeout response a status code equal to that given
func (o *DeactivateServiceAccountRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the deactivate service account request timeout response
func (o *DeactivateServiceAccountRequestTimeout) Code() int {
	return 408
}

func (o *DeactivateServiceAccountRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountRequestTimeout ", 408)
}

func (o *DeactivateServiceAccountRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountRequestTimeout ", 408)
}

func (o *DeactivateServiceAccountRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeactivateServiceAccountUnprocessableEntity creates a DeactivateServiceAccountUnprocessableEntity with default headers values
func NewDeactivateServiceAccountUnprocessableEntity() *DeactivateServiceAccountUnprocessableEntity {
	return &DeactivateServiceAccountUnprocessableEntity{}
}

/*
DeactivateServiceAccountUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeactivateServiceAccountUnprocessableEntity struct {
}

// IsSuccess returns true when this deactivate service account unprocessable entity response has a 2xx status code
func (o *DeactivateServiceAccountUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate service account unprocessable entity response has a 3xx status code
func (o *DeactivateServiceAccountUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate service account unprocessable entity response has a 4xx status code
func (o *DeactivateServiceAccountUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate service account unprocessable entity response has a 5xx status code
func (o *DeactivateServiceAccountUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate service account unprocessable entity response a status code equal to that given
func (o *DeactivateServiceAccountUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the deactivate service account unprocessable entity response
func (o *DeactivateServiceAccountUnprocessableEntity) Code() int {
	return 422
}

func (o *DeactivateServiceAccountUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountUnprocessableEntity ", 422)
}

func (o *DeactivateServiceAccountUnprocessableEntity) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/serviceAccounts/deactivate][%d] deactivateServiceAccountUnprocessableEntity ", 422)
}

func (o *DeactivateServiceAccountUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
