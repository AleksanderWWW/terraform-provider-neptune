// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// UpdateOrganizationMemberReader is a Reader for the UpdateOrganizationMember structure.
type UpdateOrganizationMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOrganizationMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOrganizationMemberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOrganizationMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrganizationMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOrganizationMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewUpdateOrganizationMemberRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateOrganizationMemberUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}] updateOrganizationMember", response, response.Code())
	}
}

// NewUpdateOrganizationMemberOK creates a UpdateOrganizationMemberOK with default headers values
func NewUpdateOrganizationMemberOK() *UpdateOrganizationMemberOK {
	return &UpdateOrganizationMemberOK{}
}

/*
UpdateOrganizationMemberOK describes a response with status code 200, with default header values.

OK
*/
type UpdateOrganizationMemberOK struct {
	Payload *models.OrganizationMemberDTO
}

// IsSuccess returns true when this update organization member o k response has a 2xx status code
func (o *UpdateOrganizationMemberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update organization member o k response has a 3xx status code
func (o *UpdateOrganizationMemberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member o k response has a 4xx status code
func (o *UpdateOrganizationMemberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization member o k response has a 5xx status code
func (o *UpdateOrganizationMemberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member o k response a status code equal to that given
func (o *UpdateOrganizationMemberOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update organization member o k response
func (o *UpdateOrganizationMemberOK) Code() int {
	return 200
}

func (o *UpdateOrganizationMemberOK) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberOK  %+v", 200, o.Payload)
}

func (o *UpdateOrganizationMemberOK) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberOK  %+v", 200, o.Payload)
}

func (o *UpdateOrganizationMemberOK) GetPayload() *models.OrganizationMemberDTO {
	return o.Payload
}

func (o *UpdateOrganizationMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationMemberDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationMemberBadRequest creates a UpdateOrganizationMemberBadRequest with default headers values
func NewUpdateOrganizationMemberBadRequest() *UpdateOrganizationMemberBadRequest {
	return &UpdateOrganizationMemberBadRequest{}
}

/*
UpdateOrganizationMemberBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateOrganizationMemberBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization member bad request response has a 2xx status code
func (o *UpdateOrganizationMemberBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization member bad request response has a 3xx status code
func (o *UpdateOrganizationMemberBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member bad request response has a 4xx status code
func (o *UpdateOrganizationMemberBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization member bad request response has a 5xx status code
func (o *UpdateOrganizationMemberBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member bad request response a status code equal to that given
func (o *UpdateOrganizationMemberBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update organization member bad request response
func (o *UpdateOrganizationMemberBadRequest) Code() int {
	return 400
}

func (o *UpdateOrganizationMemberBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationMemberBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationMemberBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationMemberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationMemberUnauthorized creates a UpdateOrganizationMemberUnauthorized with default headers values
func NewUpdateOrganizationMemberUnauthorized() *UpdateOrganizationMemberUnauthorized {
	return &UpdateOrganizationMemberUnauthorized{}
}

/*
UpdateOrganizationMemberUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateOrganizationMemberUnauthorized struct {
}

// IsSuccess returns true when this update organization member unauthorized response has a 2xx status code
func (o *UpdateOrganizationMemberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization member unauthorized response has a 3xx status code
func (o *UpdateOrganizationMemberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member unauthorized response has a 4xx status code
func (o *UpdateOrganizationMemberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization member unauthorized response has a 5xx status code
func (o *UpdateOrganizationMemberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member unauthorized response a status code equal to that given
func (o *UpdateOrganizationMemberUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update organization member unauthorized response
func (o *UpdateOrganizationMemberUnauthorized) Code() int {
	return 401
}

func (o *UpdateOrganizationMemberUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberUnauthorized ", 401)
}

func (o *UpdateOrganizationMemberUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberUnauthorized ", 401)
}

func (o *UpdateOrganizationMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationMemberForbidden creates a UpdateOrganizationMemberForbidden with default headers values
func NewUpdateOrganizationMemberForbidden() *UpdateOrganizationMemberForbidden {
	return &UpdateOrganizationMemberForbidden{}
}

/*
UpdateOrganizationMemberForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateOrganizationMemberForbidden struct {
}

// IsSuccess returns true when this update organization member forbidden response has a 2xx status code
func (o *UpdateOrganizationMemberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization member forbidden response has a 3xx status code
func (o *UpdateOrganizationMemberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member forbidden response has a 4xx status code
func (o *UpdateOrganizationMemberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization member forbidden response has a 5xx status code
func (o *UpdateOrganizationMemberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member forbidden response a status code equal to that given
func (o *UpdateOrganizationMemberForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update organization member forbidden response
func (o *UpdateOrganizationMemberForbidden) Code() int {
	return 403
}

func (o *UpdateOrganizationMemberForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberForbidden ", 403)
}

func (o *UpdateOrganizationMemberForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberForbidden ", 403)
}

func (o *UpdateOrganizationMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationMemberNotFound creates a UpdateOrganizationMemberNotFound with default headers values
func NewUpdateOrganizationMemberNotFound() *UpdateOrganizationMemberNotFound {
	return &UpdateOrganizationMemberNotFound{}
}

/*
UpdateOrganizationMemberNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateOrganizationMemberNotFound struct {
}

// IsSuccess returns true when this update organization member not found response has a 2xx status code
func (o *UpdateOrganizationMemberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization member not found response has a 3xx status code
func (o *UpdateOrganizationMemberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member not found response has a 4xx status code
func (o *UpdateOrganizationMemberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization member not found response has a 5xx status code
func (o *UpdateOrganizationMemberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member not found response a status code equal to that given
func (o *UpdateOrganizationMemberNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update organization member not found response
func (o *UpdateOrganizationMemberNotFound) Code() int {
	return 404
}

func (o *UpdateOrganizationMemberNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberNotFound ", 404)
}

func (o *UpdateOrganizationMemberNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberNotFound ", 404)
}

func (o *UpdateOrganizationMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationMemberRequestTimeout creates a UpdateOrganizationMemberRequestTimeout with default headers values
func NewUpdateOrganizationMemberRequestTimeout() *UpdateOrganizationMemberRequestTimeout {
	return &UpdateOrganizationMemberRequestTimeout{}
}

/*
UpdateOrganizationMemberRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type UpdateOrganizationMemberRequestTimeout struct {
}

// IsSuccess returns true when this update organization member request timeout response has a 2xx status code
func (o *UpdateOrganizationMemberRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization member request timeout response has a 3xx status code
func (o *UpdateOrganizationMemberRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member request timeout response has a 4xx status code
func (o *UpdateOrganizationMemberRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization member request timeout response has a 5xx status code
func (o *UpdateOrganizationMemberRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member request timeout response a status code equal to that given
func (o *UpdateOrganizationMemberRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the update organization member request timeout response
func (o *UpdateOrganizationMemberRequestTimeout) Code() int {
	return 408
}

func (o *UpdateOrganizationMemberRequestTimeout) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberRequestTimeout ", 408)
}

func (o *UpdateOrganizationMemberRequestTimeout) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberRequestTimeout ", 408)
}

func (o *UpdateOrganizationMemberRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationMemberUnprocessableEntity creates a UpdateOrganizationMemberUnprocessableEntity with default headers values
func NewUpdateOrganizationMemberUnprocessableEntity() *UpdateOrganizationMemberUnprocessableEntity {
	return &UpdateOrganizationMemberUnprocessableEntity{}
}

/*
UpdateOrganizationMemberUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateOrganizationMemberUnprocessableEntity struct {
}

// IsSuccess returns true when this update organization member unprocessable entity response has a 2xx status code
func (o *UpdateOrganizationMemberUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization member unprocessable entity response has a 3xx status code
func (o *UpdateOrganizationMemberUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization member unprocessable entity response has a 4xx status code
func (o *UpdateOrganizationMemberUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization member unprocessable entity response has a 5xx status code
func (o *UpdateOrganizationMemberUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization member unprocessable entity response a status code equal to that given
func (o *UpdateOrganizationMemberUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update organization member unprocessable entity response
func (o *UpdateOrganizationMemberUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateOrganizationMemberUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberUnprocessableEntity ", 422)
}

func (o *UpdateOrganizationMemberUnprocessableEntity) String() string {
	return fmt.Sprintf("[PATCH /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}][%d] updateOrganizationMemberUnprocessableEntity ", 422)
}

func (o *UpdateOrganizationMemberUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
