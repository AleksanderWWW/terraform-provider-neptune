// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewStorageUsageParams creates a new StorageUsageParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewStorageUsageParams() *StorageUsageParams {
	return &StorageUsageParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewStorageUsageParamsWithTimeout creates a new StorageUsageParams object
// with the ability to set a timeout on a request.
func NewStorageUsageParamsWithTimeout(timeout time.Duration) *StorageUsageParams {
	return &StorageUsageParams{
		timeout: timeout,
	}
}

// NewStorageUsageParamsWithContext creates a new StorageUsageParams object
// with the ability to set a context for a request.
func NewStorageUsageParamsWithContext(ctx context.Context) *StorageUsageParams {
	return &StorageUsageParams{
		Context: ctx,
	}
}

// NewStorageUsageParamsWithHTTPClient creates a new StorageUsageParams object
// with the ability to set a custom HTTPClient for a request.
func NewStorageUsageParamsWithHTTPClient(client *http.Client) *StorageUsageParams {
	return &StorageUsageParams{
		HTTPClient: client,
	}
}

/*
StorageUsageParams contains all the parameters to send to the API endpoint

	for the storage usage operation.

	Typically these are written to a http.Request.
*/
type StorageUsageParams struct {

	// OrganizationIdentifier.
	OrganizationIdentifier *string

	// ProjectIdentifier.
	ProjectIdentifier *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the storage usage params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StorageUsageParams) WithDefaults() *StorageUsageParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the storage usage params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StorageUsageParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the storage usage params
func (o *StorageUsageParams) WithTimeout(timeout time.Duration) *StorageUsageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage usage params
func (o *StorageUsageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage usage params
func (o *StorageUsageParams) WithContext(ctx context.Context) *StorageUsageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage usage params
func (o *StorageUsageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage usage params
func (o *StorageUsageParams) WithHTTPClient(client *http.Client) *StorageUsageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage usage params
func (o *StorageUsageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganizationIdentifier adds the organizationIdentifier to the storage usage params
func (o *StorageUsageParams) WithOrganizationIdentifier(organizationIdentifier *string) *StorageUsageParams {
	o.SetOrganizationIdentifier(organizationIdentifier)
	return o
}

// SetOrganizationIdentifier adds the organizationIdentifier to the storage usage params
func (o *StorageUsageParams) SetOrganizationIdentifier(organizationIdentifier *string) {
	o.OrganizationIdentifier = organizationIdentifier
}

// WithProjectIdentifier adds the projectIdentifier to the storage usage params
func (o *StorageUsageParams) WithProjectIdentifier(projectIdentifier *string) *StorageUsageParams {
	o.SetProjectIdentifier(projectIdentifier)
	return o
}

// SetProjectIdentifier adds the projectIdentifier to the storage usage params
func (o *StorageUsageParams) SetProjectIdentifier(projectIdentifier *string) {
	o.ProjectIdentifier = projectIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *StorageUsageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OrganizationIdentifier != nil {

		// query param organizationIdentifier
		var qrOrganizationIdentifier string

		if o.OrganizationIdentifier != nil {
			qrOrganizationIdentifier = *o.OrganizationIdentifier
		}
		qOrganizationIdentifier := qrOrganizationIdentifier
		if qOrganizationIdentifier != "" {

			if err := r.SetQueryParam("organizationIdentifier", qOrganizationIdentifier); err != nil {
				return err
			}
		}
	}

	if o.ProjectIdentifier != nil {

		// query param projectIdentifier
		var qrProjectIdentifier string

		if o.ProjectIdentifier != nil {
			qrProjectIdentifier = *o.ProjectIdentifier
		}
		qProjectIdentifier := qrProjectIdentifier
		if qProjectIdentifier != "" {

			if err := r.SetQueryParam("projectIdentifier", qProjectIdentifier); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
