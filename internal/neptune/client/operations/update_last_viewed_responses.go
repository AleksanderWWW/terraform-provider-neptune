// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateLastViewedReader is a Reader for the UpdateLastViewed structure.
type UpdateLastViewedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLastViewedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLastViewedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLastViewedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateLastViewedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLastViewedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLastViewedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewUpdateLastViewedRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateLastViewedUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/projects/updateLastViewed] updateLastViewed", response, response.Code())
	}
}

// NewUpdateLastViewedOK creates a UpdateLastViewedOK with default headers values
func NewUpdateLastViewedOK() *UpdateLastViewedOK {
	return &UpdateLastViewedOK{}
}

/*
UpdateLastViewedOK describes a response with status code 200, with default header values.

No response
*/
type UpdateLastViewedOK struct {
}

// IsSuccess returns true when this update last viewed o k response has a 2xx status code
func (o *UpdateLastViewedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update last viewed o k response has a 3xx status code
func (o *UpdateLastViewedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed o k response has a 4xx status code
func (o *UpdateLastViewedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update last viewed o k response has a 5xx status code
func (o *UpdateLastViewedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed o k response a status code equal to that given
func (o *UpdateLastViewedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update last viewed o k response
func (o *UpdateLastViewedOK) Code() int {
	return 200
}

func (o *UpdateLastViewedOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedOK ", 200)
}

func (o *UpdateLastViewedOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedOK ", 200)
}

func (o *UpdateLastViewedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastViewedBadRequest creates a UpdateLastViewedBadRequest with default headers values
func NewUpdateLastViewedBadRequest() *UpdateLastViewedBadRequest {
	return &UpdateLastViewedBadRequest{}
}

/*
UpdateLastViewedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateLastViewedBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update last viewed bad request response has a 2xx status code
func (o *UpdateLastViewedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last viewed bad request response has a 3xx status code
func (o *UpdateLastViewedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed bad request response has a 4xx status code
func (o *UpdateLastViewedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last viewed bad request response has a 5xx status code
func (o *UpdateLastViewedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed bad request response a status code equal to that given
func (o *UpdateLastViewedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update last viewed bad request response
func (o *UpdateLastViewedBadRequest) Code() int {
	return 400
}

func (o *UpdateLastViewedBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLastViewedBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLastViewedBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLastViewedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLastViewedUnauthorized creates a UpdateLastViewedUnauthorized with default headers values
func NewUpdateLastViewedUnauthorized() *UpdateLastViewedUnauthorized {
	return &UpdateLastViewedUnauthorized{}
}

/*
UpdateLastViewedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateLastViewedUnauthorized struct {
}

// IsSuccess returns true when this update last viewed unauthorized response has a 2xx status code
func (o *UpdateLastViewedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last viewed unauthorized response has a 3xx status code
func (o *UpdateLastViewedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed unauthorized response has a 4xx status code
func (o *UpdateLastViewedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last viewed unauthorized response has a 5xx status code
func (o *UpdateLastViewedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed unauthorized response a status code equal to that given
func (o *UpdateLastViewedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update last viewed unauthorized response
func (o *UpdateLastViewedUnauthorized) Code() int {
	return 401
}

func (o *UpdateLastViewedUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedUnauthorized ", 401)
}

func (o *UpdateLastViewedUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedUnauthorized ", 401)
}

func (o *UpdateLastViewedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastViewedForbidden creates a UpdateLastViewedForbidden with default headers values
func NewUpdateLastViewedForbidden() *UpdateLastViewedForbidden {
	return &UpdateLastViewedForbidden{}
}

/*
UpdateLastViewedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateLastViewedForbidden struct {
}

// IsSuccess returns true when this update last viewed forbidden response has a 2xx status code
func (o *UpdateLastViewedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last viewed forbidden response has a 3xx status code
func (o *UpdateLastViewedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed forbidden response has a 4xx status code
func (o *UpdateLastViewedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last viewed forbidden response has a 5xx status code
func (o *UpdateLastViewedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed forbidden response a status code equal to that given
func (o *UpdateLastViewedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update last viewed forbidden response
func (o *UpdateLastViewedForbidden) Code() int {
	return 403
}

func (o *UpdateLastViewedForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedForbidden ", 403)
}

func (o *UpdateLastViewedForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedForbidden ", 403)
}

func (o *UpdateLastViewedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastViewedNotFound creates a UpdateLastViewedNotFound with default headers values
func NewUpdateLastViewedNotFound() *UpdateLastViewedNotFound {
	return &UpdateLastViewedNotFound{}
}

/*
UpdateLastViewedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateLastViewedNotFound struct {
}

// IsSuccess returns true when this update last viewed not found response has a 2xx status code
func (o *UpdateLastViewedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last viewed not found response has a 3xx status code
func (o *UpdateLastViewedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed not found response has a 4xx status code
func (o *UpdateLastViewedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last viewed not found response has a 5xx status code
func (o *UpdateLastViewedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed not found response a status code equal to that given
func (o *UpdateLastViewedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update last viewed not found response
func (o *UpdateLastViewedNotFound) Code() int {
	return 404
}

func (o *UpdateLastViewedNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedNotFound ", 404)
}

func (o *UpdateLastViewedNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedNotFound ", 404)
}

func (o *UpdateLastViewedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastViewedRequestTimeout creates a UpdateLastViewedRequestTimeout with default headers values
func NewUpdateLastViewedRequestTimeout() *UpdateLastViewedRequestTimeout {
	return &UpdateLastViewedRequestTimeout{}
}

/*
UpdateLastViewedRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type UpdateLastViewedRequestTimeout struct {
}

// IsSuccess returns true when this update last viewed request timeout response has a 2xx status code
func (o *UpdateLastViewedRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last viewed request timeout response has a 3xx status code
func (o *UpdateLastViewedRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed request timeout response has a 4xx status code
func (o *UpdateLastViewedRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last viewed request timeout response has a 5xx status code
func (o *UpdateLastViewedRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed request timeout response a status code equal to that given
func (o *UpdateLastViewedRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the update last viewed request timeout response
func (o *UpdateLastViewedRequestTimeout) Code() int {
	return 408
}

func (o *UpdateLastViewedRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedRequestTimeout ", 408)
}

func (o *UpdateLastViewedRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedRequestTimeout ", 408)
}

func (o *UpdateLastViewedRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastViewedUnprocessableEntity creates a UpdateLastViewedUnprocessableEntity with default headers values
func NewUpdateLastViewedUnprocessableEntity() *UpdateLastViewedUnprocessableEntity {
	return &UpdateLastViewedUnprocessableEntity{}
}

/*
UpdateLastViewedUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateLastViewedUnprocessableEntity struct {
}

// IsSuccess returns true when this update last viewed unprocessable entity response has a 2xx status code
func (o *UpdateLastViewedUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last viewed unprocessable entity response has a 3xx status code
func (o *UpdateLastViewedUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last viewed unprocessable entity response has a 4xx status code
func (o *UpdateLastViewedUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last viewed unprocessable entity response has a 5xx status code
func (o *UpdateLastViewedUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update last viewed unprocessable entity response a status code equal to that given
func (o *UpdateLastViewedUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update last viewed unprocessable entity response
func (o *UpdateLastViewedUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateLastViewedUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedUnprocessableEntity ", 422)
}

func (o *UpdateLastViewedUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects/updateLastViewed][%d] updateLastViewedUnprocessableEntity ", 422)
}

func (o *UpdateLastViewedUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
