// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-neptune/internal/neptune/models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCreateProjectRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/projects] createProject", response, response.Code())
	}
}

// NewCreateProjectOK creates a CreateProjectOK with default headers values
func NewCreateProjectOK() *CreateProjectOK {
	return &CreateProjectOK{}
}

/*
CreateProjectOK describes a response with status code 200, with default header values.

OK
*/
type CreateProjectOK struct {
	Payload *models.ProjectWithRoleDTO
}

// IsSuccess returns true when this create project o k response has a 2xx status code
func (o *CreateProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project o k response has a 3xx status code
func (o *CreateProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project o k response has a 4xx status code
func (o *CreateProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project o k response has a 5xx status code
func (o *CreateProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create project o k response a status code equal to that given
func (o *CreateProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create project o k response
func (o *CreateProjectOK) Code() int {
	return 200
}

func (o *CreateProjectOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectOK  %+v", 200, o.Payload)
}

func (o *CreateProjectOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectOK  %+v", 200, o.Payload)
}

func (o *CreateProjectOK) GetPayload() *models.ProjectWithRoleDTO {
	return o.Payload
}

func (o *CreateProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectWithRoleDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/*
CreateProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateProjectBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create project bad request response has a 2xx status code
func (o *CreateProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project bad request response has a 3xx status code
func (o *CreateProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project bad request response has a 4xx status code
func (o *CreateProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project bad request response has a 5xx status code
func (o *CreateProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project bad request response a status code equal to that given
func (o *CreateProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create project bad request response
func (o *CreateProjectBadRequest) Code() int {
	return 400
}

func (o *CreateProjectBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUnauthorized creates a CreateProjectUnauthorized with default headers values
func NewCreateProjectUnauthorized() *CreateProjectUnauthorized {
	return &CreateProjectUnauthorized{}
}

/*
CreateProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectUnauthorized struct {
}

// IsSuccess returns true when this create project unauthorized response has a 2xx status code
func (o *CreateProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project unauthorized response has a 3xx status code
func (o *CreateProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project unauthorized response has a 4xx status code
func (o *CreateProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project unauthorized response has a 5xx status code
func (o *CreateProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create project unauthorized response a status code equal to that given
func (o *CreateProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create project unauthorized response
func (o *CreateProjectUnauthorized) Code() int {
	return 401
}

func (o *CreateProjectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectUnauthorized ", 401)
}

func (o *CreateProjectUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectUnauthorized ", 401)
}

func (o *CreateProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectForbidden creates a CreateProjectForbidden with default headers values
func NewCreateProjectForbidden() *CreateProjectForbidden {
	return &CreateProjectForbidden{}
}

/*
CreateProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectForbidden struct {
}

// IsSuccess returns true when this create project forbidden response has a 2xx status code
func (o *CreateProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project forbidden response has a 3xx status code
func (o *CreateProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project forbidden response has a 4xx status code
func (o *CreateProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project forbidden response has a 5xx status code
func (o *CreateProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create project forbidden response a status code equal to that given
func (o *CreateProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create project forbidden response
func (o *CreateProjectForbidden) Code() int {
	return 403
}

func (o *CreateProjectForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectForbidden ", 403)
}

func (o *CreateProjectForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectForbidden ", 403)
}

func (o *CreateProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectNotFound creates a CreateProjectNotFound with default headers values
func NewCreateProjectNotFound() *CreateProjectNotFound {
	return &CreateProjectNotFound{}
}

/*
CreateProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateProjectNotFound struct {
}

// IsSuccess returns true when this create project not found response has a 2xx status code
func (o *CreateProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project not found response has a 3xx status code
func (o *CreateProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project not found response has a 4xx status code
func (o *CreateProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project not found response has a 5xx status code
func (o *CreateProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create project not found response a status code equal to that given
func (o *CreateProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create project not found response
func (o *CreateProjectNotFound) Code() int {
	return 404
}

func (o *CreateProjectNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectNotFound ", 404)
}

func (o *CreateProjectNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectNotFound ", 404)
}

func (o *CreateProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectRequestTimeout creates a CreateProjectRequestTimeout with default headers values
func NewCreateProjectRequestTimeout() *CreateProjectRequestTimeout {
	return &CreateProjectRequestTimeout{}
}

/*
CreateProjectRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type CreateProjectRequestTimeout struct {
}

// IsSuccess returns true when this create project request timeout response has a 2xx status code
func (o *CreateProjectRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project request timeout response has a 3xx status code
func (o *CreateProjectRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project request timeout response has a 4xx status code
func (o *CreateProjectRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project request timeout response has a 5xx status code
func (o *CreateProjectRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this create project request timeout response a status code equal to that given
func (o *CreateProjectRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the create project request timeout response
func (o *CreateProjectRequestTimeout) Code() int {
	return 408
}

func (o *CreateProjectRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectRequestTimeout ", 408)
}

func (o *CreateProjectRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectRequestTimeout ", 408)
}

func (o *CreateProjectRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectUnprocessableEntity creates a CreateProjectUnprocessableEntity with default headers values
func NewCreateProjectUnprocessableEntity() *CreateProjectUnprocessableEntity {
	return &CreateProjectUnprocessableEntity{}
}

/*
CreateProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateProjectUnprocessableEntity struct {
}

// IsSuccess returns true when this create project unprocessable entity response has a 2xx status code
func (o *CreateProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project unprocessable entity response has a 3xx status code
func (o *CreateProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project unprocessable entity response has a 4xx status code
func (o *CreateProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project unprocessable entity response has a 5xx status code
func (o *CreateProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create project unprocessable entity response a status code equal to that given
func (o *CreateProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create project unprocessable entity response
func (o *CreateProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateProjectUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectUnprocessableEntity ", 422)
}

func (o *CreateProjectUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/projects][%d] createProjectUnprocessableEntity ", 422)
}

func (o *CreateProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
