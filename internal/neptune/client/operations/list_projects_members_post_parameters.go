// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListProjectsMembersPostParams creates a new ListProjectsMembersPostParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProjectsMembersPostParams() *ListProjectsMembersPostParams {
	return &ListProjectsMembersPostParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProjectsMembersPostParamsWithTimeout creates a new ListProjectsMembersPostParams object
// with the ability to set a timeout on a request.
func NewListProjectsMembersPostParamsWithTimeout(timeout time.Duration) *ListProjectsMembersPostParams {
	return &ListProjectsMembersPostParams{
		timeout: timeout,
	}
}

// NewListProjectsMembersPostParamsWithContext creates a new ListProjectsMembersPostParams object
// with the ability to set a context for a request.
func NewListProjectsMembersPostParamsWithContext(ctx context.Context) *ListProjectsMembersPostParams {
	return &ListProjectsMembersPostParams{
		Context: ctx,
	}
}

// NewListProjectsMembersPostParamsWithHTTPClient creates a new ListProjectsMembersPostParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProjectsMembersPostParamsWithHTTPClient(client *http.Client) *ListProjectsMembersPostParams {
	return &ListProjectsMembersPostParams{
		HTTPClient: client,
	}
}

/*
ListProjectsMembersPostParams contains all the parameters to send to the API endpoint

	for the list projects members post operation.

	Typically these are written to a http.Request.
*/
type ListProjectsMembersPostParams struct {

	// IncludeInvitations.
	//
	// Default: "Some(true)"
	IncludeInvitations *bool

	// ProjectIdentifiers.
	ProjectIdentifiers []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list projects members post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectsMembersPostParams) WithDefaults() *ListProjectsMembersPostParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list projects members post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectsMembersPostParams) SetDefaults() {
	var (
		includeInvitationsDefault = true
	)

	val := ListProjectsMembersPostParams{
		IncludeInvitations: &includeInvitationsDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the list projects members post params
func (o *ListProjectsMembersPostParams) WithTimeout(timeout time.Duration) *ListProjectsMembersPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list projects members post params
func (o *ListProjectsMembersPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list projects members post params
func (o *ListProjectsMembersPostParams) WithContext(ctx context.Context) *ListProjectsMembersPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list projects members post params
func (o *ListProjectsMembersPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list projects members post params
func (o *ListProjectsMembersPostParams) WithHTTPClient(client *http.Client) *ListProjectsMembersPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list projects members post params
func (o *ListProjectsMembersPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeInvitations adds the includeInvitations to the list projects members post params
func (o *ListProjectsMembersPostParams) WithIncludeInvitations(includeInvitations *bool) *ListProjectsMembersPostParams {
	o.SetIncludeInvitations(includeInvitations)
	return o
}

// SetIncludeInvitations adds the includeInvitations to the list projects members post params
func (o *ListProjectsMembersPostParams) SetIncludeInvitations(includeInvitations *bool) {
	o.IncludeInvitations = includeInvitations
}

// WithProjectIdentifiers adds the projectIdentifiers to the list projects members post params
func (o *ListProjectsMembersPostParams) WithProjectIdentifiers(projectIdentifiers []string) *ListProjectsMembersPostParams {
	o.SetProjectIdentifiers(projectIdentifiers)
	return o
}

// SetProjectIdentifiers adds the projectIdentifiers to the list projects members post params
func (o *ListProjectsMembersPostParams) SetProjectIdentifiers(projectIdentifiers []string) {
	o.ProjectIdentifiers = projectIdentifiers
}

// WriteToRequest writes these params to a swagger request
func (o *ListProjectsMembersPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeInvitations != nil {

		// query param includeInvitations
		var qrIncludeInvitations bool

		if o.IncludeInvitations != nil {
			qrIncludeInvitations = *o.IncludeInvitations
		}
		qIncludeInvitations := swag.FormatBool(qrIncludeInvitations)
		if qIncludeInvitations != "" {

			if err := r.SetQueryParam("includeInvitations", qIncludeInvitations); err != nil {
				return err
			}
		}
	}
	if o.ProjectIdentifiers != nil {
		if err := r.SetBodyParam(o.ProjectIdentifiers); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
