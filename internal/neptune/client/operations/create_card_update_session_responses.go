// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// CreateCardUpdateSessionReader is a Reader for the CreateCardUpdateSession structure.
type CreateCardUpdateSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCardUpdateSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCardUpdateSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCardUpdateSessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateCardUpdateSessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateCardUpdateSessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateCardUpdateSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCreateCardUpdateSessionRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateCardUpdateSessionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard] createCardUpdateSession", response, response.Code())
	}
}

// NewCreateCardUpdateSessionOK creates a CreateCardUpdateSessionOK with default headers values
func NewCreateCardUpdateSessionOK() *CreateCardUpdateSessionOK {
	return &CreateCardUpdateSessionOK{}
}

/*
CreateCardUpdateSessionOK describes a response with status code 200, with default header values.

OK
*/
type CreateCardUpdateSessionOK struct {
	Payload *models.SessionDTO
}

// IsSuccess returns true when this create card update session o k response has a 2xx status code
func (o *CreateCardUpdateSessionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create card update session o k response has a 3xx status code
func (o *CreateCardUpdateSessionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session o k response has a 4xx status code
func (o *CreateCardUpdateSessionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create card update session o k response has a 5xx status code
func (o *CreateCardUpdateSessionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session o k response a status code equal to that given
func (o *CreateCardUpdateSessionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create card update session o k response
func (o *CreateCardUpdateSessionOK) Code() int {
	return 200
}

func (o *CreateCardUpdateSessionOK) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionOK  %+v", 200, o.Payload)
}

func (o *CreateCardUpdateSessionOK) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionOK  %+v", 200, o.Payload)
}

func (o *CreateCardUpdateSessionOK) GetPayload() *models.SessionDTO {
	return o.Payload
}

func (o *CreateCardUpdateSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCardUpdateSessionBadRequest creates a CreateCardUpdateSessionBadRequest with default headers values
func NewCreateCardUpdateSessionBadRequest() *CreateCardUpdateSessionBadRequest {
	return &CreateCardUpdateSessionBadRequest{}
}

/*
CreateCardUpdateSessionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateCardUpdateSessionBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create card update session bad request response has a 2xx status code
func (o *CreateCardUpdateSessionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create card update session bad request response has a 3xx status code
func (o *CreateCardUpdateSessionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session bad request response has a 4xx status code
func (o *CreateCardUpdateSessionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create card update session bad request response has a 5xx status code
func (o *CreateCardUpdateSessionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session bad request response a status code equal to that given
func (o *CreateCardUpdateSessionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create card update session bad request response
func (o *CreateCardUpdateSessionBadRequest) Code() int {
	return 400
}

func (o *CreateCardUpdateSessionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCardUpdateSessionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateCardUpdateSessionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateCardUpdateSessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCardUpdateSessionUnauthorized creates a CreateCardUpdateSessionUnauthorized with default headers values
func NewCreateCardUpdateSessionUnauthorized() *CreateCardUpdateSessionUnauthorized {
	return &CreateCardUpdateSessionUnauthorized{}
}

/*
CreateCardUpdateSessionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateCardUpdateSessionUnauthorized struct {
}

// IsSuccess returns true when this create card update session unauthorized response has a 2xx status code
func (o *CreateCardUpdateSessionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create card update session unauthorized response has a 3xx status code
func (o *CreateCardUpdateSessionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session unauthorized response has a 4xx status code
func (o *CreateCardUpdateSessionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create card update session unauthorized response has a 5xx status code
func (o *CreateCardUpdateSessionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session unauthorized response a status code equal to that given
func (o *CreateCardUpdateSessionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create card update session unauthorized response
func (o *CreateCardUpdateSessionUnauthorized) Code() int {
	return 401
}

func (o *CreateCardUpdateSessionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionUnauthorized ", 401)
}

func (o *CreateCardUpdateSessionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionUnauthorized ", 401)
}

func (o *CreateCardUpdateSessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCardUpdateSessionForbidden creates a CreateCardUpdateSessionForbidden with default headers values
func NewCreateCardUpdateSessionForbidden() *CreateCardUpdateSessionForbidden {
	return &CreateCardUpdateSessionForbidden{}
}

/*
CreateCardUpdateSessionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateCardUpdateSessionForbidden struct {
}

// IsSuccess returns true when this create card update session forbidden response has a 2xx status code
func (o *CreateCardUpdateSessionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create card update session forbidden response has a 3xx status code
func (o *CreateCardUpdateSessionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session forbidden response has a 4xx status code
func (o *CreateCardUpdateSessionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create card update session forbidden response has a 5xx status code
func (o *CreateCardUpdateSessionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session forbidden response a status code equal to that given
func (o *CreateCardUpdateSessionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create card update session forbidden response
func (o *CreateCardUpdateSessionForbidden) Code() int {
	return 403
}

func (o *CreateCardUpdateSessionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionForbidden ", 403)
}

func (o *CreateCardUpdateSessionForbidden) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionForbidden ", 403)
}

func (o *CreateCardUpdateSessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCardUpdateSessionNotFound creates a CreateCardUpdateSessionNotFound with default headers values
func NewCreateCardUpdateSessionNotFound() *CreateCardUpdateSessionNotFound {
	return &CreateCardUpdateSessionNotFound{}
}

/*
CreateCardUpdateSessionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateCardUpdateSessionNotFound struct {
}

// IsSuccess returns true when this create card update session not found response has a 2xx status code
func (o *CreateCardUpdateSessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create card update session not found response has a 3xx status code
func (o *CreateCardUpdateSessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session not found response has a 4xx status code
func (o *CreateCardUpdateSessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create card update session not found response has a 5xx status code
func (o *CreateCardUpdateSessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session not found response a status code equal to that given
func (o *CreateCardUpdateSessionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create card update session not found response
func (o *CreateCardUpdateSessionNotFound) Code() int {
	return 404
}

func (o *CreateCardUpdateSessionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionNotFound ", 404)
}

func (o *CreateCardUpdateSessionNotFound) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionNotFound ", 404)
}

func (o *CreateCardUpdateSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCardUpdateSessionRequestTimeout creates a CreateCardUpdateSessionRequestTimeout with default headers values
func NewCreateCardUpdateSessionRequestTimeout() *CreateCardUpdateSessionRequestTimeout {
	return &CreateCardUpdateSessionRequestTimeout{}
}

/*
CreateCardUpdateSessionRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type CreateCardUpdateSessionRequestTimeout struct {
}

// IsSuccess returns true when this create card update session request timeout response has a 2xx status code
func (o *CreateCardUpdateSessionRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create card update session request timeout response has a 3xx status code
func (o *CreateCardUpdateSessionRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session request timeout response has a 4xx status code
func (o *CreateCardUpdateSessionRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this create card update session request timeout response has a 5xx status code
func (o *CreateCardUpdateSessionRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session request timeout response a status code equal to that given
func (o *CreateCardUpdateSessionRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the create card update session request timeout response
func (o *CreateCardUpdateSessionRequestTimeout) Code() int {
	return 408
}

func (o *CreateCardUpdateSessionRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionRequestTimeout ", 408)
}

func (o *CreateCardUpdateSessionRequestTimeout) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionRequestTimeout ", 408)
}

func (o *CreateCardUpdateSessionRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCardUpdateSessionUnprocessableEntity creates a CreateCardUpdateSessionUnprocessableEntity with default headers values
func NewCreateCardUpdateSessionUnprocessableEntity() *CreateCardUpdateSessionUnprocessableEntity {
	return &CreateCardUpdateSessionUnprocessableEntity{}
}

/*
CreateCardUpdateSessionUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateCardUpdateSessionUnprocessableEntity struct {
}

// IsSuccess returns true when this create card update session unprocessable entity response has a 2xx status code
func (o *CreateCardUpdateSessionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create card update session unprocessable entity response has a 3xx status code
func (o *CreateCardUpdateSessionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create card update session unprocessable entity response has a 4xx status code
func (o *CreateCardUpdateSessionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create card update session unprocessable entity response has a 5xx status code
func (o *CreateCardUpdateSessionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create card update session unprocessable entity response a status code equal to that given
func (o *CreateCardUpdateSessionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create card update session unprocessable entity response
func (o *CreateCardUpdateSessionUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateCardUpdateSessionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionUnprocessableEntity ", 422)
}

func (o *CreateCardUpdateSessionUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/backend/v1/payments/{organizationIdentifier}/creditCard][%d] createCardUpdateSessionUnprocessableEntity ", 422)
}

func (o *CreateCardUpdateSessionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
