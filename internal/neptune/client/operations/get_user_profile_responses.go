// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetUserProfileReader is a Reader for the GetUserProfile structure.
type GetUserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetUserProfileRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUserProfileUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/userProfile] getUserProfile", response, response.Code())
	}
}

// NewGetUserProfileOK creates a GetUserProfileOK with default headers values
func NewGetUserProfileOK() *GetUserProfileOK {
	return &GetUserProfileOK{}
}

/*
GetUserProfileOK describes a response with status code 200, with default header values.

OK
*/
type GetUserProfileOK struct {
	Payload *models.UserProfileDTO
}

// IsSuccess returns true when this get user profile o k response has a 2xx status code
func (o *GetUserProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user profile o k response has a 3xx status code
func (o *GetUserProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile o k response has a 4xx status code
func (o *GetUserProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user profile o k response has a 5xx status code
func (o *GetUserProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile o k response a status code equal to that given
func (o *GetUserProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user profile o k response
func (o *GetUserProfileOK) Code() int {
	return 200
}

func (o *GetUserProfileOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileOK  %+v", 200, o.Payload)
}

func (o *GetUserProfileOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileOK  %+v", 200, o.Payload)
}

func (o *GetUserProfileOK) GetPayload() *models.UserProfileDTO {
	return o.Payload
}

func (o *GetUserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserProfileDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileBadRequest creates a GetUserProfileBadRequest with default headers values
func NewGetUserProfileBadRequest() *GetUserProfileBadRequest {
	return &GetUserProfileBadRequest{}
}

/*
GetUserProfileBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUserProfileBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user profile bad request response has a 2xx status code
func (o *GetUserProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile bad request response has a 3xx status code
func (o *GetUserProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile bad request response has a 4xx status code
func (o *GetUserProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile bad request response has a 5xx status code
func (o *GetUserProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile bad request response a status code equal to that given
func (o *GetUserProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user profile bad request response
func (o *GetUserProfileBadRequest) Code() int {
	return 400
}

func (o *GetUserProfileBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserProfileBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserProfileBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileUnauthorized creates a GetUserProfileUnauthorized with default headers values
func NewGetUserProfileUnauthorized() *GetUserProfileUnauthorized {
	return &GetUserProfileUnauthorized{}
}

/*
GetUserProfileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetUserProfileUnauthorized struct {
}

// IsSuccess returns true when this get user profile unauthorized response has a 2xx status code
func (o *GetUserProfileUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile unauthorized response has a 3xx status code
func (o *GetUserProfileUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile unauthorized response has a 4xx status code
func (o *GetUserProfileUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile unauthorized response has a 5xx status code
func (o *GetUserProfileUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile unauthorized response a status code equal to that given
func (o *GetUserProfileUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get user profile unauthorized response
func (o *GetUserProfileUnauthorized) Code() int {
	return 401
}

func (o *GetUserProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileUnauthorized ", 401)
}

func (o *GetUserProfileUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileUnauthorized ", 401)
}

func (o *GetUserProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileForbidden creates a GetUserProfileForbidden with default headers values
func NewGetUserProfileForbidden() *GetUserProfileForbidden {
	return &GetUserProfileForbidden{}
}

/*
GetUserProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserProfileForbidden struct {
}

// IsSuccess returns true when this get user profile forbidden response has a 2xx status code
func (o *GetUserProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile forbidden response has a 3xx status code
func (o *GetUserProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile forbidden response has a 4xx status code
func (o *GetUserProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile forbidden response has a 5xx status code
func (o *GetUserProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile forbidden response a status code equal to that given
func (o *GetUserProfileForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get user profile forbidden response
func (o *GetUserProfileForbidden) Code() int {
	return 403
}

func (o *GetUserProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileForbidden ", 403)
}

func (o *GetUserProfileForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileForbidden ", 403)
}

func (o *GetUserProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileNotFound creates a GetUserProfileNotFound with default headers values
func NewGetUserProfileNotFound() *GetUserProfileNotFound {
	return &GetUserProfileNotFound{}
}

/*
GetUserProfileNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserProfileNotFound struct {
}

// IsSuccess returns true when this get user profile not found response has a 2xx status code
func (o *GetUserProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile not found response has a 3xx status code
func (o *GetUserProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile not found response has a 4xx status code
func (o *GetUserProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile not found response has a 5xx status code
func (o *GetUserProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile not found response a status code equal to that given
func (o *GetUserProfileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user profile not found response
func (o *GetUserProfileNotFound) Code() int {
	return 404
}

func (o *GetUserProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileNotFound ", 404)
}

func (o *GetUserProfileNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileNotFound ", 404)
}

func (o *GetUserProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileRequestTimeout creates a GetUserProfileRequestTimeout with default headers values
func NewGetUserProfileRequestTimeout() *GetUserProfileRequestTimeout {
	return &GetUserProfileRequestTimeout{}
}

/*
GetUserProfileRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetUserProfileRequestTimeout struct {
}

// IsSuccess returns true when this get user profile request timeout response has a 2xx status code
func (o *GetUserProfileRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile request timeout response has a 3xx status code
func (o *GetUserProfileRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile request timeout response has a 4xx status code
func (o *GetUserProfileRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile request timeout response has a 5xx status code
func (o *GetUserProfileRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile request timeout response a status code equal to that given
func (o *GetUserProfileRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get user profile request timeout response
func (o *GetUserProfileRequestTimeout) Code() int {
	return 408
}

func (o *GetUserProfileRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileRequestTimeout ", 408)
}

func (o *GetUserProfileRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileRequestTimeout ", 408)
}

func (o *GetUserProfileRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserProfileUnprocessableEntity creates a GetUserProfileUnprocessableEntity with default headers values
func NewGetUserProfileUnprocessableEntity() *GetUserProfileUnprocessableEntity {
	return &GetUserProfileUnprocessableEntity{}
}

/*
GetUserProfileUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUserProfileUnprocessableEntity struct {
}

// IsSuccess returns true when this get user profile unprocessable entity response has a 2xx status code
func (o *GetUserProfileUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user profile unprocessable entity response has a 3xx status code
func (o *GetUserProfileUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user profile unprocessable entity response has a 4xx status code
func (o *GetUserProfileUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user profile unprocessable entity response has a 5xx status code
func (o *GetUserProfileUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get user profile unprocessable entity response a status code equal to that given
func (o *GetUserProfileUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get user profile unprocessable entity response
func (o *GetUserProfileUnprocessableEntity) Code() int {
	return 422
}

func (o *GetUserProfileUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileUnprocessableEntity ", 422)
}

func (o *GetUserProfileUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/userProfile][%d] getUserProfileUnprocessableEntity ", 422)
}

func (o *GetUserProfileUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
