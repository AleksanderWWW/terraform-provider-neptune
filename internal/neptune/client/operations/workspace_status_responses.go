// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// WorkspaceStatusReader is a Reader for the WorkspaceStatus structure.
type WorkspaceStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkspaceStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWorkspaceStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewWorkspaceStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewWorkspaceStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewWorkspaceStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewWorkspaceStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewWorkspaceStatusRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewWorkspaceStatusUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/backend/v1/payments/{organizationIdentifier}/status] workspaceStatus", response, response.Code())
	}
}

// NewWorkspaceStatusOK creates a WorkspaceStatusOK with default headers values
func NewWorkspaceStatusOK() *WorkspaceStatusOK {
	return &WorkspaceStatusOK{}
}

/*
WorkspaceStatusOK describes a response with status code 200, with default header values.

OK
*/
type WorkspaceStatusOK struct {
	Payload *models.WorkspaceStatusDTO
}

// IsSuccess returns true when this workspace status o k response has a 2xx status code
func (o *WorkspaceStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workspace status o k response has a 3xx status code
func (o *WorkspaceStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status o k response has a 4xx status code
func (o *WorkspaceStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this workspace status o k response has a 5xx status code
func (o *WorkspaceStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status o k response a status code equal to that given
func (o *WorkspaceStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the workspace status o k response
func (o *WorkspaceStatusOK) Code() int {
	return 200
}

func (o *WorkspaceStatusOK) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusOK  %+v", 200, o.Payload)
}

func (o *WorkspaceStatusOK) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusOK  %+v", 200, o.Payload)
}

func (o *WorkspaceStatusOK) GetPayload() *models.WorkspaceStatusDTO {
	return o.Payload
}

func (o *WorkspaceStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkspaceStatusDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkspaceStatusBadRequest creates a WorkspaceStatusBadRequest with default headers values
func NewWorkspaceStatusBadRequest() *WorkspaceStatusBadRequest {
	return &WorkspaceStatusBadRequest{}
}

/*
WorkspaceStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type WorkspaceStatusBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this workspace status bad request response has a 2xx status code
func (o *WorkspaceStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workspace status bad request response has a 3xx status code
func (o *WorkspaceStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status bad request response has a 4xx status code
func (o *WorkspaceStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this workspace status bad request response has a 5xx status code
func (o *WorkspaceStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status bad request response a status code equal to that given
func (o *WorkspaceStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the workspace status bad request response
func (o *WorkspaceStatusBadRequest) Code() int {
	return 400
}

func (o *WorkspaceStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusBadRequest  %+v", 400, o.Payload)
}

func (o *WorkspaceStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusBadRequest  %+v", 400, o.Payload)
}

func (o *WorkspaceStatusBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *WorkspaceStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkspaceStatusUnauthorized creates a WorkspaceStatusUnauthorized with default headers values
func NewWorkspaceStatusUnauthorized() *WorkspaceStatusUnauthorized {
	return &WorkspaceStatusUnauthorized{}
}

/*
WorkspaceStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type WorkspaceStatusUnauthorized struct {
}

// IsSuccess returns true when this workspace status unauthorized response has a 2xx status code
func (o *WorkspaceStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workspace status unauthorized response has a 3xx status code
func (o *WorkspaceStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status unauthorized response has a 4xx status code
func (o *WorkspaceStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this workspace status unauthorized response has a 5xx status code
func (o *WorkspaceStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status unauthorized response a status code equal to that given
func (o *WorkspaceStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the workspace status unauthorized response
func (o *WorkspaceStatusUnauthorized) Code() int {
	return 401
}

func (o *WorkspaceStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusUnauthorized ", 401)
}

func (o *WorkspaceStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusUnauthorized ", 401)
}

func (o *WorkspaceStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWorkspaceStatusForbidden creates a WorkspaceStatusForbidden with default headers values
func NewWorkspaceStatusForbidden() *WorkspaceStatusForbidden {
	return &WorkspaceStatusForbidden{}
}

/*
WorkspaceStatusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type WorkspaceStatusForbidden struct {
}

// IsSuccess returns true when this workspace status forbidden response has a 2xx status code
func (o *WorkspaceStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workspace status forbidden response has a 3xx status code
func (o *WorkspaceStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status forbidden response has a 4xx status code
func (o *WorkspaceStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this workspace status forbidden response has a 5xx status code
func (o *WorkspaceStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status forbidden response a status code equal to that given
func (o *WorkspaceStatusForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the workspace status forbidden response
func (o *WorkspaceStatusForbidden) Code() int {
	return 403
}

func (o *WorkspaceStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusForbidden ", 403)
}

func (o *WorkspaceStatusForbidden) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusForbidden ", 403)
}

func (o *WorkspaceStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWorkspaceStatusNotFound creates a WorkspaceStatusNotFound with default headers values
func NewWorkspaceStatusNotFound() *WorkspaceStatusNotFound {
	return &WorkspaceStatusNotFound{}
}

/*
WorkspaceStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type WorkspaceStatusNotFound struct {
}

// IsSuccess returns true when this workspace status not found response has a 2xx status code
func (o *WorkspaceStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workspace status not found response has a 3xx status code
func (o *WorkspaceStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status not found response has a 4xx status code
func (o *WorkspaceStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this workspace status not found response has a 5xx status code
func (o *WorkspaceStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status not found response a status code equal to that given
func (o *WorkspaceStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the workspace status not found response
func (o *WorkspaceStatusNotFound) Code() int {
	return 404
}

func (o *WorkspaceStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusNotFound ", 404)
}

func (o *WorkspaceStatusNotFound) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusNotFound ", 404)
}

func (o *WorkspaceStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWorkspaceStatusRequestTimeout creates a WorkspaceStatusRequestTimeout with default headers values
func NewWorkspaceStatusRequestTimeout() *WorkspaceStatusRequestTimeout {
	return &WorkspaceStatusRequestTimeout{}
}

/*
WorkspaceStatusRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type WorkspaceStatusRequestTimeout struct {
}

// IsSuccess returns true when this workspace status request timeout response has a 2xx status code
func (o *WorkspaceStatusRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workspace status request timeout response has a 3xx status code
func (o *WorkspaceStatusRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status request timeout response has a 4xx status code
func (o *WorkspaceStatusRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this workspace status request timeout response has a 5xx status code
func (o *WorkspaceStatusRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status request timeout response a status code equal to that given
func (o *WorkspaceStatusRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the workspace status request timeout response
func (o *WorkspaceStatusRequestTimeout) Code() int {
	return 408
}

func (o *WorkspaceStatusRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusRequestTimeout ", 408)
}

func (o *WorkspaceStatusRequestTimeout) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusRequestTimeout ", 408)
}

func (o *WorkspaceStatusRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWorkspaceStatusUnprocessableEntity creates a WorkspaceStatusUnprocessableEntity with default headers values
func NewWorkspaceStatusUnprocessableEntity() *WorkspaceStatusUnprocessableEntity {
	return &WorkspaceStatusUnprocessableEntity{}
}

/*
WorkspaceStatusUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type WorkspaceStatusUnprocessableEntity struct {
}

// IsSuccess returns true when this workspace status unprocessable entity response has a 2xx status code
func (o *WorkspaceStatusUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this workspace status unprocessable entity response has a 3xx status code
func (o *WorkspaceStatusUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace status unprocessable entity response has a 4xx status code
func (o *WorkspaceStatusUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this workspace status unprocessable entity response has a 5xx status code
func (o *WorkspaceStatusUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace status unprocessable entity response a status code equal to that given
func (o *WorkspaceStatusUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the workspace status unprocessable entity response
func (o *WorkspaceStatusUnprocessableEntity) Code() int {
	return 422
}

func (o *WorkspaceStatusUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusUnprocessableEntity ", 422)
}

func (o *WorkspaceStatusUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/backend/v1/payments/{organizationIdentifier}/status][%d] workspaceStatusUnprocessableEntity ", 422)
}

func (o *WorkspaceStatusUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
