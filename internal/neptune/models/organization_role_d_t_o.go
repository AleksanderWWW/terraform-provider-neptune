// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OrganizationRoleDTO organization role d t o
//
// swagger:model OrganizationRoleDTO
type OrganizationRoleDTO string

func NewOrganizationRoleDTO(value OrganizationRoleDTO) *OrganizationRoleDTO {
	return &value
}

// Pointer returns a pointer to a freshly-allocated OrganizationRoleDTO.
func (m OrganizationRoleDTO) Pointer() *OrganizationRoleDTO {
	return &m
}

const (

	// OrganizationRoleDTOMember captures enum value "member"
	OrganizationRoleDTOMember OrganizationRoleDTO = "member"

	// OrganizationRoleDTOOwner captures enum value "owner"
	OrganizationRoleDTOOwner OrganizationRoleDTO = "owner"
)

// for schema
var organizationRoleDTOEnum []interface{}

func init() {
	var res []OrganizationRoleDTO
	if err := json.Unmarshal([]byte(`["member","owner"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		organizationRoleDTOEnum = append(organizationRoleDTOEnum, v)
	}
}

func (m OrganizationRoleDTO) validateOrganizationRoleDTOEnum(path, location string, value OrganizationRoleDTO) error {
	if err := validate.EnumCase(path, location, value, organizationRoleDTOEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this organization role d t o
func (m OrganizationRoleDTO) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrganizationRoleDTOEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this organization role d t o based on context it is used
func (m OrganizationRoleDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
