// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UUID UUID
//
// swagger:model UUID
type UUID struct {

	// least sig bits
	// Required: true
	LeastSigBits *int64 `json:"leastSigBits"`

	// most sig bits
	// Required: true
	MostSigBits *int64 `json:"mostSigBits"`
}

// Validate validates this UUID
func (m *UUID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLeastSigBits(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMostSigBits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UUID) validateLeastSigBits(formats strfmt.Registry) error {

	if err := validate.Required("leastSigBits", "body", m.LeastSigBits); err != nil {
		return err
	}

	return nil
}

func (m *UUID) validateMostSigBits(formats strfmt.Registry) error {

	if err := validate.Required("mostSigBits", "body", m.MostSigBits); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this UUID based on context it is used
func (m *UUID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UUID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UUID) UnmarshalBinary(b []byte) error {
	var res UUID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
