// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ProjectVisibilityDTO project visibility d t o
//
// swagger:model ProjectVisibilityDTO
type ProjectVisibilityDTO string

func NewProjectVisibilityDTO(value ProjectVisibilityDTO) *ProjectVisibilityDTO {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ProjectVisibilityDTO.
func (m ProjectVisibilityDTO) Pointer() *ProjectVisibilityDTO {
	return &m
}

const (

	// ProjectVisibilityDTOPriv captures enum value "priv"
	ProjectVisibilityDTOPriv ProjectVisibilityDTO = "priv"

	// ProjectVisibilityDTOPub captures enum value "pub"
	ProjectVisibilityDTOPub ProjectVisibilityDTO = "pub"

	// ProjectVisibilityDTOWorkspace captures enum value "workspace"
	ProjectVisibilityDTOWorkspace ProjectVisibilityDTO = "workspace"
)

// for schema
var projectVisibilityDTOEnum []interface{}

func init() {
	var res []ProjectVisibilityDTO
	if err := json.Unmarshal([]byte(`["priv","pub","workspace"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		projectVisibilityDTOEnum = append(projectVisibilityDTOEnum, v)
	}
}

func (m ProjectVisibilityDTO) validateProjectVisibilityDTOEnum(path, location string, value ProjectVisibilityDTO) error {
	if err := validate.EnumCase(path, location, value, projectVisibilityDTOEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this project visibility d t o
func (m ProjectVisibilityDTO) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProjectVisibilityDTOEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this project visibility d t o based on context it is used
func (m ProjectVisibilityDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
