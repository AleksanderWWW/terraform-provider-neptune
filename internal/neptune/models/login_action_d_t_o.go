// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LoginActionDTO login action d t o
//
// swagger:model LoginActionDTO
type LoginActionDTO string

func NewLoginActionDTO(value LoginActionDTO) *LoginActionDTO {
	return &value
}

// Pointer returns a pointer to a freshly-allocated LoginActionDTO.
func (m LoginActionDTO) Pointer() *LoginActionDTO {
	return &m
}

const (

	// LoginActionDTOSETUSERNAME captures enum value "SET_USERNAME"
	LoginActionDTOSETUSERNAME LoginActionDTO = "SET_USERNAME"

	// LoginActionDTOSURVEY captures enum value "SURVEY"
	LoginActionDTOSURVEY LoginActionDTO = "SURVEY"
)

// for schema
var loginActionDTOEnum []interface{}

func init() {
	var res []LoginActionDTO
	if err := json.Unmarshal([]byte(`["SET_USERNAME","SURVEY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		loginActionDTOEnum = append(loginActionDTOEnum, v)
	}
}

func (m LoginActionDTO) validateLoginActionDTOEnum(path, location string, value LoginActionDTO) error {
	if err := validate.EnumCase(path, location, value, loginActionDTOEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this login action d t o
func (m LoginActionDTO) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLoginActionDTOEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this login action d t o based on context it is used
func (m LoginActionDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
